[
  {
    "name": "check_limit",
    "lines": 100000,
    "structure": [
      {
        "name": "col1_val_0_1",
        "type": "smallint"
      },
      {
        "name": "col2_val_0_2",
        "type": "tinyint"
      },
      {
        "name": "col3_val_0_2",
        "type": "tinyint"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "col1_val_0_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col2_val_0_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col3_val_0_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "session_properties": {
      "enable_import_export": false
    },
    "warm_query": "select * from check_limit where col1_val_0_1=1 and col2_val_0_2=2 and col3_val_0_2=1",
    "data": "resources/synthetic/check_limit.jsonl",
    "pt_enable": true,
    "skip_caching": true,
    "queries_data": [
      {
        "query": "select avg(I.col1_val_0_1),avg(I.col2_val_0_2),avg(I.col3_val_0_2) from (select * from check_limit where col1_val_0_1=1 and col2_val_0_2=2 and col3_val_0_2=2 limit 1000) as I",
        "expected_result": [
          1.0,
          2.0,
          2.0
        ],
        "query_id": "check_limit_1",
        "expected_counters": {
          "varada_match_columns": 3,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from check_limit",
        "expected_result": [
          100000
        ],
        "query_id": "check_limit_2",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "view_properties": {
      "view_name": "view_check_limit",
      "create_view_query": "select avg(col1_val_0_1) / 2 as col_1, min(col2_val_0_2) as col_2 from check_limit where col3_val_0_2 <= 10",
      "queries_data": [
        {
          "query": "select * from view_check_limit",
          "query_id": "view_check_limit_01",
          "expected_result": [
            [
              0.250835,
              0
            ]
          ],
          "expected_counters": {
            "varada_match_columns": 1,
            "varada_collect_columns": 2,
            "external_match_columns": 0,
            "external_collect_columns": 0
          }
        }
      ]
    }
  },
  {
    "name": "mac_paramsj",
    "lines": 4,
    "structure": [
      {
        "name": "Id",
        "type": "integer"
      },
      {
        "name": "Model",
        "type": "varchar",
        "args": [
          65535
        ]
      },
      {
        "name": "Year",
        "type": "bigint"
      },
      {
        "name": "ScreenSize",
        "type": "varchar",
        "args": [
          20
        ]
      },
      {
        "name": "RAM",
        "type": "varchar",
        "args": [
          5
        ]
      },
      {
        "name": "HDD",
        "type": "varchar",
        "args": [
          10
        ]
      },
      {
        "name": "W",
        "type": "double"
      },
      {
        "name": "D",
        "type": "double"
      },
      {
        "name": "H",
        "type": "double"
      },
      {
        "name": "Weight",
        "type": "double"
      }
    ],
    "analyze": true,
    "pt_enable": true,
    "warmup_rules": [
      {
        "colNameId": "Id",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_BLOOM_HIGH"
        ]
      },
      {
        "colNameId": "Model",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "Year",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "ScreenSize",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "RAM",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "HDD",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "W",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "D",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "H",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "Weight",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "record_length": {
      "model": 11,
      "screensize": 4
    },
    "session_properties": {
      "enable_import_export": false
    },
    "warm_query": "select * from mac_paramsj",
    "queries_data": [
      {
        "query": "select * from mac_paramsj",
        "query_id": "mac_paramsj_01",
        "expected_result": [
          "IGNORE"
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj",
        "query_id": "mac_paramsj_02",
        "expected_result": [
          4
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select * from mac_paramsj where id=1",
        "query_id": "mac_paramsj_03",
        "expected_result": [
          1,
          "MacBook Pro",
          2015,
          "15",
          "16GB",
          "512GB SSD",
          13.75,
          9.48,
          0.61,
          4.02
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 9,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select year from mac_paramsj group by year order by year",
        "query_id": "mac_paramsj_04",
        "expected_result": [
          [
            2015
          ],
          [
            2016
          ],
          [
            2017
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select year,weight from mac_paramsj group by year, weight HAVING weight<2.5",
        "query_id": "mac_paramsj_05",
        "expected_result": [
          2016,
          2.03
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "varada_match_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(DISTINCT year) from mac_paramsj",
        "query_id": "mac_paramsj_06",
        "expected_result": [
          3
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select distinct year, CASE when year=2015 then 'MS' else 'LP' END as name from mac_paramsj order by year",
        "query_id": "mac_paramsj_07",
        "expected_result": [
          [
            2015,
            "MS"
          ],
          [
            2016,
            "LP"
          ],
          [
            2017,
            "LP"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where CAST(screensize as double)>14",
        "query_id": "mac_paramsj_08",
        "expected_result": [
          2
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select year from mac_paramsj where Model<>'MacBook' order by year",
        "query_id": "mac_paramsj_09",
        "expected_result": [
          [
            2015
          ],
          [
            2016
          ],
          [
            2017
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where Model is not null",
        "query_id": "mac_paramsj_10",
        "expected_result": [
          4
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select h,weight from mac_paramsj where d<8 and w<>0",
        "query_id": "mac_paramsj_11",
        "expected_result": [
          0.52,
          2.03
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 4,
          "prefilled_collect_columns": 0,
          "external_match_columns": 1,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(length(model)) from mac_paramsj",
        "query_id": "mac_paramsj_12",
        "expected_result": [
          11
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select year from mac_paramsj where substring(model, 1) = 'MacBook Pro'",
        "query_id": "mac_paramsj_13",
        "expected_result": [
          2015
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select year from mac_paramsj where substr(model, 1) = 'MacBook Pro'",
        "query_id": "mac_paramsj_14",
        "expected_result": [
          2015
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(model)  from mac_paramsj where strpos(model,  'Book') = 4",
        "query_id": "mac_paramsj_15",
        "expected_result": [
          3
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select year  from mac_paramsj where strpos(model, 'Book') = 0",
        "query_id": "mac_paramsj_16",
        "expected_result": [
          2017
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where substr(model, 8) = 'MacBook Pro'",
        "query_id": "mac_paramsj_17",
        "expected_result": [
          0
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select screensize from mac_paramsj where strpos(model, 'Book') = 4 and substr(screensize, 2) = '5'",
        "query_id": "mac_paramsj_18",
        "expected_result": [
          "15"
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model from mac_paramsj where strpos(model, 'Book') =  4 and model like '%Pro%%'",
        "query_id": "mac_paramsj_19",
        "expected_result": [
          "MacBook Pro"
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model from mac_paramsj where substr(model, 1) = 'iMac' or model = 'MacBook'",
        "query_id": "mac_paramsj_20",
        "expected_result": [
          [
            "MacBook"
          ],
          [
            "iMac"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(model) from mac_paramsj where strpos(model, 'Book', -1) = 4",
        "query_id": "mac_paramsj_21",
        "expected_result": [
          3
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where substr(model, 1, 4) = 'iMac'",
        "query_id": "mac_paramsj_22",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where substring(model, 1, 4) = 'iMac'",
        "query_id": "mac_paramsj_23",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where starts_with(model, 'i')",
        "query_id": "mac_paramsj_24",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where starts_with(model, 'a')",
        "query_id": "mac_paramsj_25",
        "expected_result": [
          0
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select strpos(model, 'Air') from mac_paramsj where starts_with(model, 'M')",
        "query_id": "mac_paramsj_26",
        "expected_result": [
          [
            0
          ],
          [
            0
          ],
          [
            9
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model from mac_paramsj where strpos(model, 'o', 2) = 6 and strpos(model, 'o', 3) = 11",
        "query_id": "mac_paramsj_27",
        "expected_result": [
          [
            "MacBook Pro"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model from mac_paramsj where strpos(model, 'A', 50) = 6 or strpos(model, 'o', 3) = 11",
        "query_id": "mac_paramsj_28",
        "expected_result": [
          [
            "MacBook Pro"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model from mac_paramsj where strpos(substr(model,2), 'o', 3) = 10",
        "query_id": "mac_paramsj_29",
        "expected_result": [
          [
            "MacBook Pro"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select distinct substr(hdd, -3) from mac_paramsj",
        "query_id": "mac_paramsj_30",
        "expected_result": [
          [
            "SSD"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select substr(hdd, 1, 3) from mac_paramsj WHERE CAST(substring(hdd, 1, 3) AS integer)>200 and model like 'Mac%'",
        "query_id": "mac_paramsj_31",
        "expected_result": [
          [
            "512"
          ],
          [
            "256"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model  from mac_paramsj where substr(model, -3, 2) IN ('Pr','Ai')",
        "query_id": "mac_paramsj_32",
        "expected_result": [
          [
            "MacBook Pro"
          ],
          [
            "MacBook Air"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model from mac_paramsj where substring(model, -3, 3) IN ('Pro','Bla')",
        "query_id": "mac_paramsj_33",
        "expected_result": [
          [
            "MacBook Pro"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model from mac_paramsj where split_part(model, 'P', 2) = 'ro'",
        "query_id": "mac_paramsj_34",
        "expected_result": [
          [
            "MacBook Pro"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where split_part(model, 'Book', 1) in ('Mac', 'iMac')",
        "query_id": "mac_paramsj_35",
        "expected_result": [
          4
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from mac_paramsj where split_part(model, 'Book', 1) in ('Mac', 'iMac') AND weight > 3",
        "query_id": "mac_paramsj_36",
        "expected_result": [
          2
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0,
          "non_trivial_alternative_chosen": 1
        }
      }
    ],
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 6
    },
    "view_properties": {
      "view_name": "view_mac_paramsj",
      "create_view_query": "select hdd, model from mac_paramsj",
      "queries_data": [
        {
          "query": "select count(hdd) from view_mac_paramsj",
          "query_id": "view_mac_paramsj_01",
          "expected_result": [
            4
          ],
          "expected_counters": {
            "varada_match_columns": 0,
            "varada_collect_columns": 1,
            "external_match_columns": 0,
            "external_collect_columns": 0
          }
        },
        {
          "query": "select hdd, model from view_mac_paramsj where hdd LIKE '%TB%'",
          "query_id": "view_mac_paramsj_02",
          "expected_result": [
            [
              "1TB SSD",
              "iMac"
            ]
          ],
          "expected_counters": {
            "varada_match_columns": 1,
            "varada_collect_columns": 2,
            "external_match_columns": 0,
            "external_collect_columns": 0
          }
        }
      ]
    },
    "data": "resources/synthetic/mac_paramsj.jsonl"
  },
  {
    "name": "mac_paramsj_no_dict",
    "structure": [
      {
        "name": "Id",
        "type": "integer"
      },
      {
        "name": "Model",
        "type": "varchar",
        "args": [
          65535
        ]
      },
      {
        "name": "Year",
        "type": "bigint"
      },
      {
        "name": "ScreenSize",
        "type": "varchar",
        "args": [
          20
        ]
      },
      {
        "name": "RAM",
        "type": "varchar",
        "args": [
          5
        ]
      },
      {
        "name": "HDD",
        "type": "varchar",
        "args": [
          10
        ]
      },
      {
        "name": "W",
        "type": "double"
      },
      {
        "name": "D",
        "type": "double"
      },
      {
        "name": "H",
        "type": "double"
      },
      {
        "name": "Weight",
        "type": "double"
      }
    ],
    "pt_enable": true,
    "session_properties": {
      "enable_dictionary": false
    },
    "warmup_rules": [
      {
        "colNameId": "Id",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_BLOOM_HIGH"
        ]
      },
      {
        "colNameId": "Model",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "Year",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "ScreenSize",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "RAM",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "HDD",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "W",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "D",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "H",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "Weight",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select * from mac_paramsj_no_dict",
    "queries_data": [
      {
        "query": "select count(*) from mac_paramsj_no_dict",
        "query_id": "mac_paramsj_no_dict_01",
        "expected_result": [
          4
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select * from mac_paramsj_no_dict where id=1",
        "query_id": "mac_paramsj_no_dict_02",
        "expected_result": [
          1,
          "MacBook Pro",
          2015,
          "15",
          "16GB",
          "512GB SSD",
          13.75,
          9.48,
          0.61,
          4.02
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 9,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select model from mac_paramsj_no_dict where substr(model, 1) = 'iMac' or model = 'MacBook'",
        "query_id": "mac_paramsj_no_dict_03",
        "expected_result": [
          [
            "MacBook"
          ],
          [
            "iMac"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "onem_lines",
    "partitions": 1000,
    "lines": 1000000,
    "range_filter": "int_1",
    "structure": [
      {
        "name": "int_1",
        "type": "integer"
      },
      {
        "name": "bigint_2",
        "type": "bigint"
      },
      {
        "name": "smallint_3",
        "type": "smallint"
      },
      {
        "name": "tinyint_4",
        "type": "tinyint"
      },
      {
        "name": "char_5",
        "type": "char",
        "args": [
          9
        ]
      }
    ],
    "pt_enable": true,
    "warmup_rules": [
      {
        "colNameId": "int_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "bigint_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "smallint_3",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "tinyint_4",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "char_5",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "session_properties": {
      "enable_import_export": false
    },
    "warm_query": "select * from onem_lines",
    "queries_data": [
      {
        "query": "select count(*) from onem_lines",
        "query_id": "onem_lines_01",
        "expected_result": [
          [
            1000000
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from onem_lines where int_1 <> 707791655",
        "query_id": "onem_lines_02",
        "expected_result": [
          [
            999999
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from onem_lines where bigint_2 <> 8148176510382645782",
        "query_id": "onem_lines_03",
        "expected_result": [
          [
            999999
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from onem_lines where smallint_3 <> 3876",
        "query_id": "onem_lines_04",
        "expected_result": [
          [
            999979
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from onem_lines where tinyint_4<>-16",
        "query_id": "onem_lines_05",
        "expected_result": [
          [
            996116
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(char_5) from onem_lines where char_5 IN ('Kevin Bar','James Rob','Michelle ','Lauren Ra','Tanya Cer','William W','Justin To','Daniel Wi','Donald Ph','Juan Sull','Michael H','Savannah ','David San','Anthony E','James Gib','Barbara R','Brittany ','Rebecca S','Belinda H','Ariel Lov','George Ma','Tammy Lan','Curtis Co','James Rod','Aaron Gar','Adam Cruz','Jacob Hop','Natalie B','Lynn Long','Todd Harm','Jermaine ','Michael B','Heather D','Robert Ta','Alexa Tho','Brianna J','Peter Bau','Alyssa Be','Todd DayR','Joseph Co','Matthew M','Cheryl Wa','Robert Gr','Brendan B','Jasmine R','Ms. Toni ','Matthew T','Regina Cl','Lori Hens','Nicole Ro','Michael M','Madison B','Rebecca O','James Hop','Miss Ashl','Sheila Ji','James Lam','Brian Wes','Dwayne Go','Rebecca D','Brian Bel','Rachel Ca','Dr. Peter','Kelly Gom','Mrs. Rebe','Debra Rei','Charles S','Gary Geor','Sherry Gr','Susan Mor','Amanda Ol','Mrs. Mich','April Ale','Raymond H','Charlene ','Todd Long','Renee Bel','Carl Lync','Russell F','Charles L','Roy Potte','Tammy Med','Haley Huy','Parker Bu','Christoph','Glenda Mi','Jennifer ','William C','Victor Pe','Jane Murp','Kimberly ','Wesley Br','Alejandra','Max Richa','Jim Davis','Douglas J','Shane Tay','Kevin Bre','Joshua Ru','Sandra Gu','Taylor De','Amber Wal','Patricia ','Chris Gra','Christoph','John Scha','James Pay','Haley Bru','Wayne Gar','Dawn Port','Courtney ','Sarah Tho','Mark Carr','Douglas F','Cheryl Fi','Taylor Mi','Tamara Be','Miss Jenn','Jeremy Ca','John Stew','Melinda A','Vicki Mil','Jill Gray','John Higg','Edward Jo','Harry Hor','Martha Ma','Jeanne Ho','Brian Whi','James Bra','Christina','Kevin Bar','Guy Reyes','Sherri Ro','Christine','Julie Nic','Sandy Mol','Stephanie','Susan Har','Jeffrey B','Johnny Fl','Heather L','Mary Loga','Kiara Wil','Justin Di','Rebecca A','Laurie Cl','Beth Osbo','Daniel Sm','James And','Joseph Mc','Rachel Be','Crystal G','Lisa Meji','Dorothy K','Brett Gom','Michael A','Laura Col','Andrea Mc','Logan She','Susan Mat','Sean Nich','George Ch','Joseph Ta','Gregory W','Angela Wi','Ashley Va','James Fle','Debbie We','Julie Koc','Michael B','Tracy Goo','Ellen Rus','Lawrence ','Susan Sny','Holly Mid','John Will','William W','Tyler Sco','John Fran','Charles H','Jamie Bes','Justin Me','Tiffany Y','Heather H','Nicole Hu','Micheal S','Michele W','Tony Wils','Anthony G','Audrey Ta','Kristen L','Megan Sul','Anthony S','Corey Moo','Tiffany W','Gregory A','Kimberly ','Dana Gonz','Natalie B','Justin Jo','Ms. Amy S','Deanna Mu','Edward Br','Kevin Per','Gregory J','Amy Ortiz','William B','Jessica G','Kelly Nol','Robin Her','Adrian Go','Monica We','Lucas Bla','Shawn Mal','Eduardo E','Alan Dave','Cynthia P','Elizabeth','Catherine','Patrick B','Aaron Ros','Jessica S','Ashley Gu','Beth Robe','Cheryl Mo','Erin Free','Mrs. Kait','Adam Cole','William S','Scott Ham','Jeremy Be','Jennifer ','Stacey Ba','Melissa C','Trevor Ha','Kristen S','Isabel Ar','William H','Charles B','Alexander','Michael R','Richard M','Ashley Cr','Megan Jor','Emma Lync','Kathryn C','Crystal N','George Je','Jerry Tay','Kelly Gra','Edward Ro','Alexandra','April Rod','Maria Gon','Mrs. Emil','Jonathan ','Rachel Hi','Crystal J','Ariana Yo','Deanna Ha','Bailey Sm','Christoph','Alexander','Lacey Rob','Carolyn M','Sabrina P','Alexis Hi','Natalie W','Jesse Hul','James Pie','Lori Wils','Terri Hor','Sean Rosa','Billy Wil','Ruth Higg','Raven Avi','Joseph Tu','Donna Sut','Ann Wilso','John Wrig','Timothy L','Amber Sin','Keith Dav','Jessica D','Denise Wi','Gabriela ','Natalie W','Sharon Ro','Madison E','John Wals','Sarah Dan','Albert Wi','David Tyl','Julie Pot','Alexis Ev','Heather E','Ricardo M','Kim Sosa%','Patrick L','Jennifer ','Scott Car','Ricardo N','Terri Sny','Sergio Ro','Kenneth M','Sarah Jon','Chad Arms','Ross Good','Cynthia W','Jonathan ','Susan Gra','Kaitlyn M','Bruce Ant','Carrie Br','Tara Garn','Jessica J','Angela Br','Lindsay M','Tiffany J','Tiffany G','Mr. Danie','Joy Rodri','Cynthia S','Cheyenne ','Randy Sex','Peter Eva','Angela Ri','Jason Ste','Andrea Da','Susan Wal','Thomas Mo','William B','Bethany K','Megan Kle','Madison A','Sarah Her','Jerry Hen','Latasha M','Laura And','Rachel Gr','Janice Jo','Tina Brow','Caleb Sot','Thomas Ch','Tommy Atk','Janet Gro','Jesse Saw','Tara Cole','Christine','Julia Fra','Dr. Chris','Elizabeth','Sandra Fi','Dylan Fre','David Hil','Alexis He','Christina','Christoph','Alyssa Ne','Angela Ro','Laura Pin','Sara Serr','Kevin Coo','Marc Thom','Ryan Frie','Lisa Wils','Casey Sum','Jeffrey R','Alejandro','Miguel Ca','Zachary O','Sandra Ho','Luke Hull','Stephanie','James Car','Angel Ken','Michael P','Anthony S','Stacey Wa','John Brya','Jason Bal','Kevin Jac','Jessica T','Crystal W','Brittany ','James Gla','Jeff Coll','Terry Mcm','Richard H','Richard V','Cathy Sco','Christoph','Jamie Per','Paul Gree','Shannon T','Maria Sch','Erica Pow','Phillip G','Troy Henr','Paula Har','Benjamin ','Jennifer ','Vanessa A','Alexis Ba','David Pea','Sherry We','Amanda Tu','Rhonda Ra','Ricardo N','Vanessa D','Elizabeth','Danielle ','Marissa M','Zachary R','Kimberly ','Michael T','Julie Sha','Kerry Lit','Jeffery W','Paige Tay','Steven Ga','Adam Will','Frank Cho','Ashley Wh','Anna Turn','Juan Reev','Brandon C','Jacob Atk','Jacob Jon','Laura And','Mark Phil','Alison Ac','Mariah Wi','David Alv','Emily Kel','Molly May','Kim Burns','Sherri Sm','Ryan Mart','Danielle ','Bruce Smi','Michelle ','David Hic','Beth Laws','Daniel Fr','Mr. Ian J','Alexander','Regina Mc','Sarah Mck','Ronald Bu','Michael W','Elizabeth','Melissa H','Daniel Go','Miguel Cu','Carlos An','Steven Ho','Jeffrey S','Victor Wi','Aaron And','Eric Robe','Karen Van','Elizabeth','Kimberly ','Cory FoxJ','Charles R','James May','Larry Bur','Paul Jone','Katelyn J','Marcus We','Victoria ','Mr. Dwayn','Misty Pri','Ryan Ibar','Mary Stev','Bryan Hod','Scott Gon','Michael T','Mr. Samue','Stephanie','Gregg Tor','Ms. Ashle','Matthew P','Jacob Joh','Clinton R','Rachel Le','William K','Brian Mcg','Michael O','Colton We','Amanda Gr','Matthew C','Hannah St','Shannon R','Matthew H','Lisa Robi','Guy LiuX%','Yolanda H','Vanessa W','Katelyn P','Martha Hi','Steven Th','Melissa A','Jose Payn','Dustin Bu','Haley Cla','Craig Gra','Robert Sm','Vicki Tay','Elizabeth','Gina Mata','Cynthia P','Nicole Ma','Mario Web','Stacey Ho','Stephanie','Sarah Web','Breanna R','Joshua Ho','Nicole Ma','Scott Oli','David Was','Alicia Gu','Jenna Moo','Natasha J','Wendy Mye','Laura Gar','Deborah S','David Har','Lisa Bake','Mark Guer','Ebony Ful','Ricky Smi','Jeffrey C','Dalton Fr','Anne Mcda','Miss Wend','Carlos Wi','Monique A','Jordan Ch','Ann Garci','Vicki Gon','Zachary G','Michael M','Ronnie Ed','James Wal','Jason Mon','Sarah Smi','Patrick K','Maureen S','Alisha Ri','Sheri Dun','Anthony H','Anne Kell','Sarah Mil','Vincent M','Jesse Tay','Ashley Mc','Michael G','Whitney B','Tami Chav','Nicole Fi','Michele G','Kimberly ','Shelia Bu','James Tyl','Christoph','Robin Rob','Mrs. Mary','Lori Koch','Julie Ols','Deborah G','Jimmy Hoo','Susan Wag','Steve Kem','Mrs. Jane','Robert De','Jackie Ma','Robert De','Mark Baue','Matthew B','John Roch','Mark Rodr','Brent Wat','Barbara P','Maria Dix','Christoph','Sharon Mu','Maria Bas','Sarah Llo','Walter Sa','Mackenzie','Hector Fa','Kevin Men','Austin Da','Charles C','Nicholas ','Joel Grif','Laura Haw','Christoph','Anthony J','Andrew Go','Alicia Lu','Kristen J','Steven Pa','Jonathan ','Elizabeth','Alexis Wa','Mark Cann','Leslie Ke','Dylan Bra','Christoph','Kenneth T','Teresa Pr','Tiffany D','Lisa Gray','Andrew Ro','Monica Br','Jesse Sil','Michelle ','Lisa Blan','Alexandra','Daniel Ke','Beverly C','Lisa Gonz','Joshua Tu','Cody Krau','Nicole Fr','David Rod','Rodney Ba','Michael S','Marvin Mc','Timothy M','Ryan Hick','Sierra Le','Jordan Mu','Amanda Pr','Susan Phi','Ashley Gi','Dawn John','Andrew Ga','Justin Pa','Nicole Sa','Tracy Win','Emily Woo','Nathan Jo','Melissa R','Annette C','John Morr','Jennifer ','Joseph Ay','Rhonda Ha','Laura Luc','Wendy Cla','Rachel Le','Erin Davi','Justin Gr','Emily Kem','Jimmy Ram','Jennifer ','Jennifer ','Andrew Th','Joseph Br','Sarah Nor','Jeffrey A','Jacquelin','Leslie Lo','Margaret ','Mr. Sean ','William W','Autumn Kl','Jessica D','Marcus Fi','Nicole Bl','George Si','Julia Irw','Caleb Tho','Rachel Ad','Michelle ','Richard K','Dr. Conni','Hannah Ca','Dr. Todd ','Kristin G','Travis Kh','Charles S','Tiffany S','Kelly Vin','Chelsea H','Patrick P','Scott Gra','Mr. Micha','Eric Youn','Lisa Mcph','Sabrina G','Timothy B','Elizabeth','Brian Tho','Brandi Ba','Travis He','Andrew Be','Alan Terr','Cindy Hug','Alexander','Cody Robe','Kendra Ke','Mrs. Mira','Amanda Sp','Connie Jo','Kelli Fri','Benjamin ','Julia Alv','Robert Bu','Jessica M','Adrienne ','Joseph Ma','Sarah Byr','Robert Or','Oscar Whi','Andrew Ra','Jessica D','Erin Grif','Bradley H','Lucas Wal','Michael R','Daniel Ba','Diana Wil','Linda Kni','George Go','Christine','Jacquelin','Alexandra','Patricia ','Kristin T','Robert Ne','Molly Gon','Brandon T','Jeremy Wa','Michael C','Rhonda Ne','Megan Tat','Jennifer ','Patricia ','Kristine ','Jennifer ','Shelby Jo','Ryan Port','Peggy Mor','Daniel Ne','Victor He','Joyce Bur','Karl Hall','Kayla Edw','Amanda Ha','Frank Gut','Eric Webs','Julie Smi','Joe Sulli','Renee Huf','Ashley Mc','Wendy Joh','Andrew Kl','Michelle ','Audrey Cr','Stanley C','David Mor','Barry Atk','Bianca Ro','Eric Gree','Shane Bea','Joy Johns','Adam Stee','Haley Gom','James Bla','David Smi','Barbara D','Karen May','Christina','Megan Joh','Stephen M','Kevin Hol','Brenda Av','Janet Gle','Amy Willi','Jerry Wil','Michelle ','Justin Wa','Samantha ','Tara Math','Maria Hay','Michelle ','Allison H','Elizabeth','Craig Chr','Natasha B','Michael P','Rebecca P','Brandon W','Anna Full','Kyle Morg','Jennifer ','Michelle ','Steven Mc','Heather B','Peggy Bar','Teresa Ad','Bethany W','Jeffrey M','Jason Gar','Sarah Wil','David Pay','Derrick H','Chad Will','Cathy Wat','Richard P','Jon Johns','Gabriel M','Stephanie','Joan Vale','Tammy Bel','Elizabeth','Beverly H','Chad Rodr','Ashley Gr','Catherine','Eric Lewi','Angela Ha','Gregory T','Kevin Rei','Dr. Chels','Charles C','Dr. Erin ','Pamela Co','Noah Alle','Christoph','Diana Tur','Mike Shie','Paul Ford','Alex Schm','Melody Ba','John Wall','Kyle Knap','Melissa A','John Sand','Alexandra','Sherri Cl','Scott Mar','Casey Smi','Thomas Wi','Lisa Clar','Brittany ','Sandra Ba','Tanya And','Steven Jo','Heather G','Stephen A','Jill Mart','Lindsey G','Tina Edwa','David Pet','Nancy Hol','Tyler Smi','Alejandro','William M','Darrell C','Cassandra','Allison E','Jennifer ','Timothy F','Benjamin ','Jodi King','Samantha ','Paul Grah','Jessica T','Jonathan ','Melissa R','Isabel Mo','Nathaniel','Ruth Mars','Kimberly ','Frank Kin','Emily Tho','Rachel Sm','Dr. Kathe','Steven He','Stephanie','Candice S','Kristin M','Casey Bla','Stephen J','Charles S','Jose Lest','Juan Heat','Deborah M','Alejandra','Carrie Ba','John Mart','Molly Ale','Brandon J','Joshua Vi','Mary Pete','Max Mille','Allison V','Mark Olse','Troy Klei','Carrie Du','Stephanie','William M','Trevor Ol','Dennis Ol','Jeffery J','Mark Rome','Juan Pott','Timothy F','Michael H','Spencer E','Jennifer ','Stacey Wi','Suzanne D','Lisa Comb','James Cum','Julie Ran','Leah King','Tony John','Joyce New','Megan Wri','Douglas H','Alan Harr','Donald Ca','David Tra','Maurice W','Nicole Fr','Julia Rod','Deborah S','Maria Dia','Dalton Al','Anthony L','Donna Rui','Alexis Sa','Elizabeth','Natalie V','Elijah Wr','Jacquelin','Tracy Hal','Barbara S','Derek Alv','Courtney ','Billy Nol','Matthew A','Jose Bell','Lindsay M','Bonnie Mi','Kayla Hop','Martin Ba','Angela Ro','Jeremy Br','Ashley Ga','William B','Kathleen ','Sarah Bel','Ernest Tu','Teresa Bo','Joan Cont','Theodore ','Shawn Col','Michelle ','Michelle ','Crystal H','Allison J','Eric Hold','Alexandri','Angela Ro','Amy Phill','Justin Ha','Kayla Tho','William W','Sara Padi','Pamela Kn','Jon Noble','Christoph','Richard C','Jeremy Fo','Kevin Wea','James Col','Michael M','Calvin Ga','Amy Garci','Dan Walla','Dawn Truj','Sean Pace','Gregory A','Krystal R','Ashley Ge','Benjamin ','Rachel Sm','Terry Smi','Cindy Can','Joe Holla','Kara Coll','Matthew J','Mrs. Alex','Andre Zim','Thomas Ja','Kevin And','Carrie Ki','Brian Hod','Micheal B','Justin Ng','Andrea Wi','Darlene P','Tony Chav','Laura Sil','Barbara E','Jean Brow','Michele C','Michele R','Kristen P','Shannon A','Shawn Hay','Mr. Matth','Cody Vasq','Lisa Prat','Brian Smi','Emma Baxt','William R','Samantha ','David Dua','Robert Sa','Jessica M','Toni Ward','Connie Po','Daniel Fi','Angela Mi','Katrina M','Timothy H','Kathleen ','Joseph Dy','Michelle ','John Mitc','Annette T','Patrick G','Keith Wil','Patricia ','Michael B','Nicholas ','Andrea Ho','Jennifer ','Christoph','Victoria ','Michael S','Martin He','Debbie Wi','David Mcd','Sean Nava','Kenneth M','Heather Z','Emily Wal','Jennifer ','Jill Will','Joy Cross','Leah Stev','Parker Ma','Denise Be','Vanessa R','Brandon H','Teresa Ru','Richard K','Jeff Craw','Phillip A','Renee Kle','Patricia ','Brian Edw','Kimberly ','Tiffany W','Heather W','Laura Arm','Gary Sutt','Donald Da','Anthony R','Steven Hu','Nathaniel','Matthew A','Raymond B','Sara Gord','Donald Ro','Scott Lee','Cynthia H','Brad Hood','Courtney ','Michele W','Joshua Je','Zachary W','Evelyn Ma','Joshua We','Lacey Smi','Brenda Jo','William O','Brian Sco','Melissa S','Brian Pri','Nicole Ll','Zachary M','Adam Cald','Charles H','David Lyn','Curtis Wi','Sean Lyon','Kevin Joh','Mark Durh','Brittany ','Brandi Be','Kristin R','Joseph Ma','Connie Fr','Melissa C','Maureen B','Nicholas ','Jonathan ','Julie Far','Courtney ','Angelica ','Lauren Sc','Jeffrey W','Patricia ','Jennifer ','Richard E','Heidi Sch','Nicole Si','Dominique','Kimberly ','Amber Her','Judy Denn','Samantha ','Timothy D','Kenneth M','Mary Pace','Samuel Yo','Michael H','Lori Rang','Megan Jam','Derrick L','Gwendolyn','Christoph','Brandon H','Jennifer ','Tina Rodr','Tina Mars','Douglas D','Samuel Sp','Bradley M','Bryan Jon','Alyssa Ma','Melissa M','Jessica B','Kenneth J','David Wri','Jon Phill','Jessica C','Tiffany W','Matthew T','Sheryl Gr','Aaron Tay','John Came','Diana Bai','Christoph','Caitlin S','Stacey Sc','Joseph Al','Olivia Pe','Leslie Fi','Jennifer ','Albert Lo','Pamela Br','Sean Leeh','Dawn Lyon','Tanya Cra','Michelle ','Steve Car','Amanda La','Jessica H','Harold La','Meghan Al','Gregory G','Jose Long','Gregory F','Tammy Rey','Christoph','James Ric','Thomas Ca','David Smi','Robert Ph','Dana Nels','Lisa Fitz','Jordan Fa','Kristina ','Kimberly ','Michelle ','Cindy Fry','Samantha ','Rebecca A','Tara Turn','Breanna C','Heather B','Kari Roge','Danielle ','Angela Ev','Sandra Ed','Melissa S','John Bowe','Victor Da','Peter Joh','Bryan Ngu','Courtney ','Elizabeth','Clifford ','Jay Mills','Brian Tay','Kimberly ','Stephanie','Marie Mar','Leah Thom','Tanner Fr','Jeffery E','Carl Hall','Katie Gar','Justin Co','Michael P','Kelsey Ge','Victoria ','Brian Gai','Stephanie','Hector Sa','Mary Andr','Gina Jenn','William W','Shelley B','Charles C','Luis Ferg','Charles M','Tyler Por','Erica Wat','Matthew F','Robin Gon','Douglas M','Robert Jo','Brian Luc','Terri Ell','Joshua Co','Crystal J','Kayla Bra','Mary Wrig','Shawna Hu','Kelly Gue','Krystal M','Michael B','Sherri Ng','Suzanne S','Amber San','Tara Gonz','Adrienne ','Cory Rigg','Jeff Ston','Daryl Car','Mr. Joshu','Darryl Fo','Alexander','John Rile','Samuel Wa','Jonathan ','Edward Ma','Catherine','Tyler Mil','Scott Lee','Marcus Ba','Katrina S','Julian Mo','Joseph Pe','Stephanie','Micheal J','Latoya Fi','Maria San','Kim Hart)','Donna Sal','Haley Hol','Edward La','Daniel Wi','Aaron Kel','Felicia F','Mark Step','Thomas Sc','Savannah ','Dawn Blak','April Dav','Bill John','Emily Dom','Melissa G','Gregory R','Jeffrey H','Amy Fried','Donna Mac','Lindsay M','Timothy P','Miranda H','Marissa A','Bryan Smi','Jennifer ','Joshua Fu','Martin An','James Fer','Michelle ','John Youn','Kristi Or','Blake Gre','Andrea Ga','Kevin Hil','Aaron Ray','Christoph','Kyle Elli','Rebecca H','Ronald Ma','Jonathan ','Tiffany B','Michael C','Matthew M','Philip Gu','Stephen B','Ray Avila','Eric Fiel','David Leo','David Cob','Dennis Ru','Kelly Wil','Lisa Will','Margaret ','Erin Mcla','Karen Bry','Amanda Ho','Andrew Wa','Laura Irw','Paige Joh','Timothy K','Hannah Ma','William W','Angela Ha','Robert Tu','Ashley Bu','Tanya Mor','Samantha ','Monique N','Corey Hic','Thomas Yo','Jasmine T','Lauren Ma','Jessica S','Robert Es','Kristina ','David Wal','Keith Wal','Natalie M','Derek Dia','Drew Arno','Nicole Ma','Matthew A','Christina','Elizabeth','Joyce Gon','Meghan Ri','Caitlin C','Judy Turn','Andrew Sm','Matthew O','Rachel Sc','Benjamin ','David Rho','Stephanie','Timothy B','Sean Will','Heather W','Kristin C','Stephen J','Roberto B','Megan For','Mandy Vil','Bryan Wil','Daniel Mo','Keith Joh','Paul Morr','John Brow','Michael G','Alice Cal','Betty Cam','Adam Smit','Gabriel M','Stephen G','Andrew Jo','Richard L','Jennifer ','Monica He','Karl Stew','Linda Fle','Jonathan ','Ryan Brow','Mark Harr','Terry Rob','Randy Rod','Sherri Da','Samantha ','John Nguy','Christoph','Luis Tayl','David Col','Mr. Evan ','Diane Coo','Carolyn C','Benjamin ','Dylan Gar','Yvonne Wo','Mark Ayal','Andre For','Angela Di','Linda Gil','Patty Gue','Catherine','Stephen C','Harry Coo','Cassandra','Lauren Sm','Jacquelin','Ashley Ba','Alan Garz','Donna Alv','John Wils','Corey Wil','Shawn Jac','Jake Marq','Kathryn M','Charles D','Lisa Wyat','Joel Vasq','Diana Sto','David Sim','Deborah W','Jose Rodr','Nicole Ja','Jack Simp','Robert Es','Elizabeth','Amanda Ro','Sydney Mc','Jonathan ','Richard D','Zachary F','Timothy W','John Andr','Christoph','Carolyn L','Matthew O','Roger Con','April Dav','John Page','Catherine','Noah Evan','Darrell F','Douglas D','Robin Cam','Ellen Mel','Michael H','Jeffery F','Joshua Gr','Beth Pett','Ashley Si','Tiffany M','Andrew Mu','Thomas Ma','Jeffrey H','Brad Broc','Emily Con','Amy Hubba','Melissa F','Eric Kell','Ashley Ro','Emily Dur','Nancy Coo','Steven Sa','Randy Coo','Christine','Lindsey W','William S','Darius Nu','Dr. Kayla','Melissa S','Matthew P','Susan Per','Dustin Ba','Patty Mye','Steven Ke','Julie Rog','Evelyn Bu','Lindsay T','Maria Rus','Christoph','Jenna Dan','Lucas And','Melanie D','Valerie A','Gary Gran','Casey Han','William A','William S','Amy Howel','Lindsay D','Alan Rile','Nicole Ma','Thomas Pa','Thomas Sh','Jordan Th','Linda Bro','Toni Chap','Danielle ','Travis Mc','Steven Lo','Melanie E','Margaret ','Tara Fole','Marc Wils','Alexander','Jennifer ','Julie Gut','Robert Bo','Heather B','Kenneth O','Haley Wat','James Col','Lacey Wel','Jennifer ','Margaret ','Kristen L','Matthew S','John Smit','Alicia Ni','Thomas Do','Steven Sc','Chloe Mil','Janice Lo','Grace She','Carl Cole','Sabrina J','Daniel Ha','Austin Yo','Monica Si','Jamie Mcd','Brandon M','Courtney ','Cory Davi','Christine','Jennifer ','Katie For','Kelly Rob','Kylie She','Matthew S','Jordan Ol','Sandra Sm','Matthew W','Jaime Pet','Ricardo M','Brian Ric','Patricia ','Andrew Ta','Olivia Gu','Amanda Ho','Amanda Mo','Joel Fran','Richard C','Stephanie','Shawn Jon','George Fo','Michael P','Andrew Ma','Brenda Qu','John Sims','Austin Mc','Daniel An','Cindy Day','Kent Will','Joshua Co','Kiara Fer','Harry Mun','Shannon H','Laura Hal','Nathan Kn','Timothy H','Stephanie','Marissa W','Deborah M','Mr. Donal','Robert Ha','Claudia S','Tammy Smi','Bruce Ric','Nicole La','Kimberly ','Catherine','Elizabeth','Donna Vas','Jason Tho','Steven Ga','Hannah Ba','Ashley Mi','Holly Per','Ryan Smit','Karen All','Michael G','Brian Hud','Mary Joyc','Ryan Smit','William T','Eric Morr','Gloria Po','Brenda Ma','Gerald Ru','Barbara B','Edward Lo','Virginia ','Peter Jac','Charles R','Jason Gre','William L','Lori Hopk','Jennifer ','Maria Bro','Steven Lo','Renee Rya','Aaron Fue','Kelly Sch','Ashley Ba','Sara Chan','Douglas P','Sherry Go','Jonathon ','Rebecca C','Angel Wil','Eduardo P','Jessica B','Courtney ','James Pet','Matthew N','Troy Roge','Sarah Pad','Robert Wi','Rachel Ma','Marisa Ca','Bruce Hou','Natasha B','Jennifer ','Kristen R','Pamela Ya','Deborah F','Stephanie','Veronica ','Scott Tap','Paula Bai','Sarah Rit','William W','Shelby Si','Derek Woo','Kathleen ','Robert Wa','Nancy Mcc','Kim Ander','Christine','George Ro','Sandra Si','Jessica C','David Ste','Brian Rus','Amy Burne','Rachel Co','Chad Harr','Wesley Sm','Jessica M','Amanda Wo','Scott Bro','Anna Rami','Robert Ma','Brad Cabr','Jacob Pen','Ashley Ba','James Vel','Joseph Gi','Renee Lee','Sharon Ev','David Gre','Ashley Bu','Eric Tran','Felicia H','Donald Me','Mr. Antho','Jeffrey L','Jamie Wal','Derrick B','Michael W','Christoph','Heather H','Olivia Ma','Catherine','Evan Bake','Renee Dur','Annette P','Elizabeth','Laura Bak','Dr. Chris','Vanessa G','Tracy Wal','Robert So','Mr. Antho','Vincent L','John Fran','Diane Mor','Chad Walk','Robin Bat','Mrs. Mary','Alexis Da','Calvin Sa','William C','John Cann','Julia Ric','Ashley Ro','Anna Kram','Jason Mar','John Cars','Maurice R','Roger Tod','Maria Alv','Michael M','Brett Hun','Jodi Perk','Stephen M','Laura Sch','Lori Mitc','Jennifer ','Tom Clark','Andrew Cu','Manuel Th','John Bake','Cynthia G','Nicholas ','Daisy Mar','Christoph','Amanda Ru','Cassandra','Alicia Sm','Christoph','Felicia K','Jason Gar','Tyler Mor','Mark Jone','Cynthia J','Melvin Pa','Elizabeth','Jack John','Daniel Gi','Nicole Th','Micheal M','Michael M','Christina','Mrs. Deni','Stacy Per','Nancy Bis','Erin Webb','Rachel Le','Stephen C','Joel Ruiz','Justin Pe','Kimberly ','Kathryn J','Gabriel G','Brian Lov','Melinda H','David Bro','Michael V','Latasha O','Alexander','William M','Meagan Co','Christina','Michelle ','Dawn Payn','Tina Wrig','Andrew Mu','Madison L','Pamela Da','Lisa Smit','Garrett R','Keith Lew','Stacey Mo','Theresa W','Adam Cook','Joseph Le','Kimberly ','Amanda Va','Jared Ols','Timothy R','Jordan Ro','Kyle Conw','Robert Hu','Ana Hutch','Daniel Mc','Marissa B','Antonio S','Kayla Ben','David Gre','Sara Varg','Jessica T','Jonathan ','Christoph','Joseph Ma','Brenda Va','Brandon P','Lisa Grim','Julie Kin','Erika Cam','Steven Ha','Lee Dorse','Amanda Re','Erin Torr','James Tho','William C','Jessica R','Mrs. Mela','Savannah ','Molly Woo','Thomas Ma','Erik Rodr','Antonio H','Daniel Sm','Robin Mor','Anthony A','Daniel Go','Alexandra','Kenneth R','Brian Bur','Alexander','Ryan Chav','Michael M','Gerald Ja','Sean Comb','Mark Mitc','Megan You','Melody Mc','Allen Atk','Patrick J','Nicholas ','Caroline ','Joshua Br','Samantha ','Patricia ','Linda Boo','Stephen V','Elizabeth','Lisa Shie','Joanne Sp','Wendy Nor','Kathleen ','Michele B','Jennifer ','Kevin Pri','Jodi Clar','Philip St','Patrick C','Tami Gile','John King','Todd Dors','Michael H','Leah Rive','David Moo','Andrea Po','Gregory T','Douglas F','Jessica C','Monica He','Donald Jo','Amanda Jo','Christoph','Jimmy Cal','Sergio Mo','Patrick W','Deborah J','Darius Ro','Corey Edw','Ronald Ta','Thomas Mo','Carl Cald','Pamela Lo','John Barr','Omar Dill','Kelly Lop','Nicole Mo','Suzanne C','Donald Fl','Amy Gordo','Martha Pa','Michael B','Alyssa Su','Alyssa Wi','John Long','Sabrina L','Katherine','Kelly Con','Dr. Angel','Ann Hawki','Robert Ca','Ryan Wall','Vanessa C','Jonathan ','Crystal T','Stephen W','Jordan Sm','David Cha','Jessica S','Kevin Bar','Connor Jo','Nancy Dav','Amy Conle','Natalie T','Joseph Gi','Steven Ly','Michelle ','Brandi Ca','Howard Wa','Brittany ','Daniel Si','Sheri Hud','Nancy Hen','Courtney ','Anna Butl','Jake Grif','Jeremy Ho','Joshua Fa','Jamie Pat','Theresa R','Daniel Or','Mark Mitc','Charles K','Austin An','Samantha ','Melissa B','Julie Hun','Amy Marti','Phyllis H','Arthur De','Tara Stev','Angela St','Rachael R','Gregory C','Aaron Ram','Matthew H','Max Nealq','Angela Sm','Mr. Richa','James Ada','Natalie T','Holly Sot','Nicholas ','Daniel Ma','Jessica S','Joshua Jo','Michael S','Sherri Ma','Jason Gre','John Mcmi','Michael W','Samuel Co','Kaitlyn C','Jennifer ','Jason Str','Vincent L','William M','Nathan Ro','Michelle ','Amanda Ro','Wesley Hu','Gary Thom','Darrell E','Michael T','Penny All','Jack Chen','Chris And','Darlene S','David Dix','Darlene M','Anthony H','Sherry Ol','George Lo','Karen Tuc','Amanda Ta','Kimberly ','Alyssa Co','Leah Cook','Zachary E','Robert Sc','Natalie M','Alicia Hu','John Butl','Kristin F','Jeffrey C','Todd Howa','Heather D','Michael B','Brian Yu(','Carl Nava','Aimee Hop','John Gome','Gloria Cr','Sophia Be','Brandon B','Jillian T','Brent Goo','Timothy A','Allison B','Ana Johns','Robert Al','Allen Ort','Dr. Anne ','Ryan Smit','Timothy M','Amy Nicho','Veronica ','George Go','Jason Rus','Paul Rome','Keith Mit','Edward Ve','Cynthia F','Carlos Nu','Sara Youn','Christine','Anthony H','Victoria ','Joyce Wil','Michael J','Tracey Di','Mrs. Tabi','Amy Baker','Natasha W','Danielle ','Nicole Yo','Anthony B','Christina','John Blan','Roger Mel','Ryan Torr','Charles H','Ronald Be','Derek Smi','Shane Hay','Chad Mald','Kenneth C','Carol Wal','Kayla Mur','Roger Cla','Susan Rot','Robert De','Matthew M','Janet War','Russell K','Mrs. Suza','Rebecca C','Chloe Flo','Nicholas ','Debra Boy','Christoph','Tristan C','Amy Harmo','Krystal C','Lauren Co','Kevin Pay','Charles P','Amy Caldw','Danielle ','Kevin Gor','Jessica S','Adrian Ma','Derrick G','Melanie A','Diane Wil','Cody Lee)','Michael S','Wendy Sut','Lisa Laws','Kelsey Lo','Teresa Sm','Brenda Fo','Deborah T','Jacob Wal','Jeffrey H','Richard W','April Rog','Crystal H','Melissa H','Laura Sto','Jared Mil','Angelica ','Elizabeth','Christoph','Robert Ri','Elizabeth','Jessica L','Amy Romer','Kimberly ','Micheal R','Justin Ha','Margaret ','Matthew H','Laura Gal','Daryl Gon','John Robl','Jared Bel','Wesley Mi','Daniel Mo','Diane Jon','Christoph','James Fer','Shelby Co','Paul Cast','Shawn Fer','Christoph','Jennifer ','Sarah Bri','Steven Jo','Diana Est','Dwayne Gr','Nathan Li','Amy Wangu','Kelly Hor','Michelle ','Timothy A','Deanna No','Michael A','Lisa Hebe','Brian Jac','Billy Rob','Cassandra','George Bu','Alyssa Fl','Amy Washi','Angela Mi','Alyssa Ch','Robert Ho','Kevin Mir','Andrew Sp','Lisa Brow','Daniel Tr','Stephen B','Daniel Co','James Sny','Christina','Arthur Wh','Adam Sull','Luke Reed','Jennifer ','Lisa Rodr','Philip He','Lisa Schn','Christian','Allen Lop','Claudia A','Omar Rodr','David Lit','Robert Cr','Kathy Med','Maria Wan','Frank Are','Scott Fit','Gerald Or','Micheal E','Amanda Ca','Teresa Po','Gary Brow','Joseph Br','Stacey Br','Christine','Tanya Gar','Susan Rob','David Gar','Michael J','Anthony J','Mrs. Emil','Daniel Ca','Harold Ru','Rebecca W','Natalie S','Kimberly ','Joshua Br','Lauren Ho','Brenda Ga','Linda Car','Derrick B','Nancy Wil','Adam Kram','James Cra','Ryan Will','Matthew M','Melissa S','Zachary R','Michael S','Daniel Ma','Rebecca B','Mariah Co','Isaac Jac','Kyle Adam','Janice Wa','Marcia To','Kyle Thom','John Rodr','Kayla Car','Jackie Be','Zachary A','Christoph','Megan Hic','Kelly Bai','Joanne Sm','Keith Mey','David LiU','Tina Mcca','Jennifer ','Karen Cam','Jamie Fos','Christina','Russell C','Bryan Kin','Gary Walk','Kelly Llo','Joshua Mc','Brandon S','Michael S','Alyssa Ma','Joshua Ne','Andrea Jo','John Edwa','Ryan Mont','Deborah B','Jason All','Michelle ','Jodi Smit','Ashley Ea','Kyle Trav','Jeremy Re','William F','Patricia ','Katherine','Claire Co','Michael W','Patrick A','Maurice M','Regina Sm','Kenneth H','Joe Willi','Andrew Mo','Wyatt Mar','Christina','Michelle ','Susan Fre','Joshua Ra','Cynthia H','Michael W','Jonathan ','Bob Hayes','Dylan Cha','Richard M','Dana Gill','Nicholas ','Tina Bens','Janice Mi','Jesus Cro','Stephen W','Christoph','Katrina C','Dennis Di','Sara Farm','Paul Moor','Jessica L','Alex Litt','Ryan Park','Joanne Pr','Erin Garr','Anna Bass','Mario Rom','William B','Teresa Ba','Barbara F','Jennifer ','Walter Ro','Norman Ob','Tiffany M','Angel Lop','Christy H','Kelsey La','Elizabeth','Valerie W','Jesus Ols','Ashley Jo','Tiffany M','Jennifer ','Christina','Lindsay B','John Sull','David Mcc','Russell G','Anthony M','Tami Atki','Michael B','Crystal F','Travis Ro','Kelly Fox','Sandra Sp','Clarence ','Jennifer ','Mr. Ethan','Corey Mck','Jonathan ','Matthew W','Brooke Ma','Wanda Flo','Kathryn F','Shannon R','Alexander','Derek Mos','Jennifer ','Tiffany K','Julie Yor','Stacy Cro','Joshua Pe','John Mart','Andrea Go','Katherine','Sherry Kn','Harold Bo','Christoph','Mark Chav','Amy Lee)o','Brian She','Sue Patte','Kim Stuar','Rebecca L','Alexander','Jason Ros','Chad Leac','Donald Hi','Pamela Wa','Cory Mcco','Frederick','Madison F','Mark Tayl','Todd Foxp','Mr. Brian','Janet Moo','Kevin Tho','Jeffrey G','Howard Be','Desiree L','Christoph','Ellen Gra','Casey Hil','Justin Wi','Anthony C','Keith Smi','Jacob Ste','Gary Gray','Amy Gille','Shannon S','William S','Kristin L','Jessica E','Brent Col','Lisa Youn','Ronnie Ca','Justin St','Ashley Al','Kristy Ch','Daniel Sc','James And','Sydney Ro','Michael R','Daniel Kl','Kathy All','Scott Eve','Jasmine A','Mitchell ','Ann Phill','Nichole J','Diane Ace','Juan Mill','Candace C','Kristen H','Debra Smi','Jeffrey C','Jason Sha','Dr. Trace','Jack Cohe','Michael B','Jonathan ','Sean Thom','Spencer A','Thomas Gr','Paul Rodr','Jessica D','Bobby Bur','Antonio S','Sarah Ree','Johnny He','Gabriela ','Mary Stev','Christoph','Meghan Go','Carol Whi','Gary Jaco','Jerry Rol','John Duar','Brian Tay','Sean Smit','Elizabeth','Ashley Ri','Susan Cra','Lisa Smit','Zachary O','Ashley Wr','Scott Wil','Peggy Con','Tim Lee_+','Timothy T','Gary Hayd','Penny Par','Christy M','Brad Week','Alexander','Andrea Ba','Sarah Ste','Steven We','Steven Jo','Theresa C','Christoph','Amy Gonza','Melvin Hi','Carolyn H','Christoph','Stephanie','Troy Jame','Stephen E','Albert Je','Jennifer ','Crystal R','David Sel','Mrs. Kath','Karen Col','Mrs. Ange','Emily Dan','Sandra Jo','Adam Hall','Matthew C','Carrie De','Danielle ','Shawn Jon','Mark Myer','Jorge Val','Jacob Phi','Travis Ra','Destiny P','Parker Jo','Kristina ','Benjamin ','Melissa M','Brenda Ma','Zachary M','Carrie Br','Natalie W','Mr. Andre','Jesse Alv','Erin Hopk','Joshua Kh','Whitney M','Chad Mill','Brandon L','Nathan Ad','Richard M','Cody Cole','Kurt Will','Allison T','Mrs. Joce','Daniel Wh','Krista Ha','Barbara A','Alexis Sm','Daniel Sa','Betty Smi','Judith Re','Teresa Sm','Mary Gord','Leah Norr')",
        "query_id": "onem_lines_06",
        "comment": "2500 predicates IN",
        "expected_result": [
          [
            284502
          ]
        ],
        "expected_iceberg_result": [
          [
            207942
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from onem_lines where (int_1<=-461887229 and int_1>=-994082834) or (int_1<=7777777 and int_1>=0)",
        "query_id": "onem_lines_07",
        "expected_result": [
          [
            125501
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from onem_lines where (int_1<=-461887229 and int_1>=-994082834) or (int_1<=7777777 and int_1>=0)",
        "comment": "2 ranges for int_1 - when simplify_predicate_threshold=1 (should skip prefilled)",
        "query_id": "onem_lines_08",
        "expected_result": [
          [
            125501
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_match_on_simplified_domain": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "session_properties": {
          "simplify_predicate_threshold": 1
        }
      },
      {
        "query": "select count(*) from onem_lines where int_1 <> 707791655",
        "comment": "<> is treated as 2 ranges, when simplify_predicate_threshold=2 - should use prefilled",
        "query_id": "onem_lines_09",
        "expected_result": [
          [
            999999
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "session_properties": {
          "simplify_predicate_threshold": 2
        }
      },
      {
        "query": "select count(*) from onem_lines where int_1 <> 707791655",
        "comment": "<> is treated as 2 ranges, when simplify_predicate_threshold=1 - should not use prefilled",
        "query_id": "onem_lines_10",
        "expected_result": [
          [
            999999
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_match_on_simplified_domain": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "session_properties": {
          "simplify_predicate_threshold": 1
        }
      },
      {
        "query": "select count(*) from onem_lines where int_1 = 707791655",
        "comment": "1 range, when simplify_predicate_threshold=1 - should use prefilled",
        "query_id": "onem_lines_11",
        "expected_result": [
          [
            1
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "session_properties": {
          "simplify_predicate_threshold": 1
        }
      },
      {
        "query": "select min(int_1), max(int_1), min(smallint_3), max(smallint_3) from onem_lines where ((smallint_3 between 1 and 499) OR (smallint_3 between 501 and 999) OR (smallint_3 between 1001 and 1499) OR (smallint_3 between 1501 and 1999) OR (smallint_3 between 2001 and 2499) OR (smallint_3 between 2501 and 2999) OR (smallint_3 between 3001 and 3499) OR (smallint_3 between 3501 and 3999) OR (smallint_3 between 4001 and 4299) OR (smallint_3 between 4301 and 4599) OR (smallint_3 between 4601 and 4799) OR (smallint_3 between 4801 and 4999)) AND ((int_1 between 0 and 100) OR (int_1 between 1000 and 5000) OR (int_1 between -100 and -1) OR (int_1 between -5000 and -1000) OR (int_1 between -50000 and -6000) OR (int_1 between 6000 and 7000) OR (int_1 between 10000 and 30000))",
        "comment": "Following SIC-179",
        "query_id": "onem_lines_12",
        "expected_result": [
          [
            -40847,
            -27046,
            3516,
            4403
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select min(int_1), max(int_1), min(smallint_3), max(smallint_3) from onem_lines where ((smallint_3 between 501 and 999) OR (smallint_3 between 1001 and 1499) OR (smallint_3 between 1501 and 1999) OR (smallint_3 between 2001 and 2499) OR (smallint_3 between 2501 and 2999) OR (smallint_3 between 3001 and 3499) OR (smallint_3 between 3501 and 3999) OR (smallint_3 between 4001 and 4299) OR (smallint_3 between 4301 and 4599) OR (smallint_3 between 4601 and 4799) OR (smallint_3 between 4801 and 4999)) AND ((int_1 between 0 and 100) OR (int_1 between 1000 and 5000) OR (int_1 between -100 and -1) OR (int_1 between -5000 and -1000) OR (int_1 between -50000 and -6000) OR (int_1 between 6000 and 7000) OR (int_1 between 10000 and 30000))",
        "comment": "Following SIC-179",
        "query_id": "onem_lines_13",
        "expected_result": [
          [
            -40847,
            -27046,
            3516,
            4403
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select min(int_1), max(int_1), min(smallint_3), max(smallint_3) from onem_lines where ((smallint_3 between 1001 and 1499) OR (smallint_3 between 1501 and 1999) OR (smallint_3 between 2001 and 2499) OR (smallint_3 between 2501 and 2999) OR (smallint_3 between 3001 and 3499) OR (smallint_3 between 3501 and 3999) OR (smallint_3 between 4001 and 4299) OR (smallint_3 between 4301 and 4599) OR (smallint_3 between 4601 and 4799) OR (smallint_3 between 4801 and 4999)) AND ((int_1 between 0 and 100) OR (int_1 between 1000 and 5000) OR (int_1 between -100 and -1) OR (int_1 between -5000 and -1000) OR (int_1 between -50000 and -6000) OR (int_1 between 6000 and 7000) OR (int_1 between 10000 and 30000))",
        "comment": "Following SIC-179",
        "query_id": "onem_lines_14",
        "expected_result": [
          [
            -40847,
            -27046,
            3516,
            4403
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select min(int_1), max(int_1), min(smallint_3), max(smallint_3) from onem_lines where ((smallint_3 between 1 and 499) OR (smallint_3 between 501 and 999) OR (smallint_3 between 1001 and 1499) OR (smallint_3 between 1501 and 1999) OR (smallint_3 between 2001 and 2499) OR (smallint_3 between 2501 and 2999) OR (smallint_3 between 3001 and 3499) OR (smallint_3 between 3501 and 3999) OR (smallint_3 between 4001 and 4299) OR (smallint_3 between 4301 and 4599) OR (smallint_3 between 4601 and 4799) OR (smallint_3 between 4801 and 4999) OR (smallint_3 between 5000 and 5999)) AND ((int_1 between 0 and 100) OR (int_1 between 1000 and 5000) OR (int_1 between -100 and -1) OR (int_1 between -5000 and -1000) OR (int_1 between -50000 and -6000) OR (int_1 between 6000 and 7000) OR (int_1 between 10000 and 30000))",
        "comment": "Following SIC-179",
        "query_id": "onem_lines_15",
        "expected_result": [
          [
            -40847,
            -27046,
            3516,
            4403
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select min(int_1), max(int_1), min(smallint_3), max(smallint_3) from onem_lines where ((smallint_3 between 1 and 499) OR (smallint_3 between 501 and 999) OR (smallint_3 between 1001 and 1499) OR (smallint_3 between 1501 and 1999) OR (smallint_3 between 2001 and 2499) OR (smallint_3 between 2501 and 2999) OR (smallint_3 between 3001 and 3499) OR (smallint_3 between 3501 and 3999) OR (smallint_3 between 4001 and 4299) OR (smallint_3 between 4301 and 4599) OR (smallint_3 between 4601 and 4799) OR (smallint_3 between 4801 and 4999) OR (smallint_3 between 5000 and 5999) OR (smallint_3 between 7000 and 9999) ) AND ((int_1 between 0 and 100) OR (int_1 between 1000 and 5000) OR (int_1 between -100 and -1) OR (int_1 between -5000 and -1000) OR (int_1 between -50000 and -6000) OR (int_1 between 6000 and 7000) OR (int_1 between 10000 and 30000))",
        "comment": "Following SIC-179",
        "query_id": "onem_lines_16",
        "expected_result": [
          [
            -40847,
            -27046,
            3516,
            4403
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "data": "resources/synthetic/onem_lines.jsonl",
    "expected_dictionary_counters": {
      "write_dictionaries_count": 3
    },
    "iceberg_expected_dictionary_counters": {
      "write_dictionaries_count": 5
    }
  },
  {
    "name": "empty_result",
    "lines": 2000010,
    "structure": [
      {
        "name": "bigint_1",
        "type": "bigint"
      },
      {
        "name": "double_2",
        "type": "double"
      },
      {
        "name": "real_3",
        "type": "real"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "bigint_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "double_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "real_3",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "pt_enable": true,
    "warm_query": "select * from empty_result",
    "data": "resources/synthetic/empty_result.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 1
    },
    "queries_data": [
      {
        "query": "select count(*) from empty_result",
        "expected_result": [
          2000010
        ],
        "query_id": "empty_result_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(real_3) from empty_result where cast(real_3 as varchar) = '7.2961776E7'",
        "description": "7.2961776E7 is an invalid cast value  - emptyRowGroup",
        "expected_result": [
          0
        ],
        "query_id": "empty_result_2",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "filtered_by_predicate": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(real_3) from empty_result where cast(real_3 as varchar) = '7.2961776E7' or  cast(real_3 as varchar) = '7.296178E7'",
        "description": "7.2961776E7 is an invalid cast value while 7.296178E7 is a valid cast value",
        "expected_result": [
          2000
        ],
        "query_id": "empty_result_3",
        "expected_counters": {
          "varada_match_columns": 11,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 10,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "varada_match_collect": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "varada_match_collect": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(real_3) from empty_result where cast(real_3 as varchar) > '7.2961776E7' and  cast(real_3 as varchar) = '7.296178E7'",
        "expected_result": [
          2000
        ],
        "query_id": "empty_result_4",
        "expected_counters": {
          "varada_match_columns": 11,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 10,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "varada_match_collect": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "varada_match_collect": 0,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(double_2) from empty_result where ceil(double_2) > 262 and ceil(double_2) < 5",
        "description": "we identify that > 262 and < 5 is empty result, so we return emptyRowGroup",
        "expected_result": [
          0
        ],
        "query_id": "empty_result_5",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "filtered_by_predicate": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(double_2) from empty_result where cast(real_3 as double) > 262",
        "expected_result": [
          1672000
        ],
        "query_id": "empty_result_6",
        "expected_counters": {
          "varada_match_columns": 11,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 10,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "compression",
    "pt_enable": true,
    "lines": 250000,
    "structure": [
      {
        "name": "compressed6",
        "type": "char",
        "args": [
          6
        ]
      },
      {
        "name": "compressed100",
        "type": "char",
        "args": [
          100
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "compressed6",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "compressed100",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      }
    ],
    "warm_query": "select * from compression",
    "data": "resources/synthetic/compression.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 2
    },
    "queries_data": [
      {
        "query": "select count(*) from compression",
        "expected_result": [
          250000
        ],
        "query_id": "compression_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "similar_num",
    "structure": [
      {
        "name": "int_1",
        "type": "integer"
      },
      {
        "name": "bigint_2",
        "type": "bigint"
      },
      {
        "name": "smallint_3",
        "type": "smallint"
      },
      {
        "name": "tinyint_4",
        "type": "tinyint"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "int_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "bigint_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "smallint_3",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "tinyint_4",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "pt_enable": true,
    "comment_type_skip": "all counters are zero for 4 queries",
    "skip_type": [
      "varada_iceberg",
      "varada_delta_lake"
    ],
    "warm_query": "select * from similar_num",
    "data": "resources/synthetic/similar_num.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 2
    },
    "queries_data": [
      {
        "query": "select count(*) from similar_num",
        "expected_result": [
          192000
        ],
        "query_id": "similar_num_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(int_1), max(bigint_2), max(smallint_3), max(tinyint_4)  from similar_num",
        "expected_result": [
          2025538073,
          999708227608558441,
          24545,
          86
        ],
        "query_id": "similar_num_2",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select min(int_1), min(bigint_2), min(smallint_3), min(tinyint_4)  from similar_num",
        "expected_result": [
          2025538073,
          999708227608558441,
          24545,
          86
        ],
        "query_id": "similar_num_3",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where int_1 = 2025538073",
        "expected_result": [
          96270
        ],
        "query_id": "similar_num_4",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where bigint_2 = 999708227608558441",
        "expected_result": [
          95865
        ],
        "query_id": "similar_num_5",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where smallint_3 = 24545",
        "expected_result": [
          95987
        ],
        "query_id": "similar_num_6",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where tinyint_4 = 86",
        "expected_result": [
          96153
        ],
        "query_id": "similar_num_7",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where int_1 > 2025538073 or int_1 < 2025538073",
        "expected_result": [
          0
        ],
        "query_id": "similar_num_8",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where bigint_2 > 999708227608558441 or bigint_2 < 999708227608558441",
        "expected_result": [
          0
        ],
        "query_id": "similar_num_9",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where smallint_3 > 24545 or smallint_3 < 24545",
        "expected_result": [
          0
        ],
        "query_id": "similar_num_10",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where tinyint_4 > 86 or tinyint_4 < 86",
        "expected_result": [
          0
        ],
        "query_id": "similar_num_11",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where smallint_3 = 24545 and tinyint_4 = 86",
        "expected_result": [
          32153
        ],
        "query_id": "similar_num_12",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where int_1 = 2025538073 and bigint_2 = 999708227608558441",
        "expected_result": [
          64000
        ],
        "query_id": "similar_num_13",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where int_1 = 2025538073 and smallint_3 = 24545",
        "expected_result": [
          64257
        ],
        "query_id": "similar_num_14",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_num where int_1 = 2025538073 and tinyint_4 = 86",
        "expected_result": [
          16298
        ],
        "query_id": "similar_num_15",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "similar_num_basic_warm",
    "structure": [
      {
        "name": "int_1",
        "type": "integer"
      },
      {
        "name": "bigint_2",
        "type": "bigint"
      },
      {
        "name": "smallint_3",
        "type": "smallint"
      },
      {
        "name": "tinyint_4",
        "type": "tinyint"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "int_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "smallint_3",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "pt_enable": true,
    "bucket": "s3a://varadaio-us-east1-systemtests/synthetic/similar_num",
    "warm_query": "select count(int_1), count(smallint_3) from similar_num_basic_warm",
    "queries_data": [
      {
        "query": "select count(int_1) from similar_num_basic_warm where (int_1 > 0) or (int_1 is null)",
        "expected_result": [
          96270
        ],
        "query_id": "similar_num_basic_warm_1",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "similar_char_null",
    "pt_enable": true,
    "structure": [
      {
        "name": "varchar_1",
        "type": "varchar"
      },
      {
        "name": "char_2",
        "type": "char",
        "args": [
          20
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "varchar_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "char_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select * from similar_char_null",
    "data": "resources/synthetic/similar_char_null.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 2
    },
    "queries_data": [
      {
        "query": "select count(*) from similar_char_null",
        "expected_result": [
          257536
        ],
        "query_id": "similar_char_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_char_null where varchar_1='VaradaSent'",
        "expected_result": [
          96172
        ],
        "query_id": "similar_char_2",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_char_null where char_2='VaradaVARADASentinel'",
        "expected_result": [
          96021
        ],
        "query_id": "similar_char_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_char_null where char_2 like '%Varada%' OR varchar_1 like '%Varada%'",
        "expected_result": [
          160172
        ],
        "query_id": "similar_char_4",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_char_null where char_2 like '%Varada%' AND varchar_1 like '%Varada%'",
        "expected_result": [
          32021
        ],
        "query_id": "similar_char_5",
        "expected_counters": {
          "varada_match_columns": 4,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_char_null where varchar_1 is null",
        "expected_result": [
          161364
        ],
        "query_id": "similar_char_6",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_char_null where varchar_1 is not null",
        "expected_result": [
          96172
        ],
        "query_id": "similar_char_7",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similar_char_null  where varchar_1 is null and char_2 is null",
        "expected_result": [
          97364
        ],
        "query_id": "similar_char_8",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select varchar_1 from similar_char_null order by varchar_1 limit 2",
        "expected_result": [
          [
            "VaradaSent"
          ],
          [
            "VaradaSent"
          ]
        ],
        "query_id": "similar_char_9",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select char_2 from similar_char_null where varchar_1='VaradaSent' order by char_2 limit 2",
        "expected_result": [
          [
            "VaradaVARADASentinel"
          ],
          [
            "VaradaVARADASentinel"
          ]
        ],
        "query_id": "similar_char_10",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "similarv_one_other",
    "pt_enable": true,
    "structure": [
      {
        "name": "varchar_1",
        "type": "varchar"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "varchar_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select * from similarv_one_other",
    "data": "resources/synthetic/similarv_one_other.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 1
    },
    "queries_data": [
      {
        "query": "select count(*) from similarv_one_other",
        "expected_result": [
          64001
        ],
        "query_id": "similarv_one_other_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similarv_one_other where varchar_1='VaradaVARADASegate20'",
        "expected_result": [
          64000
        ],
        "query_id": "similarv_one_other_2",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similarv_one_other where varchar_1='TalKobiShlomiRomanWe'",
        "expected_result": [
          1
        ],
        "query_id": "similarv_one_other_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "similarc_one_other",
    "pt_enable": true,
    "structure": [
      {
        "name": "char_1",
        "type": "char",
        "args": [
          20
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "char_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select * from similarc_one_other",
    "data": "resources/synthetic/similarc_one_other.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 1
    },
    "queries_data": [
      {
        "query": "select count(*) from similarc_one_other",
        "expected_result": [
          64001
        ],
        "query_id": "similarc_one_other_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similarc_one_other where char_1='VaradaVARADASegate20'",
        "expected_result": [
          42666
        ],
        "query_id": "similarc_one_other_2",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similarc_one_other where char_1='hdkfhkTLL90495840qqq'",
        "expected_result": [
          1
        ],
        "query_id": "similarc_one_other_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similarc_one_other  where char_1='null'",
        "expected_result": [
          21334
        ],
        "query_id": "similarc_one_other_4",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "similarc_two_other",
    "pt_enable": true,
    "structure": [
      {
        "name": "char_1",
        "type": "char",
        "args": [
          20
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "char_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select * from similarc_two_other",
    "data": "resources/synthetic/similarc_two_other.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 1
    },
    "queries_data": [
      {
        "query": "select count(*) from similarc_two_other",
        "expected_result": [
          64000
        ],
        "query_id": "similarc_two_other_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similarc_two_other where char_1='VaradaVARADASegate20'",
        "expected_result": [
          9912
        ],
        "query_id": "similarc_two_other_2",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similarc_two_other where char_1='TalKobiShlomiRomanWe'",
        "expected_result": [
          10088
        ],
        "query_id": "similarc_two_other_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from similarc_two_other where char_1='null'",
        "expected_result": [
          44000
        ],
        "query_id": "similarc_two_other_4",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "integer_tuples",
    "pt_enable": true,
    "lines": 1000000,
    "structure": [
      {
        "name": "col1",
        "type": "integer"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "col1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_BLOOM_HIGH"
        ]
      }
    ],
    "warm_query": "select * from integer_tuples",
    "data": "resources/synthetic/integer_tuples.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 1
    },
    "queries_data": [
      {
        "query": "select count(*) from integer_tuples",
        "expected_result": [
          1000000
        ],
        "query_id": "integer_tuples_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct col1) from integer_tuples",
        "expected_result": [
          50
        ],
        "query_id": "integer_tuples_2",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from integer_tuples where col1%2=0",
        "expected_result": [
          440000
        ],
        "query_id": "integer_tuples_3",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from integer_tuples where col1<=0",
        "expected_result": [
          480000
        ],
        "query_id": "integer_tuples_4",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(col1) from integer_tuples",
        "expected_result": [
          2127531729
        ],
        "query_id": "integer_tuples_5",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select min(col1) from integer_tuples",
        "expected_result": [
          -2101210454
        ],
        "query_id": "integer_tuples_6",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "tuples_40keys",
    "pt_enable": true,
    "skip_caching": true,
    "lines": 60000000,
    "structure": [
      {
        "name": "int_1",
        "type": "integer",
        "args": [
          true
        ]
      },
      {
        "name": "bigint_1",
        "type": "bigint"
      },
      {
        "name": "double_1",
        "type": "double"
      },
      {
        "name": "decimal_1",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "long_dec",
        "type": "decimal",
        "args": [
          38,
          12
        ]
      },
      {
        "name": "char_50",
        "type": "char",
        "args": [
          50
        ]
      },
      {
        "name": "varchar_200",
        "type": "varchar",
        "args": [
          200
        ],
        "min_length": 100
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "int_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "bigint_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "double_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "decimal_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "long_dec",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_BLOOM_LOW"
        ]
      },
      {
        "colNameId": "char_50",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "varchar_200",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_LUCENE"
        ]
      }
    ],
    "warm_query": "select * from tuples_40keys",
    "data": "resources/synthetic/tuples_40keys.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 5
    },
    "queries_data": [
      {
        "query": "select count(*) from tuples_40keys",
        "expected_result": [
          60000000
        ],
        "query_id": "tuples_40keys_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct(int_1)) from tuples_40keys",
        "expected_result": [
          38
        ],
        "query_id": "tuples_40keys_2",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct(decimal_1)) from tuples_40keys",
        "expected_result": [
          33
        ],
        "query_id": "tuples_40keys_3",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct(long_dec)) from tuples_40keys",
        "expected_result": [
          33
        ],
        "query_id": "tuples_40keys_4",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct(char_50)) from tuples_40keys",
        "expected_result": [
          36
        ],
        "query_id": "tuples_40keys_5",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct(varchar_200)) from tuples_40keys",
        "expected_result": [
          38
        ],
        "query_id": "tuples_40keys_6",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where int_1>0 and bigint_1<0",
        "expected_result": [
          10500000
        ],
        "query_id": "tuples_40keys_7",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where double_1>100.5 and decimal_1 is null",
        "expected_result": [
          9000000
        ],
        "query_id": "tuples_40keys_8",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where (char_50 like '%oFQqXikhoKLhkuFxMOtX%' or varchar_200 like '%Han%') and long_dec=97536582917822112971358208.120006728390",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_9",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 1,
          "external_match_columns": 2,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select min(long_dec) from tuples_40keys",
        "expected_result": [
          "5180424893304856987566080.000012000000"
        ],
        "query_id": "tuples_40keys_10",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(long_dec) from tuples_40keys",
        "expected_result": [
          "97536582917822112971358208.120006728390"
        ],
        "query_id": "tuples_40keys_11",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select avg(decimal_1) from tuples_40keys",
        "expected_result": [
          "53883.72"
        ],
        "query_id": "tuples_40keys_12",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select long_dec, count(*) from tuples_40keys group by long_dec having long_dec<10972615084823129343655936.123400000000",
        "expected_result": [
          "5180424893304856987566080.000012000000",
          1500000
        ],
        "query_id": "tuples_40keys_13",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select int_1 from tuples_40keys where varchar_200 like 'Jessica Calderon%' group by int_1",
        "expected_result": [
          1307249278
        ],
        "query_id": "tuples_40keys_14",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select char_50, count(*) from tuples_40keys where varchar_200 like '%A%' or (decimal_1>20.20 and bigint_1<0) group by char_50 having char_50 like '%tuwX2U$n8_wRXl$2(R%'",
        "expected_result": [
          "tuwX2U$n8_wRXl$2(R*LBE7EDCGV@y$uH!ZkkYk526b8f2E$Po",
          1500000
        ],
        "query_id": "tuples_40keys_15",
        "expected_counters": {
          "varada_match_columns": 3,
          "varada_collect_columns": 4,
          "external_match_columns": 1,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select long_dec from tuples_40keys where int_1=1157116450 limit 1",
        "expected_result": [
          "34287764572822350117994496.100000000000"
        ],
        "query_id": "tuples_40keys_16",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select double_1, bigint_1 from tuples_40keys where int_1>-1682071424 and double_1=45.274795712 order by long_dec limit 1",
        "expected_result": [
          45.274795712,
          4243756107708081821
        ],
        "query_id": "tuples_40keys_17",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where varchar_200 like '%Carlos%' and int_1<=880675775 and bigint_1>=-822429791764944639",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_18",
        "expected_counters": {
          "varada_match_columns": 3,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where int_1<=880675775 and bigint_1>=-822429791764944639",
        "expected_result": [
          19500000
        ],
        "query_id": "tuples_40keys_19",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where decimal_1 is null and int_1=-1552097198",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_20",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where (decimal_1=99919.99 or decimal_1=36104.64) and long_dec is null",
        "session_properties": {
          "enable_mapped_match_collect": true
        },
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_21",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "varada_match_collect_columns": 1,
          "varada_mapped_match_collect_columns": 1,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select int_1, count(*) from tuples_40keys where decimal_1=62211.75 group by int_1",
        "expected_result": [
          null,
          1500000
        ],
        "query_id": "tuples_40keys_22",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where long_dec between 34287764572822350117994495.100000000000 and 34287764572822350117994496.200000000000",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_23",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where (int_1<=-344138893 and decimal_1=4850.35) or long_dec>=50431350506221201512202240.001630000000",
        "expected_result": [
          25500000
        ],
        "query_id": "tuples_40keys_24",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where ((int_1<=-344138893 or int_1>0) and decimal_1=4850.35) or long_dec=50431350506221201512202240.001630000000",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_25",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where long_dec=50431350506221201512202240.001630000000 and decimal_1=4580.35",
        "expected_result": [
          0
        ],
        "query_id": "tuples_40keys_26",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, 1, 2) is null",
        "expected_result": [
          3000000
        ],
        "query_id": "tuples_40keys_27",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(substr(char_50, 1,2)) from tuples_40keys where substr(varchar_200,1,2) is null and int_1=-2026652051",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_28",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select int_1 from tuples_40keys where substr(varchar_200, 200, 2) is null order by int_1 limit 1",
        "expected_result": [
          -2026652051
        ],
        "query_id": "tuples_40keys_29",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, -3, 2) IN ('ZD','4R')",
        "expected_result": [
          3000000
        ],
        "query_id": "tuples_40keys_30",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(varchar_200) from tuples_40keys where substr(varchar_200, -3, 2) IS NULL",
        "expected_result": [
          0
        ],
        "query_id": "tuples_40keys_31",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(varchar_200) from tuples_40keys where substr(varchar_200, -3, 2) LIKE '%D%' and strpos(cast(char_50 as varchar), 'a') > 1",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_32",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 4,
          "prefilled_collect_columns": 0,
          "external_match_columns": 2,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 4,
          "prefilled_collect_columns": 0,
          "external_match_columns": 2,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(varchar_200) from tuples_40keys where substr(varchar_200, 5, 10) LIKE '%on M%' and strpos(cast(char_50 as varchar), 'F4gROFedh@&00oN%D+vB+gQUoK4XK@Cfj') <= 5",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_33",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 4,
          "prefilled_collect_columns": 0,
          "external_match_columns": 2,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 4,
          "prefilled_collect_columns": 0,
          "external_match_columns": 2,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, -3, 2) = 'ZD'",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_34",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, -3, 2) NOT IN ('ZD', 'AB')",
        "expected_result": [
          55500000
        ],
        "query_id": "tuples_40keys_35",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, -3, 2)= 'ZD' and strpos(varchar_200,  'Book') = 4",
        "expected_result": [
          0
        ],
        "query_id": "tuples_40keys_36",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, -3, 2)= 'ZD' or strpos(varchar_200,  'Book') = 4",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_37",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, -3, 2) = 'ZD' or substr(varchar_200, -3, 2) IN ('AA', 'YY')",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_38",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, -3, 2) = 'ZD' AND substr(varchar_200, -3, 2) NOT IN ('AA', 'YY')",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_39",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where substr(varchar_200, -3, 2) = 'ZD' OR substr(varchar_200, -3, 2) NOT IN ('AA', 'YY')",
        "expected_result": [
          57000000
        ],
        "query_id": "tuples_40keys_40",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where CAST(int_1 as DOUBLE) = double_1",
        "expected_result": [
          0
        ],
        "query_id": "tuples_40keys_41",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where CAST(int_1 as DOUBLE) = -551567805.0",
        "expected_result": [
          1500000
        ],
        "query_id": "tuples_40keys_42",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where CAST(decimal_1 as DOUBLE) >= 61399.67",
        "expected_result": [
          24000000
        ],
        "query_id": "tuples_40keys_43",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where CAST(decimal_1 as DOUBLE) >= double_1",
        "expected_result": [
          13500000
        ],
        "query_id": "tuples_40keys_44",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where CAST(decimal_1 as DOUBLE) >= 61399.67 or CAST(int_1 as DOUBLE) >= -551567805.0",
        "expected_result": [
          39000000
        ],
        "query_id": "tuples_40keys_45",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where CAST(decimal_1 as DOUBLE) >= 61399.67 and CAST(int_1 as DOUBLE) >= -551567805.0",
        "expected_result": [
          18000000
        ],
        "query_id": "tuples_40keys_46",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from tuples_40keys where CAST(double_1 as DOUBLE) >= 1.6928627299815E8",
        "expected_result": [
          28500000
        ],
        "query_id": "tuples_40keys_47",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "view_properties": {
      "view_name": "view_tuples_40keys",
      "create_view_query": "select * from tuples_40keys where varchar_200 is not null and long_dec > 10000.1234",
      "queries_data": [
        {
          "query": "select count(varchar_200) from view_tuples_40keys",
          "query_id": "view_tuples_40keys_01",
          "expected_result": [
            46500000
          ],
          "expected_counters": {
            "varada_match_columns": 2,
            "varada_collect_columns": 1,
            "external_match_columns": 0,
            "external_collect_columns": 0
          }
        },
        {
          "query": "select count(bigint_1) from view_tuples_40keys where bigint_1 < 100000000000 or char_50 >= 'a'",
          "query_id": "view_tuples_40keys_02",
          "expected_result": [
            22500000
          ],
          "expected_counters": {
            "varada_match_columns": 4,
            "varada_collect_columns": 4,
            "external_match_columns": 0,
            "external_collect_columns": 0
          }
        }
      ]
    }
  },
  {
    "name": "caching_table",
    "pt_enable": true,
    "structure": [
      {
        "name": "ss_sold_date_sk",
        "type": "integer"
      },
      {
        "name": "ss_sold_time_sk",
        "type": "integer"
      },
      {
        "name": "ss_item_sk",
        "type": "integer"
      },
      {
        "name": "ss_customer_sk",
        "type": "integer"
      },
      {
        "name": "ss_cdemo_sk",
        "type": "integer"
      },
      {
        "name": "ss_hdemo_sk",
        "type": "integer"
      },
      {
        "name": "ss_addr_sk",
        "type": "integer"
      },
      {
        "name": "ss_store_sk",
        "type": "integer"
      },
      {
        "name": "ss_promo_sk",
        "type": "integer"
      },
      {
        "name": "ss_ticket_number",
        "type": "bigint"
      },
      {
        "name": "ss_quantity",
        "type": "integer"
      },
      {
        "name": "ss_wholesale_cost",
        "type": "double"
      },
      {
        "name": "ss_list_price",
        "type": "double"
      },
      {
        "name": "ss_sales_price",
        "type": "double"
      },
      {
        "name": "ss_ext_discount_amt",
        "type": "double"
      },
      {
        "name": "ss_ext_sales_price",
        "type": "double"
      },
      {
        "name": "ss_ext_wholesale_cost",
        "type": "double"
      },
      {
        "name": "ss_ext_list_price",
        "type": "double"
      },
      {
        "name": "ss_ext_tax",
        "type": "double"
      },
      {
        "name": "ss_coupon_amt",
        "type": "double"
      },
      {
        "name": "ss_net_paid",
        "type": "double"
      },
      {
        "name": "ss_net_paid_inc_tax",
        "type": "double"
      },
      {
        "name": "ss_net_profit",
        "type": "double"
      },
      {
        "name": "d_date",
        "type": "date"
      },
      {
        "name": "d_year",
        "type": "integer"
      },
      {
        "name": "d_quater",
        "type": "integer"
      },
      {
        "name": "t_am_pm",
        "type": "char",
        "args": [
          2
        ]
      },
      {
        "name": "c_description100",
        "type": "varchar",
        "args": [
          100
        ]
      },
      {
        "name": "c_string_num",
        "type": "varchar",
        "args": [
          4
        ]
      },
      {
        "name": "c_town",
        "type": "varchar",
        "args": [
          15
        ]
      },
      {
        "name": "c_description200",
        "type": "varchar",
        "args": [
          300
        ]
      },
      {
        "name": "c_jibrish30",
        "type": "varchar",
        "args": [
          30
        ]
      },
      {
        "name": "c_description60",
        "type": "varchar",
        "args": [
          60
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "ss_item_sk",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "d_year",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      }
    ],
    "warm_query": "select count(ss_item_sk), count(d_year) from caching_table",
    "queries_data": [
      {
        "query": "select count(ss_item_sk) from caching_table",
        "query_id": "caching_table_01",
        "expected_result": [
          [
            262759
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(d_year) from caching_table where d_year=1999",
        "query_id": "caching_table_02",
        "expected_result": [
          [
            32785
          ]
        ],
        "expected_counters": {
          "varada_collect_columns": 1,
          "empty_collect_columns": 0
        }
      }
    ],
    "expected_dictionary_counters": {
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 2
    }
  },
  {
    "name": "limit_mix",
    "pt_enable": true,
    "skip_caching": true,
    "structure": [
      {
        "name": "col_1",
        "type": "integer"
      },
      {
        "name": "col_2",
        "type": "integer"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "col_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      }
    ],
    "warm_query": "select col_1 from limit_mix",
    "queries_data": [
      {
        "query_id": "limit_mix_1",
        "query": "select * from limit_mix limit 2",
        "expected_result": [
          [
            1,
            1
          ],
          [
            2,
            3
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 1
        }
      }
    ],
    "data": "resources/synthetic/limit_mix.jsonl",
    "expected_dictionary_counters": {
      "dictionary_failed_elements_count": 0,
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 1
    }
  },
  {
    "name": "single_chunk_null_133k",
    "pt_enable": true,
    "lines": 136192,
    "structure": [
      {
        "name": "str5",
        "type": "varchar"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "str5",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select count(str5) from single_chunk_null_133k",
    "data": "resources/synthetic/single_chunk_null_133k.jsonl",
    "expected_dictionary_counters": {
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 1
    },
    "queries_data": [
      {
        "query": "select count(*) from single_chunk_null_133k",
        "expected_result": [
          136192
        ],
        "query_id": "single_chunk_null_133k_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct str5) from single_chunk_null_133k",
        "expected_result": [
          1
        ],
        "query_id": "single_chunk_null_133k_2",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select str5, count(*) from single_chunk_null_133k where str5 is not null group by str5",
        "expected_result": [
          "nOfTfyy1@3",
          102400
        ],
        "query_id": "single_chunk_null_133k_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "single_chunk_xynull_133k",
    "pt_enable": true,
    "lines": 136192,
    "structure": [
      {
        "name": "str6",
        "type": "varchar"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "str6",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select count(str6) from single_chunk_xynull_133k",
    "data": "resources/synthetic/single_chunk_xynull_133k.jsonl",
    "expected_dictionary_counters": {
      "dictionary_rejected_elements_count": 0,
      "write_dictionaries_count": 1
    },
    "queries_data": [
      {
        "query": "select count(*) from single_chunk_xynull_133k",
        "expected_result": [
          136192
        ],
        "query_id": "single_chunk_xynull_133k_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct str6) from single_chunk_xynull_133k",
        "expected_result": [
          2
        ],
        "query_id": "single_chunk_xynull_133k_2",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select str6,count(*) from single_chunk_xynull_133k where str6 is not null group by str6 order by str6",
        "expected_result": [
          [
            "*a&29141*wB5nyw)G2F",
            33862
          ],
          [
            "++utGiZJKAZxmPmb",
            34210
          ]
        ],
        "query_id": "single_chunk_xynull_133k_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "consecutive_nulls",
    "description": "data contains 80k data and 120k nulls, col1: single value, col2: diff valuse, col3: int 0-100, col4: bool",
    "pt_enable": true,
    "structure": [
      {
        "name": "col_single",
        "type": "integer"
      },
      {
        "name": "col_diff",
        "type": "integer"
      },
      {
        "name": "col_zero_100",
        "type": "integer"
      },
      {
        "name": "col_bool",
        "type": "boolean"
      }
    ],
    "comment_type_skip": "counters issue : all 0",
    "skip_type": [
      "varada_iceberg",
      "varada_delta_lake"
    ],
    "warmup_rules": [
      {
        "colNameId": "col_single",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_diff",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_zero_100",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_bool",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select count(col_single),count(col_diff),count(col_zero_100),count(col_bool)  from consecutive_nulls",
    "queries_data": [
      {
        "query": "select count(*) from consecutive_nulls",
        "expected_result": [
          200000
        ],
        "query_id": "consecutive_nulls_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(1) - count(col_single) from consecutive_nulls",
        "expected_result": [
          120000
        ],
        "query_id": "consecutive_nulls_2",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from consecutive_nulls where col_single != 7",
        "expected_result": [
          0
        ],
        "query_id": "consecutive_nulls_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_match_on_simplified_domain": 0,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from consecutive_nulls where col_bool=true",
        "expected_result": [
          40003
        ],
        "query_id": "consecutive_nulls_4",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from consecutive_nulls where NOT col_bool",
        "expected_result": [
          39997
        ],
        "query_id": "consecutive_nulls_5",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "data": "resources/synthetic/consecutive_nulls.jsonl"
  },
  {
    "name": "wide_40k",
    "pt_enable": true,
    "structure": [
      {
        "name": "col_1",
        "type": "varchar"
      },
      {
        "name": "col_2",
        "type": "varchar"
      },
      {
        "name": "col_3",
        "type": "varchar"
      },
      {
        "name": "col_4",
        "type": "varchar"
      },
      {
        "name": "col_5",
        "type": "varchar"
      },
      {
        "name": "col_6",
        "type": "varchar"
      },
      {
        "name": "col_7",
        "type": "varchar"
      },
      {
        "name": "col_8",
        "type": "varchar"
      },
      {
        "name": "col_9",
        "type": "varchar"
      },
      {
        "name": "col_10",
        "type": "varchar"
      },
      {
        "name": "col_11",
        "type": "varchar"
      },
      {
        "name": "col_12",
        "type": "varchar"
      },
      {
        "name": "col_13",
        "type": "varchar"
      },
      {
        "name": "col_14",
        "type": "varchar"
      },
      {
        "name": "col_15",
        "type": "varchar"
      },
      {
        "name": "col_16",
        "type": "varchar"
      },
      {
        "name": "col_17",
        "type": "varchar"
      },
      {
        "name": "col_18",
        "type": "varchar"
      },
      {
        "name": "col_19",
        "type": "varchar"
      },
      {
        "name": "col_20",
        "type": "varchar"
      },
      {
        "name": "col_21",
        "type": "varchar"
      },
      {
        "name": "col_22",
        "type": "varchar"
      },
      {
        "name": "col_23",
        "type": "varchar"
      },
      {
        "name": "col_24",
        "type": "varchar"
      },
      {
        "name": "col_25",
        "type": "varchar"
      },
      {
        "name": "col_26",
        "type": "varchar"
      },
      {
        "name": "col_27",
        "type": "varchar"
      },
      {
        "name": "col_28",
        "type": "varchar"
      },
      {
        "name": "col_29",
        "type": "varchar"
      },
      {
        "name": "col_30",
        "type": "varchar"
      }
    ],
    "warm_query": "select count(col_1), count(col_2), count(col_3), count(col_4), count(col_5), count(col_6), count(col_7), count(col_8), count(col_9), count(col_10), count(col_11), count(col_12), count(col_13), count(col_14), count(col_15), count(col_16), count(col_17), count(col_18), count(col_19), count(col_20), count(col_21), count(col_22), count(col_23), count(col_24), count(col_25), count(col_26), count(col_27), count(col_28), count(col_29), count(col_30) from wide_40k",
    "warmup_rules": [
      {
        "colNameId": "col_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_3",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_4",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_5",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_6",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_7",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_8",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_9",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_10",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_11",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_12",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_13",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_14",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_15",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_16",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_17",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_18",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_19",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_20",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_21",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_22",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_23",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_24",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_25",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_26",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_27",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_28",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_29",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_30",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "queries_data": [
      {
        "query_id": "wide_40k_1",
        "query": "select count(*) from wide_40k",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "wide_40k_2",
        "query": "select length(col_1) from wide_40k",
        "expected_result": [
          40000
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "wide_40k_3",
        "query": "select count(col_1) from wide_40k where col_1 like '%PPZC%'",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 1,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "wide_40k_4",
        "query": "select count(col_1) from wide_40k where col_1 like '%PPZC1%'",
        "expected_result": [
          0
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 1,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "collect_optim",
    "comment": "The query below collect_optim_2 and collect_optim_3 have external due VDB-5329. Please change counters when fixed",
    "pt_enable": true,
    "structure": [
      {
        "name": "int_chunks",
        "type": "integer"
      },
      {
        "name": "int_chunk_no_null",
        "type": "integer"
      },
      {
        "name": "double_chunks",
        "type": "double"
      },
      {
        "name": "double_chunk_no_null",
        "type": "double"
      },
      {
        "name": "tinyint_chunks",
        "type": "tinyint"
      },
      {
        "name": "tinyint_chunk_no_null",
        "type": "tinyint"
      },
      {
        "name": "smallint_chunks",
        "type": "smallint"
      },
      {
        "name": "smallint_chunk_no_null",
        "type": "smallint"
      },
      {
        "name": "longdecimal_chunks",
        "type": "decimal",
        "args": [
          38,
          12
        ]
      },
      {
        "name": "longdecimal_chunk_no_null",
        "type": "decimal",
        "args": [
          38,
          12
        ]
      },
      {
        "name": "bigint_chunks",
        "type": "bigint"
      },
      {
        "name": "bigint_chunk_no_null",
        "type": "bigint"
      },
      {
        "name": "bool_chunks",
        "type": "boolean"
      },
      {
        "name": "bool_chunk_no_null",
        "type": "boolean"
      },
      {
        "name": "varchar_20_chunks",
        "type": "varchar"
      },
      {
        "name": "varchar_20_no_null",
        "type": "varchar"
      },
      {
        "name": "varchar_7_chunks",
        "type": "varchar"
      },
      {
        "name": "varchar_7_no_null",
        "type": "varchar"
      },
      {
        "name": "varchar_empty",
        "type": "varchar"
      },
      {
        "name": "varchar_empty_with_null",
        "type": "varchar"
      },
      {
        "name": "date_chunks",
        "type": "date"
      },
      {
        "name": "date_chunks_no_null",
        "type": "date"
      },
      {
        "name": "timestamp_chunks",
        "type": "timestamp"
      },
      {
        "name": "timestamp_chunks_no_null",
        "type": "timestamp"
      }
    ],
    "queries_data": [
      {
        "query_id": "collect_optim_1",
        "query": "select count(*) from collect_optim",
        "expected_result": [
          128020
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "collect_optim_2",
        "query": "select count(*)-count(int_chunks) from collect_optim",
        "expected_result": [
          64015
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "collect_optim_3",
        "query": "select count(*)-count(int_chunk_no_null) from collect_optim",
        "expected_result": [
          64010
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "collect_optim_4",
        "query": "select count(*) from collect_optim where varchar_7_chunks like 'ooo%'",
        "expected_result": [
          64008
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "collect_optim_5",
        "query": "select count(*) from collect_optim where int_chunk_no_null > 100",
        "expected_result": [
          57586
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "collect_optim_6",
        "query": "select count(*) from collect_optim where varchar_7_chunks like 'ooo%' AND varchar_20_no_null like '%a%'",
        "expected_result": [
          52007
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "collect_optim_7",
        "query": "select distinct(int_chunks) from collect_optim where int_chunks is not NULL",
        "expected_result": [
          434
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "collect_optim_8",
        "query": "select distinct(varchar_7_chunks) from collect_optim where varchar_7_chunks is not NULL",
        "expected_result": [
          "ooops22"
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "data": "resources/synthetic/collect_num.jsonl"
  },
  {
    "name": "arr_collect_optim",
    "pt_enable": true,
    "skip_caching": true,
    "structure": [
      {
        "name": "varchar_20_one_val",
        "type": "array",
        "args": [
          "varchar"
        ]
      },
      {
        "name": "varchar_20_one_arr",
        "type": "array",
        "args": [
          "varchar"
        ]
      },
      {
        "name": "varchar_7_one_val",
        "type": "array",
        "args": [
          "varchar"
        ]
      },
      {
        "name": "varchar_7_one_arr",
        "type": "array",
        "args": [
          "varchar"
        ]
      },
      {
        "name": "int_one_val",
        "type": "array",
        "args": [
          "integer"
        ]
      },
      {
        "name": "int_one_arr",
        "type": "array",
        "args": [
          "integer"
        ]
      },
      {
        "name": "bigint_one_val",
        "type": "array",
        "args": [
          "bigint"
        ]
      },
      {
        "name": "bigint_one_arr",
        "type": "array",
        "args": [
          "bigint"
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "varchar_20_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "varchar_20_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "varchar_7_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "varchar_7_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "int_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "int_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "bigint_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "bigint_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      }
    ],
    "queries_data": [
      {
        "query_id": "arr_collect_optim_1",
        "query": "select count(*) from arr_collect_optim",
        "expected_result": [
          128010
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_2",
        "query": "select count(varchar_20_one_val) from arr_collect_optim WHERE  contains(varchar_20_one_val, 'Array story and the ')",
        "expected_result": [
          64008
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 1,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_3",
        "query": "select count(varchar_20_one_arr) from arr_collect_optim WHERE  contains(varchar_20_one_arr, 'Find useful ways')",
        "expected_result": [
          64010
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_4",
        "query": "select count(varchar_7_one_arr) from arr_collect_optim WHERE  contains(varchar_7_one_arr, 'righter')",
        "expected_result": [
          64010
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_5",
        "query": "select count(int_one_val) from arr_collect_optim WHERE  contains(int_one_val, 84759)",
        "expected_result": [
          64006
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_6",
        "query": "select count(int_one_arr) from arr_collect_optim WHERE  contains(int_one_arr, 324)",
        "expected_result": [
          64010
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_7",
        "query": "select count(bigint_one_val) from arr_collect_optim WHERE  contains(bigint_one_val, 10000000000009999)",
        "expected_result": [
          64008
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_8",
        "query": "select bigint_one_val[1] from arr_collect_optim WHERE  bigint_one_val is not NULL limit 1",
        "expected_result": [
          10000000000009999
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_9",
        "query": "select int_one_val[1] from arr_collect_optim WHERE  int_one_val is not NULL limit 1",
        "expected_result": [
          84759
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_10",
        "query": "select varchar_7_one_val[1] from arr_collect_optim WHERE  varchar_7_one_val is not NULL limit 1",
        "expected_result": [
          "myarrayy"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_optim_11",
        "query": "select varchar_20_one_val[1] from arr_collect_optim WHERE  varchar_20_one_val is not NULL limit 1",
        "expected_result": [
          "Array story and the "
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "data": "resources/synthetic/collect_arr.jsonl"
  },
  {
    "name": "arr_collect_more",
    "pt_enable": true,
    "skip_caching": true,
    "structure": [
      {
        "name": "char_1_one_val",
        "type": "array",
        "args": [
          "char"
        ]
      },
      {
        "name": "char_1_one_arr",
        "type": "array",
        "args": [
          "char"
        ]
      },
      {
        "name": "char_8_one_val",
        "type": "array",
        "args": [
          "char",
          "8"
        ]
      },
      {
        "name": "char_8_one_arr",
        "type": "array",
        "args": [
          "char",
          "8"
        ]
      },
      {
        "name": "char_20_one_val",
        "type": "array",
        "args": [
          "char",
          "20"
        ]
      },
      {
        "name": "char_20_one_arr",
        "type": "array",
        "args": [
          "char",
          "20"
        ]
      },
      {
        "name": "date_one_val",
        "type": "array",
        "args": [
          "date"
        ]
      },
      {
        "name": "date_one_arr",
        "type": "array",
        "args": [
          "date"
        ]
      },
      {
        "name": "timestamp_one_val",
        "type": "array",
        "args": [
          "timestamp"
        ]
      },
      {
        "name": "timestamp_one_arr",
        "type": "array",
        "args": [
          "timestamp"
        ]
      },
      {
        "name": "double_one_val",
        "type": "array",
        "args": [
          "double"
        ]
      },
      {
        "name": "double_one_arr",
        "type": "array",
        "args": [
          "double"
        ]
      },
      {
        "name": "bool_one_val",
        "type": "array",
        "args": [
          "boolean"
        ]
      },
      {
        "name": "bool_one_arr",
        "type": "array",
        "args": [
          "boolean"
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "char_1_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "char_1_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "char_8_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "char_8_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "char_20_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "char_20_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "date_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "date_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "timestamp_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "timestamp_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "double_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "double_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "bool_one_val",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "bool_one_arr",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      }
    ],
    "queries_data": [
      {
        "query_id": "arr_collect_more_1",
        "query": "select count(*) from arr_collect_more",
        "expected_result": [
          128010
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_2",
        "query": "select count(char_1_one_val) from arr_collect_more WHERE  contains(char_8_one_arr, 'Gewrwee1')",
        "expected_result": [
          64006
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_3",
        "query": "select char_1_one_val[1] from arr_collect_more WHERE char_1_one_val[1] is not NULL limit 1",
        "expected_result": [
          "c"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_4",
        "query": "select char_1_one_arr[2] from arr_collect_more WHERE char_1_one_arr[2] is not NULL limit 1",
        "expected_result": [
          "W"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_5",
        "query": "select char_8_one_arr[2] from arr_collect_more WHERE char_8_one_arr[2] is not NULL limit 1",
        "expected_result": [
          "Hdskskhf"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_6",
        "query": "select char_20_one_arr[1] from arr_collect_more WHERE char_20_one_arr[1] is not NULL limit 1",
        "expected_result": [
          "Root and tute and go"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_7",
        "query": "select timestamp_one_arr[1] from arr_collect_more WHERE timestamp_one_arr[1] is not NULL limit 1",
        "expected_result": [
          "1999-09-08 05:01:40.000"
        ],
        "expected_iceberg_result": [
          "1999-09-08 05:01:40.000000"
        ],
        "expected_dl_result": [
          "1999-09-08 05:01:40.000 UTC"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_8",
        "query": "select double_one_arr[2] from arr_collect_more WHERE double_one_arr[2] is not NULL limit 1",
        "expected_result": [
          453534.45646
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_9",
        "query": "select bool_one_arr[2] from arr_collect_more WHERE bool_one_arr[2] is not NULL limit 1",
        "expected_result": [
          false
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_10",
        "query": "select array_distinct(char_1_one_val)[1] from arr_collect_more limit 1",
        "expected_result": [
          "c"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_11",
        "query": "select array_distinct(char_8_one_val)[1] from arr_collect_more limit 1",
        "expected_result": [
          "charrayy"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_12",
        "query": "select array_distinct(char_20_one_val)[1] from arr_collect_more limit 1",
        "expected_result": [
          "Array story and pund"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_13",
        "query": "select array_distinct(timestamp_one_val)[1] from arr_collect_more limit 1",
        "expected_result": [
          "2008-09-08 19:01:35.000"
        ],
        "expected_iceberg_result": [
          "2008-09-08 19:01:35.000000"
        ],
        "expected_dl_result": [
          "2008-09-08 19:01:35.000 UTC"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_14",
        "query": "select array_distinct(date_one_val)[1] from arr_collect_more limit 1",
        "expected_result": [
          "2010-08-04"
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_15",
        "query": "select array_distinct(double_one_val)[1] from arr_collect_more limit 1",
        "expected_result": [
          5326100.351550714
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_16",
        "query": "select array_distinct(bool_one_val)[1] from arr_collect_more limit 1",
        "expected_result": [
          true
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_17",
        "query": "select array_min(double_one_arr) from arr_collect_more limit 1",
        "expected_result": [
          0.3453453
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "arr_collect_more_18",
        "query": "select count(*) from arr_collect_more where contains(char_20_one_arr, 'Root and tute and go')",
        "expected_result": [
          "64010"
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "data": "resources/synthetic/collect_arr_more.jsonl"
  },
  {
    "name": "varchar_rectlength",
    "description": "Following VDB-5382, overflow",
    "pt_enable": true,
    "session_properties": {
      "enable_import_export": false
    },
    "structure": [
      {
        "name": "varchar_col",
        "type": "varchar"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "varchar_col",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "varchar_col",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "queries_data": [
      {
        "query_id": "varchar_rectlength_1",
        "query": "select count(varchar_col) from varchar_rectlength",
        "expected_result": [
          128002
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "varchar_rectlength_2",
        "query": "select length(varchar_col) from varchar_rectlength where length(varchar_col)>5",
        "expected_result": [
          49152
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query_id": "varchar_rectlength_3",
        "query": "select count(varchar_col) from varchar_rectlength where varchar_col='Teres'",
        "expected_result": [
          315
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "data": "resources/synthetic/varchar_rectlength.jsonl"
  },
  {
    "name": "denorm_table",
    "description": "skipping test denorm_table in PT - due to Query exceeded per-node memory limit of 1GB error, run only in gk",
    "long_warmup": true,
    "data_format": "ORC",
    "comment_type_skip": "counters issue : incorrect match, leave it only on hive - big table",
    "skip_type": [
      "varada_iceberg",
      "varada_delta_lake"
    ],
    "structure": [
      {
        "name": "_ss_sold_date_sk",
        "type": "integer"
      },
      {
        "name": "ss_sold_time_sk",
        "type": "integer"
      },
      {
        "name": "ss_item_sk",
        "type": "integer"
      },
      {
        "name": "ss_customer_sk",
        "type": "integer"
      },
      {
        "name": "ss_cdemo_sk",
        "type": "integer"
      },
      {
        "name": "ss_hdemo_sk",
        "type": "integer"
      },
      {
        "name": "ss_addr_sk",
        "type": "integer"
      },
      {
        "name": "ss_store_sk",
        "type": "integer"
      },
      {
        "name": "ss_promo_sk",
        "type": "integer"
      },
      {
        "name": "ss_ticket_number",
        "type": "decimal",
        "args": [
          11,
          0
        ]
      },
      {
        "name": "ss_quantity",
        "type": "integer"
      },
      {
        "name": "ss_wholesale_cost",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_list_price",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_sales_price",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_ext_discount_amt",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_ext_sales_price",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_ext_wholesale_cost",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_ext_list_price",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_ext_tax",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_coupon_amt",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_net_paid",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_net_paid_inc_tax",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_net_profit",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "ss_sold_date_sk",
        "type": "integer"
      },
      {
        "name": "d_date_sk",
        "type": "integer"
      },
      {
        "name": "d_date_id",
        "type": "char",
        "args": [
          16
        ]
      },
      {
        "name": "d_date",
        "type": "date"
      },
      {
        "name": "d_month_seq",
        "type": "integer"
      },
      {
        "name": "d_week_seq",
        "type": "integer"
      },
      {
        "name": "d_quarter_seq",
        "type": "integer"
      },
      {
        "name": "d_year",
        "type": "integer"
      },
      {
        "name": "d_dow",
        "type": "integer"
      },
      {
        "name": "d_moy",
        "type": "integer"
      },
      {
        "name": "d_dom",
        "type": "integer"
      },
      {
        "name": "d_qoy",
        "type": "integer"
      },
      {
        "name": "d_fy_year",
        "type": "integer"
      },
      {
        "name": "d_fy_quarter_seq",
        "type": "integer"
      },
      {
        "name": "d_fy_week_seq",
        "type": "integer"
      },
      {
        "name": "d_day_name",
        "type": "char",
        "args": [
          9
        ]
      },
      {
        "name": "d_quarter_name",
        "type": "char",
        "args": [
          6
        ]
      },
      {
        "name": "d_holiday",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "d_weekend",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "d_following_holiday",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "d_first_dom",
        "type": "integer"
      },
      {
        "name": "d_last_dom",
        "type": "integer"
      },
      {
        "name": "d_same_day_ly",
        "type": "integer"
      },
      {
        "name": "d_same_day_lq",
        "type": "integer"
      },
      {
        "name": "d_current_day",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "d_current_week",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "d_current_month",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "d_current_quarter",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "d_current_year",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "t_time_sk",
        "type": "integer"
      },
      {
        "name": "t_time_id",
        "type": "char",
        "args": [
          16
        ]
      },
      {
        "name": "t_time",
        "type": "integer"
      },
      {
        "name": "t_hour",
        "type": "integer"
      },
      {
        "name": "t_minute",
        "type": "integer"
      },
      {
        "name": "t_second",
        "type": "integer"
      },
      {
        "name": "t_am_pm",
        "type": "char",
        "args": [
          2
        ]
      },
      {
        "name": "t_shift",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "t_sub_shift",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "t_meal_time",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "c_customer_sk",
        "type": "integer"
      },
      {
        "name": "c_customer_id",
        "type": "char",
        "args": [
          16
        ]
      },
      {
        "name": "c_current_cdemo_sk",
        "type": "integer"
      },
      {
        "name": "c_current_hdemo_sk",
        "type": "integer"
      },
      {
        "name": "c_current_addr_sk",
        "type": "integer"
      },
      {
        "name": "c_first_shipto_date_sk",
        "type": "integer"
      },
      {
        "name": "c_first_sales_date_sk",
        "type": "integer"
      },
      {
        "name": "c_salutation",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "c_first_name",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "c_last_name",
        "type": "char",
        "args": [
          30
        ]
      },
      {
        "name": "c_preferred_cust_flag",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "c_birth_day",
        "type": "integer"
      },
      {
        "name": "c_birth_month",
        "type": "integer"
      },
      {
        "name": "c_birth_year",
        "type": "integer"
      },
      {
        "name": "c_birth_country",
        "type": "varchar",
        "args": [
          20
        ]
      },
      {
        "name": "c_login",
        "type": "char",
        "args": [
          13
        ]
      },
      {
        "name": "c_email_address",
        "type": "char",
        "args": [
          50
        ]
      },
      {
        "name": "c_last_review_date",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "cd_demo_sk",
        "type": "integer"
      },
      {
        "name": "cd_gender",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "cd_marital_status",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "cd_education_status",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "cd_purchase_estimate",
        "type": "integer"
      },
      {
        "name": "cd_credit_rating",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "cd_dep_count",
        "type": "integer"
      },
      {
        "name": "cd_dep_employed_count",
        "type": "integer"
      },
      {
        "name": "cd_dep_college_count",
        "type": "integer"
      },
      {
        "name": "hd_demo_sk",
        "type": "integer"
      },
      {
        "name": "hd_income_band_sk",
        "type": "integer"
      },
      {
        "name": "hd_buy_potential",
        "type": "char",
        "args": [
          15
        ]
      },
      {
        "name": "hd_dep_count",
        "type": "integer"
      },
      {
        "name": "hd_vehicle_count",
        "type": "integer"
      },
      {
        "name": "ca_address_sk",
        "type": "integer"
      },
      {
        "name": "ca_address_id",
        "type": "char",
        "args": [
          16
        ]
      },
      {
        "name": "ca_street_number",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "ca_street_name",
        "type": "varchar",
        "args": [
          60
        ]
      },
      {
        "name": "ca_street_type",
        "type": "char",
        "args": [
          15
        ]
      },
      {
        "name": "ca_suite_number",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "ca_city",
        "type": "varchar",
        "args": [
          60
        ]
      },
      {
        "name": "ca_county",
        "type": "varchar",
        "args": [
          30
        ]
      },
      {
        "name": "ca_state",
        "type": "char",
        "args": [
          2
        ]
      },
      {
        "name": "ca_zip",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "ca_country",
        "type": "varchar",
        "args": [
          20
        ]
      },
      {
        "name": "ca_gmt_offset",
        "type": "decimal",
        "args": [
          5,
          2
        ]
      },
      {
        "name": "ca_location_type",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "s_store_sk",
        "type": "integer"
      },
      {
        "name": "s_store_id",
        "type": "char",
        "args": [
          16
        ]
      },
      {
        "name": "s_rec_start_date",
        "type": "date"
      },
      {
        "name": "s_rec_end_date",
        "type": "date"
      },
      {
        "name": "s_closed_date_sk",
        "type": "integer"
      },
      {
        "name": "s_store_name",
        "type": "varchar",
        "args": [
          50
        ]
      },
      {
        "name": "s_number_employees",
        "type": "integer"
      },
      {
        "name": "s_floor_space",
        "type": "integer"
      },
      {
        "name": "s_hours",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "s_manager",
        "type": "varchar",
        "args": [
          40
        ]
      },
      {
        "name": "s_market_id",
        "type": "integer"
      },
      {
        "name": "s_geography_class",
        "type": "varchar",
        "args": [
          100
        ]
      },
      {
        "name": "s_market_desc",
        "type": "varchar",
        "args": [
          100
        ]
      },
      {
        "name": "s_market_manager",
        "type": "varchar",
        "args": [
          40
        ]
      },
      {
        "name": "s_division_id",
        "type": "integer"
      },
      {
        "name": "s_division_name",
        "type": "varchar",
        "args": [
          50
        ]
      },
      {
        "name": "s_company_id",
        "type": "integer"
      },
      {
        "name": "s_company_name",
        "type": "varchar",
        "args": [
          50
        ]
      },
      {
        "name": "s_street_number",
        "type": "varchar",
        "args": [
          10
        ]
      },
      {
        "name": "s_street_name",
        "type": "varchar",
        "args": [
          60
        ]
      },
      {
        "name": "s_street_type",
        "type": "char",
        "args": [
          15
        ]
      },
      {
        "name": "s_suite_number",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "s_city",
        "type": "varchar",
        "args": [
          60
        ]
      },
      {
        "name": "s_county",
        "type": "varchar",
        "args": [
          30
        ]
      },
      {
        "name": "s_state",
        "type": "char",
        "args": [
          2
        ]
      },
      {
        "name": "s_zip",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "s_country",
        "type": "varchar",
        "args": [
          20
        ]
      },
      {
        "name": "s_gmt_offset",
        "type": "decimal",
        "args": [
          5,
          2
        ]
      },
      {
        "name": "s_tax_precentage",
        "type": "decimal",
        "args": [
          5,
          2
        ]
      },
      {
        "name": "p_promo_sk",
        "type": "integer"
      },
      {
        "name": "p_promo_id",
        "type": "char",
        "args": [
          16
        ]
      },
      {
        "name": "p_start_date_sk",
        "type": "integer"
      },
      {
        "name": "p_end_date_sk",
        "type": "integer"
      },
      {
        "name": "p_item_sk",
        "type": "integer"
      },
      {
        "name": "p_cost",
        "type": "decimal",
        "args": [
          15,
          2
        ]
      },
      {
        "name": "p_response_target",
        "type": "integer"
      },
      {
        "name": "p_promo_name",
        "type": "char",
        "args": [
          50
        ]
      },
      {
        "name": "p_channel_dmail",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "p_channel_email",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "p_channel_catalog",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "p_channel_tv",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "p_channel_radio",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "p_channel_press",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "p_channel_event",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "p_channel_demo",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "p_channel_details",
        "type": "varchar",
        "args": [
          100
        ]
      },
      {
        "name": "p_purpose",
        "type": "char",
        "args": [
          15
        ]
      },
      {
        "name": "p_discount_active",
        "type": "char",
        "args": [
          1
        ]
      },
      {
        "name": "i_item_sk",
        "type": "integer"
      },
      {
        "name": "i_item_id",
        "type": "char",
        "args": [
          16
        ]
      },
      {
        "name": "i_rec_start_date",
        "type": "date"
      },
      {
        "name": "i_rec_end_date",
        "type": "date"
      },
      {
        "name": "i_item_desc",
        "type": "varchar",
        "args": [
          200
        ]
      },
      {
        "name": "i_current_price",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "i_wholesale_cost",
        "type": "decimal",
        "args": [
          7,
          2
        ]
      },
      {
        "name": "i_brand_id",
        "type": "integer"
      },
      {
        "name": "i_brand",
        "type": "char",
        "args": [
          50
        ]
      },
      {
        "name": "i_class_id",
        "type": "integer"
      },
      {
        "name": "i_class",
        "type": "char",
        "args": [
          50
        ]
      },
      {
        "name": "i_category_id",
        "type": "integer"
      },
      {
        "name": "i_category",
        "type": "char",
        "args": [
          50
        ]
      },
      {
        "name": "i_manufact_id",
        "type": "integer"
      },
      {
        "name": "i_manufact",
        "type": "char",
        "args": [
          50
        ]
      },
      {
        "name": "i_size",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "i_formulation",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "i_color",
        "type": "char",
        "args": [
          20
        ]
      },
      {
        "name": "i_units",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "i_container",
        "type": "char",
        "args": [
          10
        ]
      },
      {
        "name": "i_manager_id",
        "type": "integer"
      },
      {
        "name": "i_product_name",
        "type": "char",
        "args": [
          50
        ]
      }
    ],
    "hive_bucket": "s3a://athena-varadaio-us-east-1-users/sharon/store_sales_denorm",
    "warm_type_for_strings": "no_lucene",
    "queries_data": [
      {
        "query_id": "denorm_table_1",
        "query": "select count(*), max(ss_sold_time_sk),max(ss_item_sk),max(ss_customer_sk),max(ss_cdemo_sk),max(ss_hdemo_sk),max(ss_addr_sk),max(ss_store_sk),max(ss_promo_sk),max(ss_ticket_number),max(ss_quantity),max(ss_wholesale_cost),max(ss_list_price),max(ss_sales_price),max(ss_ext_discount_amt),max(ss_ext_sales_price),max(ss_ext_wholesale_cost),max(ss_ext_list_price),max(ss_ext_tax),max(ss_coupon_amt),max(ss_net_paid),max(ss_net_paid_inc_tax),max(ss_net_profit),max(ss_sold_date_sk),max(d_date_sk),max(d_date_id),max(d_date),max(d_month_seq),max(d_week_seq),max(d_quarter_seq),max(d_year),max(d_dow),max(d_moy),max(d_dom),max(d_qoy),max(d_fy_year),max(d_fy_quarter_seq),max(d_fy_week_seq),max(d_day_name),max(d_quarter_name),max(d_holiday),max(d_weekend),max(d_following_holiday),max(d_first_dom),max(d_last_dom),max(d_same_day_ly),max(d_same_day_lq),max(d_current_day),max(d_current_week),max(d_current_month),max(d_current_quarter),max(d_current_year),max(t_time_sk),max(t_time_id),max(t_time),max(t_hour),max(t_minute),max(t_second),max(t_am_pm),max(t_shift),max(t_sub_shift),max(t_meal_time),max(c_customer_sk),max(c_customer_id),max(c_current_cdemo_sk),max(c_current_hdemo_sk),max(c_current_addr_sk),max(c_first_shipto_date_sk),max(c_first_sales_date_sk),max(c_salutation),max(c_first_name),max(c_last_name),max(c_preferred_cust_flag),max(c_birth_day),max(c_birth_month),max(c_birth_year),max(c_birth_country),max(c_login),max(c_email_address),max(c_last_review_date),max(cd_demo_sk),max(cd_gender),max(cd_marital_status),max(cd_education_status),max(cd_purchase_estimate),max(cd_credit_rating),max(cd_dep_count),max(cd_dep_employed_count),max(cd_dep_college_count),max(hd_demo_sk),max(hd_income_band_sk),max(hd_buy_potential),max(hd_dep_count),max(hd_vehicle_count),max(ca_address_sk),max(ca_address_id),max(ca_street_number),max(ca_street_name),max(ca_street_type),max(ca_suite_number),max(ca_city),max(ca_county),max(ca_state),max(ca_zip),max(ca_country),max(ca_gmt_offset),max(ca_location_type),max(s_store_sk),max(s_store_id),max(s_rec_start_date),max(s_rec_end_date),max(s_closed_date_sk),max(s_store_name),max(s_number_employees),max(s_floor_space),max(s_hours),max(s_manager),max(s_market_id),max(s_geography_class),max(s_market_desc),max(s_market_manager),max(s_division_id),max(s_division_name),max(s_company_id),max(s_company_name),max(s_street_number),max(s_street_name),max(s_street_type),max(s_suite_number),max(s_city),max(s_county),max(s_state),max(s_zip),max(s_country),max(s_gmt_offset),max(s_tax_precentage),max(p_promo_sk),max(p_promo_id),max(p_start_date_sk),max(p_end_date_sk),max(p_item_sk),max(p_cost),max(p_response_target),max(p_promo_name),max(p_channel_dmail),max(p_channel_email),max(p_channel_catalog),max(p_channel_tv),max(p_channel_radio),max(p_channel_press),max(p_channel_event),max(p_channel_demo),max(p_channel_details),max(p_purpose),max(p_discount_active),max(i_item_sk),max(i_item_id),max(i_rec_start_date),max(i_rec_end_date),max(i_item_desc),max(i_current_price),max(i_wholesale_cost),max(i_brand_id),max(i_brand),max(i_class_id),max(i_class),max(i_category_id),max(i_category),max(i_manufact_id),max(i_manufact),max(i_size),max(i_formulation),max(i_color),max(i_units),max(i_container),max(i_manager_id),max(i_product_name) from denorm_table where ss_promo_sk in ( 1,2,3,4,5)",
        "expected_result": [
          517347,
          75599,
          299999,
          11999986,
          1920800,
          7200,
          5999996,
          1000,
          5,
          "239998893",
          100,
          "100.00",
          "199.84",
          "199.54",
          "15189.45",
          "18445.00",
          "9996.00",
          "19938.00",
          "1590.33",
          "15189.45",
          "17907.94",
          "19260.71",
          "8722.90",
          2451726,
          2451726,
          "AAAAAAAAPPIGFCAA",
          "2000-06-30",
          1205,
          5244,
          403,
          2000,
          6,
          6,
          31,
          2,
          2000,
          403,
          5244,
          "Wednesday",
          "2000Q2",
          "Y",
          "Y",
          "Y",
          2451697,
          2451848,
          2451360,
          2451635,
          "N",
          "N",
          "N",
          "N",
          "N",
          75599,
          "AAAAAAAAPPPPAAAA",
          75599,
          20,
          59,
          59,
          "PM",
          "second              ",
          "morning             ",
          "lunch               ",
          11999986,
          "AAAAAAAAPPPPIJAA",
          1920789,
          7200,
          5999998,
          2452678,
          2452648,
          "Sir       ",
          "Zulma               ",
          "Zuniga                        ",
          "Y",
          31,
          12,
          1992,
          "ZIMBABWE",
          null,
          "Zulma.Wolfe@AtRq4Hr7Nia1b.edu                     ",
          "2452648   ",
          1920800,
          "M",
          "W",
          "Unknown             ",
          10000,
          "Unknown   ",
          6,
          6,
          6,
          7200,
          20,
          "Unknown        ",
          9,
          4,
          5999996,
          "AAAAAAAAPPPPPCAA",
          "999       ",
          "Woodland Woodland",
          "Wy             ",
          "Suite Y   ",
          "Zion",
          "Ziebach County",
          "WY",
          "99981     ",
          "United States",
          "-5.00",
          "single family       ",
          1000,
          "AAAAAAAAPPBAAAAA",
          "1997-03-13",
          "2000-03-12",
          2451313,
          "pri",
          300,
          9997773,
          "8AM-8AM             ",
          "Zane Clifton",
          10,
          "Unknown",
          "Yesterday left factors handle continuing co",
          "Zane Perez",
          1,
          "Unknown",
          1,
          "Unknown",
          "999",
          "Woodland Oak",
          "Wy             ",
          "Suite Y   ",
          "Woodlawn",
          "Ziebach County",
          "WV",
          "99101     ",
          "United States",
          "-5.00",
          "0.11",
          5,
          "AAAAAAAAFAAAAAAA",
          2450675,
          2450712,
          292022,
          "1000.00",
          1,
          "pri                                               ",
          "Y",
          "N",
          "N",
          "N",
          "N",
          "N",
          "N",
          "N",
          "So willing buildings coul",
          "Unknown        ",
          "N",
          299999,
          "AAAAAAAAPPPPBAAA",
          "1999-10-28",
          "2001-10-26",
          "Youngsters use then major fingers. Scientific, accurate customers meet good places; domestic patients used",
          "99.99",
          "89.49",
          10016017,
          "univunivamalg #9                                  ",
          16,
          "womens watch                                      ",
          10,
          "Women                                             ",
          1000,
          "pripripri                                         ",
          "small               ",
          "yellow98911509228741",
          "yellow              ",
          "Unknown   ",
          "Unknown   ",
          100,
          "pripripripripriought                              "
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 160,
          "external_match_columns": 0,
          "external_collect_columns": 15
        }
      },
      {
        "query_id": "denorm_table_2",
        "query": "select count(*), max(ss_sold_time_sk),max(ss_item_sk),max(ss_customer_sk),max(ss_cdemo_sk),max(ss_hdemo_sk),max(ss_addr_sk),max(ss_store_sk),max(ss_promo_sk),max(ss_ticket_number),max(ss_quantity),max(ss_wholesale_cost),max(ss_list_price),max(ss_sales_price),max(ss_ext_discount_amt),max(ss_ext_sales_price),max(ss_ext_wholesale_cost),max(ss_ext_list_price),max(ss_ext_tax),max(ss_coupon_amt),max(ss_net_paid),max(ss_net_paid_inc_tax),max(ss_net_profit),max(ss_sold_date_sk),max(d_date_sk),max(d_date_id),max(d_date),max(d_month_seq),max(d_week_seq),max(d_quarter_seq),max(d_year),max(d_dow),max(d_moy),max(d_dom),max(d_qoy),max(d_fy_year),max(d_fy_quarter_seq),max(d_fy_week_seq),max(d_day_name),max(d_quarter_name),max(d_holiday),max(d_weekend),max(d_following_holiday),max(d_first_dom),max(d_last_dom),max(d_same_day_ly),max(d_same_day_lq),max(d_current_day),max(d_current_week),max(d_current_month),max(d_current_quarter),max(d_current_year),max(t_time_sk),max(t_time_id),max(t_time),max(t_hour),max(t_minute),max(t_second),max(t_am_pm),max(t_shift),max(t_sub_shift),max(t_meal_time),max(c_customer_sk),max(c_customer_id),max(c_current_cdemo_sk),max(c_current_hdemo_sk),max(c_current_addr_sk),max(c_first_shipto_date_sk),max(c_first_sales_date_sk),max(c_salutation),max(c_first_name),max(c_last_name),max(c_preferred_cust_flag),max(c_birth_day),max(c_birth_month),max(c_birth_year),max(c_birth_country),max(c_login),max(c_email_address),max(c_last_review_date),max(cd_demo_sk),max(cd_gender),max(cd_marital_status),max(cd_education_status),max(cd_purchase_estimate),max(cd_credit_rating),max(cd_dep_count),max(cd_dep_employed_count),max(cd_dep_college_count),max(hd_demo_sk),max(hd_income_band_sk),max(hd_buy_potential),max(hd_dep_count),max(hd_vehicle_count),max(ca_address_sk),max(ca_address_id),max(ca_street_number),max(ca_street_name),max(ca_street_type),max(ca_suite_number),max(ca_city),max(ca_county),max(ca_state),max(ca_zip),max(ca_country),max(ca_gmt_offset),max(ca_location_type),max(s_store_sk),max(s_store_id),max(s_rec_start_date),max(s_rec_end_date),max(s_closed_date_sk),max(s_store_name),max(s_number_employees),max(s_floor_space),max(s_hours),max(s_manager),max(s_market_id),max(s_geography_class),max(s_market_desc),max(s_market_manager),max(s_division_id),max(s_division_name),max(s_company_id),max(s_company_name),max(s_street_number),max(s_street_name),max(s_street_type),max(s_suite_number),max(s_city),max(s_county),max(s_state),max(s_zip),max(s_country),max(s_gmt_offset),max(s_tax_precentage),max(p_promo_sk),max(p_promo_id),max(p_start_date_sk),max(p_end_date_sk),max(p_item_sk),max(p_cost),max(p_response_target),max(p_promo_name),max(p_channel_dmail),max(p_channel_email),max(p_channel_catalog),max(p_channel_tv),max(p_channel_radio),max(p_channel_press),max(p_channel_event),max(p_channel_demo),max(p_channel_details),max(p_purpose),max(p_discount_active),max(i_item_sk),max(i_item_id),max(i_rec_start_date),max(i_rec_end_date),max(i_item_desc),max(i_current_price),max(i_wholesale_cost),max(i_brand_id),max(i_brand),max(i_class_id),max(i_class),max(i_category_id),max(i_category),max(i_manufact_id),max(i_manufact),max(i_size),max(i_formulation),max(i_color),max(i_units),max(i_container),max(i_manager_id),max(i_product_name) from denorm_table",
        "expected_result": [
          155738425,
          75599,
          299999,
          12000000,
          1920800,
          7200,
          6000000,
          1000,
          1500,
          "239999987",
          100,
          "100.00",
          "200.00",
          "200.00",
          "19196.10",
          "19870.00",
          "10000.00",
          "19996.00",
          "1772.01",
          "19196.10",
          "19870.00",
          "21461.01",
          "9916.00",
          2451726,
          2451726,
          "AAAAAAAAPPIGFCAA",
          "2000-06-30",
          1205,
          5244,
          403,
          2000,
          6,
          6,
          31,
          2,
          2000,
          403,
          5244,
          "Wednesday",
          "2000Q2",
          "Y",
          "Y",
          "Y",
          2451697,
          2451848,
          2451360,
          2451635,
          "N",
          "N",
          "N",
          "N",
          "N",
          75599,
          "AAAAAAAAPPPPAAAA",
          75599,
          20,
          59,
          59,
          "PM",
          "second              ",
          "morning             ",
          "lunch               ",
          12000000,
          "AAAAAAAAPPPPPKAA",
          1920800,
          7200,
          6000000,
          2452678,
          2452648,
          "Sir       ",
          "Zulma               ",
          "Zuniga                        ",
          "Y",
          31,
          12,
          1992,
          "ZIMBABWE",
          null,
          "Zulma.Young@aDhzZzCzYN.edu                        ",
          "2452648   ",
          1920800,
          "M",
          "W",
          "Unknown             ",
          10000,
          "Unknown   ",
          6,
          6,
          6,
          7200,
          20,
          "Unknown        ",
          9,
          4,
          6000000,
          "AAAAAAAAPPPPPEAA",
          "999       ",
          "Woodland Woodland",
          "Wy             ",
          "Suite Y   ",
          "Zion",
          "Ziebach County",
          "WY",
          "99981     ",
          "United States",
          "-5.00",
          "single family       ",
          1000,
          "AAAAAAAAPPBAAAAA",
          "1997-03-13",
          "2000-03-12",
          2451313,
          "pri",
          300,
          9997773,
          "8AM-8AM             ",
          "Zane Clifton",
          10,
          "Unknown",
          "Yesterday left factors handle continuing co",
          "Zane Perez",
          1,
          "Unknown",
          1,
          "Unknown",
          "999",
          "Woodland Oak",
          "Wy             ",
          "Suite Y   ",
          "Woodlawn",
          "Ziebach County",
          "WV",
          "99101     ",
          "United States",
          "-5.00",
          "0.11",
          1500,
          "AAAAAAAAPPEAAAAA",
          2450915,
          2450967,
          299990,
          "1000.00",
          1,
          "pri                                               ",
          "Y",
          "N",
          "N",
          "N",
          "N",
          "N",
          "N",
          "N",
          "Young, valuable companies watch walls. Payments can flour",
          "Unknown        ",
          "N",
          299999,
          "AAAAAAAAPPPPBAAA",
          "1999-10-28",
          "2001-10-26",
          "Youngsters used to save quite colour",
          "99.99",
          "89.49",
          10016017,
          "univunivamalg #9                                  ",
          16,
          "womens watch                                      ",
          10,
          "Women                                             ",
          1000,
          "pripripri                                         ",
          "small               ",
          "yellow98911509228741",
          "yellow              ",
          "Unknown   ",
          "Unknown   ",
          100,
          "pripripripripriought                              "
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 160,
          "external_match_columns": 0,
          "external_collect_columns": 15
        }
      }
    ]
  },
  {
    "name": "single_entry",
    "pt_enable": true,
    "structure": [
      {
        "name": "col_int",
        "type": "integer"
      }
    ],
    "queries_data": [
      {
        "query": "select count(*) from single_entry",
        "expected_result": [
          65538
        ],
        "query_id": "single_entry_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_int) from single_entry where col_int>1000",
        "expected_result": [
          64037
        ],
        "query_id": "single_entry_2",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_int) from single_entry where col_int<1000",
        "expected_result": [
          1500
        ],
        "query_id": "single_entry_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select col_int from single_entry where col_int=1000",
        "expected_result": [
          1000
        ],
        "query_id": "single_entry_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "data": "resources/synthetic/single_entry.jsonl"
  },
  {
    "name": "eight_varchar_distinct",
    "pt_enable": true,
    "data": "resources/synthetic/eight_varchar_distinct.jsonl",
    "structure": [
      {
        "name": "col_1",
        "type": "varchar"
      }
    ],
    "queries_data": [
      {
        "query": "select count(col_1) from eight_varchar_distinct",
        "expected_result": [
          65536
        ],
        "query_id": "eight_varchar_distinct_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_1) from eight_varchar_distinct where length(col_1)=8",
        "expected_result": [
          65536
        ],
        "query_id": "eight_varchar_distinct_2",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_1) from eight_varchar_distinct where col_1='ScotIfyR'",
        "expected_result": [
          1
        ],
        "query_id": "eight_varchar_distinct_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "wide_varchar_chunks",
    "pt_enable": true,
    "skip_caching": true,
    "data": "resources/synthetic/wide_varchar_chunks.jsonl",
    "warm_type_for_strings": "no_lucene",
    "expected_warm_failures": 3,
    "comment_type_skip": "counters issue : incorrect collect in case Iceberg and DL",
    "skip_type": [
      "varada_delta_lake", "varada_iceberg"
    ],
    "structure": [
      {
        "name": "col_1",
        "type": "varchar"
      }
    ],
    "queries_data": [
      {
        "query": "select count(*) from wide_varchar_chunks",
        "query_id": "wide_varchar_chunks_1",
        "expected_result": [
          917504
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 12,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 1
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 1
        }
      },
      {
        "query": "select count(col_1) from wide_varchar_chunks where length(col_1)>49152",
        "query_id": "wide_varchar_chunks_2",
        "expected_result": [
          7
        ],
        "expected_iceberg_result": [0],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 11
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 2
        }
      },
      {
        "query": "select count(col_1) from wide_varchar_chunks where col_1 like '%4TW5Wxy{MBG4wGPyEcnv$cu%'",
        "query_id": "wide_varchar_chunks_3",
        "expected_result": [
          3
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 12,
          "external_collect_columns": 11
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 2,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 3,
          "external_match_columns": 5,
          "external_collect_columns": 2
        }
      },
      {
        "query": "select count(col_1) from wide_varchar_chunks where col_1 like '%{MBG4wGPyEcnv$cu-+B%97Q.w%'",
        "query_id": "wide_varchar_chunks_4",
        "expected_result": [
          3
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 12,
          "external_collect_columns": 11
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 2,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 3,
          "external_match_columns": 5,
          "external_collect_columns": 2
        }
      },
      {
        "query": "select count(col_1) from wide_varchar_chunks where col_1 > 'tQCZu9' or col_1 < '%{MBG4wGPyEcnv$cu-+B%97Q.w%'",
        "query_id": "wide_varchar_chunks_5",
        "expected_result": [
          6
        ],
        "expected_counters": {
          "varada_match_columns": 12,
          "varada_collect_columns": 8,
          "external_match_columns": 0,
          "external_collect_columns": 4
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 3,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 2
        }
      },
      {
        "query": "select count(col_1) from wide_varchar_chunks where col_1 is not null",
        "query_id": "wide_varchar_chunks_6",
        "expected_result": [
          917504
        ],
        "expected_counters": {
          "varada_match_columns": 12,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 11
        },
        "iceberg_expected_counters": {
        "varada_match_columns": 2,
        "varada_collect_columns": 2,
        "external_match_columns": 0,
        "external_collect_columns": 0
      },
        "dl_expected_counters": {
          "varada_match_columns": 5,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 2
        }
      },
      {
        "query": "select count(col_1) from wide_varchar_chunks where col_1 like '%A.%' and col_1 like '%D$%' and col_1 like '%Za%'",
        "query_id": "wide_varchar_chunks_7",
        "expected_result": [
          28
        ],
        "expected_iceberg_result": [
          0
        ],
        "expected_dl_result": [
          28
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 12,
          "external_collect_columns": 11
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 2,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 3,
          "external_match_columns": 5,
          "external_collect_columns": 2
        }
      }
    ]
  },
  {
    "name": "trim_slices",
    "description": "Following VDB-5977, and fix VDB-5967 always trim slice after get from dictionary",
    "pt_enable": true,
    "data": "resources/synthetic/trim_slices.jsonl",
    "warm_type_for_strings": "no_lucene",
    "structure": [
      {
        "name": "char_1",
        "type": "char",
        "args": [
          8
        ]
      }
    ],
    "queries_data": [
      {
        "query": "select count(*) from trim_slices",
        "query_id": "trim_slices_1",
        "expected_result": [
          65536
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select char_1 from trim_slices where char_1 is null or char_1='00020Kz ' order by char_1",
        "query_id": "trim_slices_2",
        "expected_result": [
          [
            "00020Kz "
          ],
          [
            null
          ],
          [
            null
          ]
        ],
        "expected_iceberg_result": [
          [
            null
          ],
          [
            null
          ]
        ],
        "expected_dl_result": [
          [
            null
          ],
          [
            null
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select char_1 from trim_slices order by char_1 limit 3",
        "query_id": "trim_slices_3",
        "expected_result": [
          [
            "00001i  "
          ],
          [
            "00002Us "
          ],
          [
            "00003Z  "
          ]
        ],
        "expected_iceberg_result": [
          [
            "00001i"
          ],
          [
            "00002Us"
          ],
          [
            "00003Z"
          ]
        ],
        "expected_dl_result": [
          [
            "00001i"
          ],
          [
            "00002Us"
          ],
          [
            "00003Z"
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select char_1 from trim_slices where char_1 is null",
        "query_id": "trim_slices_4",
        "expected_result": [
          [
            null
          ],
          [
            null
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select char_1 from trim_slices where char_1='00031d  '",
        "query_id": "trim_slices_5",
        "expected_result": [
          [
            "00031d  "
          ]
        ],
        "expected_iceberg_result": [
          "IGNORE"
        ],
        "expected_dl_result": [
          "IGNORE"
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "varchar_offset",
    "pt_enable": true,
    "data": "resources/varchar_offset.jsonl",
    "structure": [
      {
        "name": "col_1",
        "type": "varchar"
      },
      {
        "name": "col_2",
        "type": "char",
        "args": [
          8
        ]
      },
      {
        "name": "col_3",
        "type": "varchar"
      },
      {
        "name": "col_4",
        "type": "array",
        "args": [
          "varchar"
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "col_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "col_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "col_3",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "col_4",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA"
        ]
      }
    ],
    "expected_warm_failures": 1,
    "queries_data": [
      {
        "query": "select col_1 from varchar_offset where col_2 = '00065539'",
        "query_id": "varchar_offset_1",
        "expected_result": [
          "65539"
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select col_2 from varchar_offset where col_1 is null and col_3 = 'IREXNVUSIL'",
        "query_id": "varchar_offset_2",
        "expected_result": [
          null
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from varchar_offset where col_1 like '%SHI%'",
        "query_id": "varchar_offset_3",
        "expected_result": [
          13
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "storesales_with_null_dates",
    "pt_enable": true,
    "skip_caching": true,
    "session_properties": {
      "enable_import_export": false
    },
    "structure": [
      {
        "name": "ss_sold_date_sk",
        "type": "integer"
      },
      {
        "name": "ss_sold_time_sk",
        "type": "integer"
      },
      {
        "name": "ss_item_sk",
        "type": "integer"
      },
      {
        "name": "ss_customer_sk",
        "type": "integer"
      },
      {
        "name": "ss_cdemo_sk",
        "type": "integer"
      },
      {
        "name": "ss_hdemo_sk",
        "type": "integer"
      },
      {
        "name": "ss_addr_sk",
        "type": "integer"
      },
      {
        "name": "ss_store_sk",
        "type": "integer"
      },
      {
        "name": "ss_promo_sk",
        "type": "integer"
      },
      {
        "name": "ss_ticket_number",
        "type": "bigint"
      },
      {
        "name": "ss_quantity",
        "type": "integer"
      },
      {
        "name": "ss_wholesale_cost",
        "type": "double"
      },
      {
        "name": "ss_list_price",
        "type": "double"
      },
      {
        "name": "ss_sales_price",
        "type": "double"
      },
      {
        "name": "ss_ext_discount_amt",
        "type": "double"
      },
      {
        "name": "ss_ext_sales_price",
        "type": "double"
      },
      {
        "name": "ss_ext_wholesale_cost",
        "type": "double"
      },
      {
        "name": "ss_ext_list_price",
        "type": "double"
      },
      {
        "name": "ss_ext_tax",
        "type": "double"
      },
      {
        "name": "ss_coupon_amt",
        "type": "double"
      },
      {
        "name": "ss_net_paid",
        "type": "double"
      },
      {
        "name": "ss_net_paid_inc_tax",
        "type": "double"
      },
      {
        "name": "ss_net_profit",
        "type": "double"
      },
      {
        "name": "d_date",
        "type": "date"
      },
      {
        "name": "d_year",
        "type": "integer"
      },
      {
        "name": "d_quater",
        "type": "integer"
      },
      {
        "name": "t_am_pm",
        "type": "char",
        "args": [
          2
        ]
      },
      {
        "name": "c_description100",
        "type": "varchar",
        "args": [
          100
        ]
      },
      {
        "name": "c_string_num",
        "type": "varchar",
        "args": [
          4
        ]
      },
      {
        "name": "c_town",
        "type": "varchar",
        "args": [
          15
        ]
      },
      {
        "name": "c_description200",
        "type": "varchar",
        "args": [
          300
        ]
      },
      {
        "name": "c_jibrish30",
        "type": "varchar",
        "args": [
          30
        ]
      },
      {
        "name": "c_description60",
        "type": "varchar",
        "args": [
          60
        ]
      }
    ],
    "expected_dictionary_counters": {
      "write_dictionaries_count": 6
    },
    "iceberg_expected_dictionary_counters": {
      "write_dictionaries_count": 7
    },
    "dl_expected_dictionary_counters": {
      "write_dictionaries_count": 7
    },
    "warmup_rules": [
      {
        "colNameId": "d_date",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "c_description60",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_LUCENE",
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "c_town",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "ss_sold_date_sk",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "ss_ticket_number",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "t_am_pm",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "ss_customer_sk",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "ss_list_price",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "ss_quantity",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "skip_type_comment": "issue with warming on DL - under investigation",
    "skip_type": ["varada_delta_lake"],
    "queries_data": [
      {
        "query": "select count(d_date), count(c_description60)  from storesales_with_null_dates where day(d_date) = 9",
        "query_id": "storesales_with_null_dates_1",
        "expected_result": [
          102029,
          99081
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(d_date) from storesales_with_null_dates where day_of_year(d_date) >2 and day_of_year(d_date) <60",
        "query_id": "storesales_with_null_dates_2",
        "expected_result": [
          712417
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(c_town) from storesales_with_null_dates where day_of_week(d_date) >=2 and day_of_week(d_date) <=5",
        "query_id": "storesales_with_null_dates_3",
        "expected_result": [
          513060
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(c_town) from storesales_with_null_dates where day_of_week(d_date) >=2 and day_of_week(d_date) <=5",
        "query_id": "storesales_with_null_dates_4",
        "expected_result": [
          513060
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(c_town) from storesales_with_null_dates where year(d_date) =1998",
        "query_id": "storesales_with_null_dates_5",
        "expected_result": [
          945459
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(c_town) from storesales_with_null_dates where year_of_week(d_date) >1990",
        "query_id": "storesales_with_null_dates_6",
        "expected_result": [
          945459
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(c_town) from storesales_with_null_dates where week(d_date)>=10 OR  week(d_date)<2",
        "query_id": "storesales_with_null_dates_7",
        "expected_result": [
          446424
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select avg(ss_sold_date_sk), min(ss_ticket_number) from storesales_with_null_dates where (cast(ss_sold_date_sk as varchar) = '2450882' or cast(ss_sold_date_sk as varchar) = '2450885') and (cast(ss_ticket_number as varchar) = '807106366' OR cast(ss_ticket_number as varchar) = '566126307' )",
        "query_id": "storesales_with_null_dates_8",
        "expected_result": [
          2450882.0,
          566126307
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(t_am_pm), count(c_description60), min(ss_customer_sk) from storesales_with_null_dates where cast(t_am_pm as varchar) = 'AM' and cast(c_description60 as varchar) like '%charges%'",
        "query_id": "storesales_with_null_dates_9",
        "expected_result": [
          739,
          739,
          919
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(d_date) from storesales_with_null_dates where cast(d_date as varchar) = '1998-03-09' and cast(ss_customer_sk as varchar) like '%04266%'",
        "query_id": "storesales_with_null_dates_10",
        "expected_result": [
          3
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(ss_list_price) from storesales_with_null_dates where cast(ss_list_price as real) >= 103.51 and cast(ss_list_price as real) < 128.12",
        "query_id": "storesales_with_null_dates_11",
        "expected_result": [
          128.11
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(c_description60), count(c_town), avg(ss_quantity) from storesales_with_null_dates where year(d_date) > 1990",
        "query_id": "storesales_with_null_dates_12",
        "expected_result": [
          "Young, valuable companies watch walls. Payments can flour",
          945459,
          50.385825780595276
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(c_town) from storesales_with_null_dates where c_town not like '%Hill%' and c_description60 not like '%th%'",
        "query_id": "storesales_not_like",
        "expected_result": [
          673789
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "single_5nulls",
    "pt_enable": true,
    "data": "resources/synthetic/single_5nulls.jsonl",
    "structure": [
      {
        "name": "col_varchar",
        "type": "varchar",
        "args": [
          15
        ]
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "col_varchar",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA"
        ]
      }
    ],
    "queries_data": [
      {
        "query": "select count(col_varchar) from single_5nulls where col_varchar='012345qwerty123' or col_varchar is null",
        "query_id": "single_5nulls_1",
        "expected_result": [
          58955
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "seagate_with_nulls",
    "pt_enable": true,
    "skip_caching": true,
    "description": "table with NULL values in timestamp",
    "structure": [
      {
        "name": "time_key",
        "type": "integer"
      },
      {
        "name": "radius",
        "type": "decimal",
        "args": [
          38,
          12
        ]
      },
      {
        "name": "edw_etl_load_date",
        "type": "timestamp"
      },
      {
        "name": "name_1",
        "type": "varchar",
        "args": [
          32
        ]
      },
      {
        "name": "fcd_edw_insert_date",
        "type": "timestamp"
      },
      {
        "name": "pd_product_key",
        "type": "decimal",
        "args": [
          38,
          0
        ]
      },
      {
        "name": "pd_product_part_num",
        "type": "varchar",
        "args": [
          32
        ]
      },
      {
        "name": "pd_product_type",
        "type": "varchar",
        "args": [
          64
        ]
      },
      {
        "name": "pd_reconfig_flag",
        "type": "varchar",
        "args": [
          1
        ]
      },
      {
        "name": "wld_max_x_coord_on_wafer",
        "type": "integer"
      },
      {
        "name": "wld_max_y_coord_on_wafer",
        "type": "integer"
      },
      {
        "name": "part_load_time",
        "type": "timestamp"
      },
      {
        "name": "pd_prod_lifecycle_status_chg_date",
        "type": "timestamp"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "time_key",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "radius",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "edw_etl_load_date",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_DATA"
        ]
      },
      {
        "colNameId": "name_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC",
          "WARM_UP_TYPE_LUCENE"
        ]
      },
      {
        "colNameId": "fcd_edw_insert_date",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "pd_product_key",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "pd_product_part_num",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "pd_product_type",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "pd_reconfig_flag",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "wld_max_x_coord_on_wafer",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "wld_max_y_coord_on_wafer",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "part_load_time",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "pd_prod_lifecycle_status_chg_date",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "queries_data": [
      {
        "query": "select count(part_load_time) from seagate_with_nulls where day(part_load_time)>7 OR day(part_load_time)<5",
        "query_id": "seagate_with_nulls_1",
        "expected_result": [
          6845
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(part_load_time) from seagate_with_nulls where year_of_week(part_load_time)<=1980 or year_of_week(part_load_time)>1990",
        "query_id": "seagate_with_nulls_2",
        "expected_result": [
          6845
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
        "varada_match_columns": 0,
        "varada_collect_columns": 1,
        "external_match_columns": 0,
        "external_collect_columns": 0
      }
      },
      {
        "query": "select avg(radius) from seagate_with_nulls where (year_of_week(part_load_time)<=1980 or year_of_week(part_load_time)>1990) and year(fcd_edw_insert_date)=2004",
        "query_id": "seagate_with_nulls_3",
        "expected_result": [
          2.247616942216
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(name_1) from seagate_with_nulls where day_of_year(part_load_time)<=100 and day_of_year(part_load_time)>=2",
        "query_id": "seagate_with_nulls_4",
        "expected_result": [
          6020
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(name_1) from seagate_with_nulls where week(part_load_time)<=100 and week(part_load_time)>=2",
        "query_id": "seagate_with_nulls_5",
        "expected_result": [
          6020
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(name_1) from seagate_with_nulls where week(part_load_time)<=100 and year_of_week(part_load_time)>1990 and day(part_load_time)<=100 and day_of_year(part_load_time)<=100 ",
        "query_id": "seagate_with_nulls_6",
        "expected_result": [
          6020
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(name_1) from seagate_with_nulls where week(part_load_time)<=100 OR year_of_week(part_load_time)>1990",
        "query_id": "seagate_with_nulls_7",
        "expected_result": [
          6020
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from seagate_with_nulls where week(part_load_time)<year_of_week(part_load_time)",
        "query_id": "seagate_with_nulls_8",
        "expected_result": [
          6845
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from seagate_with_nulls where (week(part_load_time)<100)=true and year(fcd_edw_insert_date)=2004",
        "query_id": "seagate_with_nulls_9",
        "expected_result": [
          6109
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 1,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from seagate_with_nulls where week(part_load_time)<week(fcd_edw_insert_date)",
        "query_id": "seagate_with_nulls_10",
        "expected_result": [
          6697
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from  seagate_with_nulls where name_1 is null or  substr(name_1, 4) = 'BER'",
        "query_id": "seagate_with_nulls_11",
        "expected_result": [
          2498
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "bucketed_by",
    "pt_enable": true,
    "skip_caching": true,
    "lines": 100000,
    "data": "resources/synthetic/bucketed_by.jsonl",
    "session_properties": {
      "enable_import_export": false
    },
    "structure": [
      {
        "name": "col_id",
        "type": "integer"
      },
      {
        "name": "col_tinyint",
        "type": "tinyint"
      },
      {
        "name": "col_smallint",
        "type": "smallint"
      },
      {
        "name": "col_int",
        "type": "integer"
      },
      {
        "name": "col_bigint",
        "type": "bigint"
      },
      {
        "name": "col_varchar",
        "type": "varchar"
      },
      {
        "name": "col_char9",
        "type": "char",
        "args": [
          9
        ]
      },
      {
        "name": "col_date",
        "type": "date"
      },
      {
        "name": "col_timestamp",
        "type": "timestamp"
      }
    ],
    "warm_query": "select * from bucketed_by",
    "queries_data": [
      {
        "query": "select count(*) from bucketed_by",
        "query_id": "bucketed_by_01",
        "expected_result": [
          [
            400000
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(col_int), avg(col_bigint), max(col_varchar) from bucketed_by where col_smallint>-1021",
        "query_id": "bucketed_by_02",
        "expected_result": [
          2147481578,
          -3.509758682189295E15,
          "Zoe Youngx"
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 3,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(distinct(col_char9)) from bucketed_by where col_int>2147481577 and col_bigint>0",
        "query_id": "bucketed_by_03",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_date) from bucketed_by where day(col_date)>=9 and day(col_date)<=11",
        "query_id": "bucketed_by_04",
        "expected_result": [
          39316
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_date) from bucketed_by where col_varchar like '%zo%'",
        "query_id": "bucketed_by_05",
        "expected_result": [
          685
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 2,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ],
    "bucketed_by": [
      "col_id"
    ],
    "bucket_count": 3
  },
  {
    "name": "single_rollback",
    "pt_enable": true,
    "data": "resources/synthetic/single_rollback.jsonl",
    "structure": [
      {
        "name": "col_int",
        "type": "integer"
      },
      {
        "name": "varchar_1",
        "type": "varchar"
      },
      {
        "name": "varchar_2",
        "type": "varchar"
      }
    ],
    "comment_type_skip": "The counters on DL return external collect",
    "skip_type": [
      "varada_delta_lake"
    ],
    "queries_data": [
      {
        "query": "select count(*) from single_rollback",
        "query_id": "single_rollback_01",
        "expected_result": [
          [
            2097152
          ]
        ]
      }
    ]
  },
  {
    "name": "even_twice",
    "pt_enable": true,
    "data": "resources/synthetic/even_twice.jsonl",
    "structure": [
      {
        "name": "col_int",
        "type": "integer"
      }
    ],
    "queries_data": [
      {
        "query": "select count(*) from even_twice",
        "query_id": "even_twice_01",
        "expected_result": [
          [
            524288
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select col_int from even_twice where col_int=2",
        "query_id": "even_twice_02",
        "expected_result": [
          [
            2
          ],
          [
            2
          ]
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "prefilled_collect_columns": 1,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "limit_max_match_wes",
    "pt_enable": true,
    "lines": 1000,
    "structure": [
      {
        "name": "col_0",
        "type": "integer"
      },
      {
        "name": "col_1",
        "type": "integer"
      },
      {
        "name": "col_2",
        "type": "integer"
      },
      {
        "name": "col_3",
        "type": "integer"
      },
      {
        "name": "col_4",
        "type": "integer"
      },
      {
        "name": "col_5",
        "type": "integer"
      },
      {
        "name": "col_6",
        "type": "integer"
      },
      {
        "name": "col_7",
        "type": "integer"
      },
      {
        "name": "col_8",
        "type": "integer"
      },
      {
        "name": "col_9",
        "type": "integer"
      },
      {
        "name": "col_10",
        "type": "integer"
      },
      {
        "name": "col_11",
        "type": "integer"
      },
      {
        "name": "col_12",
        "type": "integer"
      },
      {
        "name": "col_13",
        "type": "integer"
      },
      {
        "name": "col_14",
        "type": "integer"
      },
      {
        "name": "col_15",
        "type": "integer"
      },
      {
        "name": "col_16",
        "type": "integer"
      },
      {
        "name": "col_17",
        "type": "integer"
      },
      {
        "name": "col_18",
        "type": "integer"
      },
      {
        "name": "col_19",
        "type": "integer"
      },
      {
        "name": "col_20",
        "type": "integer"
      },
      {
        "name": "col_21",
        "type": "integer"
      },
      {
        "name": "col_22",
        "type": "integer"
      },
      {
        "name": "col_23",
        "type": "integer"
      },
      {
        "name": "col_24",
        "type": "integer"
      },
      {
        "name": "col_25",
        "type": "integer"
      },
      {
        "name": "col_26",
        "type": "integer"
      },
      {
        "name": "col_27",
        "type": "integer"
      },
      {
        "name": "col_28",
        "type": "integer"
      },
      {
        "name": "col_29",
        "type": "integer"
      },
      {
        "name": "col_30",
        "type": "integer"
      },
      {
        "name": "col_31",
        "type": "integer"
      },
      {
        "name": "col_32",
        "type": "integer"
      },
      {
        "name": "col_33",
        "type": "integer"
      },
      {
        "name": "col_34",
        "type": "integer"
      },
      {
        "name": "col_35",
        "type": "integer"
      },
      {
        "name": "col_36",
        "type": "integer"
      },
      {
        "name": "col_37",
        "type": "integer"
      },
      {
        "name": "col_38",
        "type": "integer"
      },
      {
        "name": "col_39",
        "type": "integer"
      },
      {
        "name": "col_40",
        "type": "integer"
      },
      {
        "name": "col_41",
        "type": "integer"
      },
      {
        "name": "col_42",
        "type": "integer"
      },
      {
        "name": "col_43",
        "type": "integer"
      },
      {
        "name": "col_44",
        "type": "integer"
      },
      {
        "name": "col_45",
        "type": "integer"
      },
      {
        "name": "col_46",
        "type": "integer"
      },
      {
        "name": "col_47",
        "type": "integer"
      },
      {
        "name": "col_48",
        "type": "integer"
      },
      {
        "name": "col_49",
        "type": "integer"
      },
      {
        "name": "col_50",
        "type": "integer"
      },
      {
        "name": "col_51",
        "type": "integer"
      },
      {
        "name": "col_52",
        "type": "integer"
      },
      {
        "name": "col_53",
        "type": "integer"
      },
      {
        "name": "col_54",
        "type": "integer"
      },
      {
        "name": "col_55",
        "type": "integer"
      },
      {
        "name": "col_56",
        "type": "integer"
      },
      {
        "name": "col_57",
        "type": "integer"
      },
      {
        "name": "col_58",
        "type": "integer"
      },
      {
        "name": "col_59",
        "type": "integer"
      },
      {
        "name": "col_60",
        "type": "integer"
      },
      {
        "name": "col_61",
        "type": "integer"
      },
      {
        "name": "col_62",
        "type": "integer"
      },
      {
        "name": "col_63",
        "type": "integer"
      },
      {
        "name": "col_64",
        "type": "integer"
      },
      {
        "name": "col_65",
        "type": "integer"
      },
      {
        "name": "col_66",
        "type": "integer"
      },
      {
        "name": "col_67",
        "type": "integer"
      },
      {
        "name": "col_68",
        "type": "integer"
      },
      {
        "name": "col_69",
        "type": "integer"
      },
      {
        "name": "col_70",
        "type": "integer"
      },
      {
        "name": "col_71",
        "type": "integer"
      },
      {
        "name": "col_72",
        "type": "integer"
      },
      {
        "name": "col_73",
        "type": "integer"
      },
      {
        "name": "col_74",
        "type": "integer"
      },
      {
        "name": "col_75",
        "type": "integer"
      },
      {
        "name": "col_76",
        "type": "integer"
      },
      {
        "name": "col_77",
        "type": "integer"
      },
      {
        "name": "col_78",
        "type": "integer"
      },
      {
        "name": "col_79",
        "type": "integer"
      },
      {
        "name": "col_80",
        "type": "integer"
      },
      {
        "name": "col_81",
        "type": "integer"
      },
      {
        "name": "col_82",
        "type": "integer"
      },
      {
        "name": "col_83",
        "type": "integer"
      },
      {
        "name": "col_84",
        "type": "integer"
      },
      {
        "name": "col_85",
        "type": "integer"
      },
      {
        "name": "col_86",
        "type": "integer"
      },
      {
        "name": "col_87",
        "type": "integer"
      },
      {
        "name": "col_88",
        "type": "integer"
      },
      {
        "name": "col_89",
        "type": "integer"
      },
      {
        "name": "col_90",
        "type": "integer"
      },
      {
        "name": "col_91",
        "type": "integer"
      },
      {
        "name": "col_92",
        "type": "integer"
      },
      {
        "name": "col_93",
        "type": "integer"
      },
      {
        "name": "col_94",
        "type": "integer"
      },
      {
        "name": "col_95",
        "type": "integer"
      },
      {
        "name": "col_96",
        "type": "integer"
      },
      {
        "name": "col_97",
        "type": "integer"
      },
      {
        "name": "col_98",
        "type": "integer"
      },
      {
        "name": "col_99",
        "type": "integer"
      },
      {
        "name": "col_100",
        "type": "integer"
      },
      {
        "name": "col_101",
        "type": "integer"
      },
      {
        "name": "col_102",
        "type": "integer"
      },
      {
        "name": "col_103",
        "type": "integer"
      },
      {
        "name": "col_104",
        "type": "integer"
      },
      {
        "name": "col_105",
        "type": "integer"
      },
      {
        "name": "col_106",
        "type": "integer"
      },
      {
        "name": "col_107",
        "type": "integer"
      },
      {
        "name": "col_108",
        "type": "integer"
      },
      {
        "name": "col_109",
        "type": "integer"
      },
      {
        "name": "col_110",
        "type": "integer"
      },
      {
        "name": "col_111",
        "type": "integer"
      },
      {
        "name": "col_112",
        "type": "integer"
      },
      {
        "name": "col_113",
        "type": "integer"
      },
      {
        "name": "col_114",
        "type": "integer"
      },
      {
        "name": "col_115",
        "type": "integer"
      },
      {
        "name": "col_116",
        "type": "integer"
      },
      {
        "name": "col_117",
        "type": "integer"
      },
      {
        "name": "col_118",
        "type": "integer"
      },
      {
        "name": "col_119",
        "type": "integer"
      },
      {
        "name": "col_120",
        "type": "integer"
      },
      {
        "name": "col_121",
        "type": "integer"
      },
      {
        "name": "col_122",
        "type": "integer"
      },
      {
        "name": "col_123",
        "type": "integer"
      },
      {
        "name": "col_124",
        "type": "integer"
      },
      {
        "name": "col_125",
        "type": "integer"
      },
      {
        "name": "col_126",
        "type": "integer"
      },
      {
        "name": "col_127",
        "type": "integer"
      },
      {
        "name": "col_128",
        "type": "integer"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "col_0",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_1",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_2",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_3",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_4",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_5",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_6",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_7",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_8",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_9",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_10",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_11",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_12",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_13",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_14",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_15",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_16",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_17",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_18",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_19",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_20",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_21",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_22",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_23",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_24",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_25",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_26",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_27",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_28",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_29",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_30",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_31",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_32",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_33",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_34",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_35",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_36",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_37",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_38",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_39",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_40",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_41",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_42",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_43",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_44",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_45",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_46",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_47",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_48",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_49",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_50",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_51",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_52",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_53",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_54",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_55",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_56",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_57",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_58",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_59",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_60",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_61",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_62",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_63",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_64",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_65",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_66",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_67",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_68",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_69",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_70",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_71",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_72",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_73",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_74",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_75",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_76",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_77",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_78",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_79",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_80",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_81",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_82",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_83",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_84",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_85",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_86",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_87",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_88",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_89",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_90",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_91",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_92",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_93",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_94",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_95",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_96",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_97",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_98",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_99",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_100",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_101",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_102",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_103",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_104",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_105",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_106",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_107",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_108",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_109",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_110",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_111",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_112",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_113",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_114",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_115",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_116",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_117",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_118",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_119",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_120",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_121",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_122",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_123",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_124",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_125",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_126",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_127",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "col_128",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select * from limit_max_match_wes",
    "queries_data": [
      {
        "query": "select count(*) from limit_max_match_wes where col_0 > 0 or col_1 > 0 or col_2 > 0 or col_3 > 0 or col_4 > 0 or col_5 > 0 or col_6 > 0 or col_7 > 0 or col_8 > 0 or col_9 > 0 or col_10 > 0 or col_11 > 0 or col_12 > 0 or col_13 > 0 or col_14 > 0 or col_15 > 0 or col_16 > 0 or col_17 > 0 or col_18 > 0 or col_19 > 0 or col_20 > 0 or col_21 > 0 or col_22 > 0 or col_23 > 0 or col_24 > 0 or col_25 > 0 or col_26 > 0 or col_27 > 0 or col_28 > 0 or col_29 > 0 or col_30 > 0 or col_31 > 0 or col_32 > 0 or col_33 > 0 or col_34 > 0 or col_35 > 0 or col_36 > 0 or col_37 > 0 or col_38 > 0 or col_39 > 0 or col_40 > 0 or col_41 > 0 or col_42 > 0 or col_43 > 0 or col_44 > 0 or col_45 > 0 or col_46 > 0 or col_47 > 0 or col_48 > 0 or col_49 > 0 or col_50 > 0 or col_51 > 0 or col_52 > 0 or col_53 > 0 or col_54 > 0 or col_55 > 0 or col_56 > 0 or col_57 > 0 or col_58 > 0 or col_59 > 0 or col_60 > 0 or col_61 > 0 or col_62 > 0 or col_63 > 0 or col_64 > 0 or col_65 > 0 or col_66 > 0 or col_67 > 0 or col_68 > 0 or col_69 > 0 or col_70 > 0 or col_71 > 0 or col_72 > 0 or col_73 > 0 or col_74 > 0 or col_75 > 0 or col_76 > 0 or col_77 > 0 or col_78 > 0 or col_79 > 0 or col_80 > 0 or col_81 > 0 or col_82 > 0 or col_83 > 0 or col_84 > 0 or col_85 > 0 or col_86 > 0 or col_87 > 0 or col_88 > 0 or col_89 > 0 or col_90 > 0 or col_91 > 0 or col_92 > 0 or col_93 > 0 or col_94 > 0 or col_95 > 0 or col_96 > 0 or col_97 > 0 or col_98 > 0 or col_99 > 0 or col_100 > 0 or col_101 > 0 or col_102 > 0 or col_103 > 0 or col_104 > 0 or col_105 > 0 or col_106 > 0 or col_107 > 0 or col_108 > 0 or col_109 > 0 or col_110 > 0 or col_111 > 0 or col_112 > 0 or col_113 > 0 or col_114 > 0 or col_115 > 0 or col_116 > 0 or col_117 > 0 or col_118 > 0 or col_119 > 0 or col_120 > 0 or col_121 > 0 or col_122 > 0 or col_123 > 0 or col_124 > 0 or col_125 > 0 or col_126 > 0 or col_127 > 0 or col_128 > 0",
        "description": "129 predicates with OR between them, we exceed the limit, therefore, everything goes to external match",
        "expected_result": [
          1000
        ],
        "query_id": "limit_max_match_wes_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 129
        }
      },
      {
        "query": "select count(*) from limit_max_match_wes where col_0 > 0 or col_1 > 0 or col_2 > 0 or col_3 > 0 or col_4 > 0 or col_5 > 0 or col_6 > 0 or col_7 > 0 or col_8 > 0 or col_9 > 0 or col_10 > 0 or col_11 > 0 or col_12 > 0 or col_13 > 0 or col_14 > 0 or col_15 > 0 or col_16 > 0 or col_17 > 0 or col_18 > 0 or col_19 > 0 or col_20 > 0 or col_21 > 0 or col_22 > 0 or col_23 > 0 or col_24 > 0 or col_25 > 0 or col_26 > 0 or col_27 > 0 or col_28 > 0 or col_29 > 0 or col_30 > 0 or col_31 > 0 or col_32 > 0 or col_33 > 0 or col_34 > 0 or col_35 > 0 or col_36 > 0 or col_37 > 0 or col_38 > 0 or col_39 > 0 or col_40 > 0 or col_41 > 0 or col_42 > 0 or col_43 > 0 or col_44 > 0 or col_45 > 0 or col_46 > 0 or col_47 > 0 or col_48 > 0 or col_49 > 0 or col_50 > 0 or col_51 > 0 or col_52 > 0 or col_53 > 0 or col_54 > 0 or col_55 > 0 or col_56 > 0 or col_57 > 0 or col_58 > 0 or col_59 > 0 or col_60 > 0 or col_61 > 0 or col_62 > 0 or col_63 > 0 or col_64 > 0 or col_65 > 0 or col_66 > 0 or col_67 > 0 or col_68 > 0 or col_69 > 0 or col_70 > 0 or col_71 > 0 or col_72 > 0 or col_73 > 0 or col_74 > 0 or col_75 > 0 or col_76 > 0 or col_77 > 0 or col_78 > 0 or col_79 > 0 or col_80 > 0 or col_81 > 0 or col_82 > 0 or col_83 > 0 or col_84 > 0 or col_85 > 0 or col_86 > 0 or col_87 > 0 or col_88 > 0 or col_89 > 0 or col_90 > 0 or col_91 > 0 or col_92 > 0 or col_93 > 0 or col_94 > 0 or col_95 > 0 or col_96 > 0 or col_97 > 0 or col_98 > 0 or col_99 > 0 or col_100 > 0 or col_101 > 0 or col_102 > 0 or col_103 > 0 or col_104 > 0 or col_105 > 0 or col_106 > 0 or col_107 > 0 or col_108 > 0 or col_109 > 0 or col_110 > 0 or col_111 > 0 or col_112 > 0 or col_113 > 0 or col_114 > 0 or col_115 > 0 or col_116 > 0 or col_117 > 0 or col_118 > 0 or col_119 > 0 or col_120 > 0 or col_121 > 0 or col_122 > 0 or col_123 > 0 or col_124 > 0 or col_125 > 0 or col_126 > 0 or col_127 > 0",
        "description": "128 predicates with OR between them, we are within the limit, therefore, everything goes to varada match, we don't have enough memory for leftover collect",
        "expected_result": [
          1000
        ],
        "query_id": "limit_max_match_wes_2",
        "expected_counters": {
          "varada_match_collect": 0,
          "varada_match_columns": 128,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 128
        }
      },
      {
        "query": "select count(*) from limit_max_match_wes where col_0 > 0 or col_1 > 0 or col_2 > 0 or col_3 > 0 or col_4 > 0 or col_5 > 0 or col_6 > 0 or col_7 > 0 or col_8 > 0 or col_9 > 0 or col_10 > 0 or col_11 > 0 or col_12 > 0 or col_13 > 0 or col_14 > 0 or col_15 > 0 or col_16 > 0 or col_17 > 0 or col_18 > 0 or col_19 > 0 or col_20 > 0 or col_21 > 0 or col_22 > 0 or col_23 > 0 or col_24 > 0 or col_25 > 0 or col_26 > 0 or col_27 > 0 or col_28 > 0 or col_29 > 0 or col_30 > 0 or col_31 > 0 or col_32 > 0 or col_33 > 0 or col_34 > 0 or col_35 > 0 or col_36 > 0 or col_37 > 0 or col_38 > 0 or col_39 > 0 or col_40 > 0 or col_41 > 0 or col_42 > 0 or col_43 > 0 or col_44 > 0 or col_45 > 0 or col_46 > 0 or col_47 > 0 or col_48 > 0 or col_49 > 0 or col_50 > 0 or col_51 > 0 or col_52 > 0 or col_53 > 0 or col_54 > 0 or col_55 > 0 or col_56 > 0 or col_57 > 0 or col_58 > 0 or col_59 > 0 or col_60 > 0 or col_61 > 0 or col_62 > 0 or col_63 > 0 or col_64 > 0 or col_65 > 0 or col_66 > 0 or col_67 > 0 or col_68 > 0 or col_69 > 0 or col_70 > 0 or col_71 > 0 or col_72 > 0 or col_73 > 0 or col_74 > 0 or col_75 > 0 or col_76 > 0 or col_77 > 0 or col_78 > 0 or col_79 > 0 or col_80 > 0 or col_81 > 0 or col_82 > 0 or col_83 > 0 or col_84 > 0 or col_85 > 0 or col_86 > 0 or col_87 > 0 or col_88 > 0 or col_89 > 0 or col_90 > 0 or col_91 > 0 or col_92 > 0 or col_93 > 0 or col_94 > 0 or col_95 > 0 or col_96 > 0 or col_97 > 0 or col_98 > 0 or col_99 > 0 or col_100 > 0 or col_101 > 0 or col_102 > 0 or col_103 > 0 or col_104 > 0 or col_105 > 0 or col_106 > 0 or col_107 > 0 or col_108 > 0 or col_109 > 0 or col_110 > 0 or col_111 > 0 or col_112 > 0 or col_113 > 0 or col_114 > 0 or col_115 > 0 or col_116 > 0 or col_117 > 0 or col_118 > 0 or col_119 > 0 or col_120 > 0 or col_121 > 0 or col_122 > 0 or col_123 > 0 or col_124 > 0 or col_125 > 0 or col_126 > 0 or col_127 > 0 and col_128 > 0",
        "description": "this query converted to (c0 or c1 or ... c128) AND (c0 OR c1 or .. c128) - total 256 leaves, we remove one leaf",
        "expected_result": [
          1000
        ],
        "query_id": "limit_max_match_wes_3",
        "expected_counters": {
          "varada_match_columns": 128,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 129
        }
      }
    ]
  },
  {
    "name": "nan_single",
    "comment": "single and NaN chunks",
    "pt_enable": true,
    "skip_caching": true,
    "structure": [
      {
        "name": "col_double",
        "type": "double"
      },
      {
        "name": "col_varchar",
        "type": "varchar"
      }
    ],
    "queries_data": [
      {
        "query": "select col_varchar, max(col_double), min(col_double) from nan_single where col_varchar='FLY_flyer_9' group by 1",
        "query_id": "nan_single_1",
        "expected_result": [
          "FLY_flyer_9",
          2.40904820500737E8,
          2.40904820500737E8
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_double) from nan_single where col_varchar='FLY_flyer_1'",
        "query_id": "nan_single_2",
        "expected_result": [
          96897
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from nan_single where col_varchar like 'FLY_flyer_%'",
        "query_id": "nan_single_3",
        "expected_result": [
          1572864
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from nan_single where col_double is not NULL",
        "query_id": "nan_single_4",
        "expected_result": [
          1066367
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from nan_single where is_nan(col_double) = true",
        "query_id": "nan_single_5",
        "expected_result": [
          664077
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from nan_single where is_nan(col_double) = true AND col_varchar like 'FLY_flyer_1'",
        "query_id": "nan_single_6",
        "expected_result": [
          60254
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from nan_single where is_nan(col_double) = true OR col_double is NULL",
        "query_id": "nan_single_7",
        "expected_result": [
          1170574
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(col_double), min(col_double), avg(col_double) from nan_single where is_nan(col_double) = true",
        "query_id": "nan_single_8",
        "expected_result": [
          "NaN",
          "NaN",
          "NaN"
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "geospatial_basic",
    "pt_enable": true,
    "skip_caching": true,
    "lines": 1000000,
    "structure": [
      {
        "name": "geo_point",
        "type": "varchar"
      },
      {
        "name": "geo_multipoint",
        "type": "varchar"
      },
      {
        "name": "geo_linestring",
        "type": "varchar"
      },
      {
        "name": "geo_multilinestring",
        "type": "varchar"
      },
      {
        "name": "geo_polygon",
        "type": "varchar"
      },
      {
        "name": "geo_multipolygon",
        "type": "varchar"
      },
      {
        "name": "geo_x",
        "type": "double"
      },
      {
        "name": "geo_y",
        "type": "double"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "geo_point",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "geo_multipoint",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "geo_linestring",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "geo_multilinestring",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "geo_polygon",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "geo_multipolygon",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "geo_x",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      },
      {
        "colNameId": "geo_y",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_DATA",
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "warm_query": "select * from geospatial_basic",
    "queries_data": [
      {
        "query": "select count(*) from geospatial_basic",
        "query_id": "geospatial_basic_01",
        "expected_result": [
          1000000
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 1
        },
        "dl_expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 1
        }
      },
      {
        "query": "select distinct(ST_IsValid(ST_GeometryFromText(geo_point))) from geospatial_basic",
        "query_id": "geospatial_basic_02",
        "expected_result": [
          true
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from geospatial_basic where ST_Contains(ST_GeometryFromText(geo_point), ST_GeometryFromText(geo_multipoint))",
        "query_id": "geospatial_basic_03",
        "expected_result": [
          0
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select max(ST_Area(ST_GeometryFromText(geo_polygon))) from geospatial_basic",
        "query_id": "geospatial_basic_04",
        "expected_result": [
          107835.34246970105
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from geospatial_basic where ST_Contains(ST_GeometryFromText(geo_multipolygon), st_point(geo_x, geo_y))",
        "query_id": "geospatial_basic_05",
        "expected_result": [
          189707
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from geospatial_basic where ST_Contains(ST_GeometryFromText(geo_polygon), ST_Point(geo_x, geo_y))",
        "query_id": "geospatial_basic_06",
        "expected_result": [
          189887
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 3,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from geospatial_basic where ST_Area(ST_GeometryFromText(geo_polygon)) > 100",
        "query_id": "geospatial_basic_07",
        "expected_result": [
          497827
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from geospatial_basic where ST_Crosses(ST_GeometryFromText(geo_polygon), ST_GeometryFromText(geo_multilinestring))",
        "query_id": "geospatial_basic_08",
        "expected_result": [
          990589
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from geospatial_basic where ST_Disjoint(ST_GeometryFromText(geo_polygon), ST_GeometryFromText(geo_multipolygon))",
        "query_id": "geospatial_basic_09",
        "expected_result": [
          56315
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(*) from geospatial_basic where ST_Intersects(ST_GeometryFromText(geo_polygon), ST_GeometryFromText(geo_multipolygon)) and ST_Area(ST_GeometryFromText(geo_polygon)) > 100 or ST_Contains(ST_GeometryFromText(geo_multipolygon), st_point(geo_x, geo_y))",
        "query_id": "geospatial_basic_10",
        "expected_result": [
          570770
        ],
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 4,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "transformed_column",
    "lines": 4,
    "pt_enable": true,
    "table_name": "mac_paramsj",
    "structure": [
      {
        "name": "Id",
        "type": "integer"
      },
      {
        "name": "Model",
        "type": "varchar",
        "args": [
          65535
        ]
      },
      {
        "name": "Year",
        "type": "bigint"
      },
      {
        "name": "ScreenSize",
        "type": "varchar",
        "args": [
          20
        ]
      },
      {
        "name": "RAM",
        "type": "varchar",
        "args": [
          5
        ]
      },
      {
        "name": "HDD",
        "type": "varchar",
        "args": [
          10
        ]
      },
      {
        "name": "W",
        "type": "double"
      },
      {
        "name": "D",
        "type": "double"
      },
      {
        "name": "H",
        "type": "double"
      },
      {
        "name": "Weight",
        "type": "double"
      }
    ],
    "session_properties": {
      "enable_import_export": false,
      "enable_default_warming": true
    },
    "warm_query": "select COUNT(*) from mac_paramsj where lower(hdd) = '512gb ssd' and upper(model) = 'MACBOOK PRO'",
    "queries_data": [
      {
        "query": "select COUNT(*) from mac_paramsj where lower(hdd) = '1tb ssd'",
        "query_id": "transformed_column_lower",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select COUNT(*) from mac_paramsj where lower(hdd) = '512gb ssd' and upper(model) = 'MACBOOK PRO'",
        "query_id": "transformed_column_lower_upper",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select COUNT(*) from mac_paramsj where upper(model) = 'MACBOOK'",
        "query_id": "transformed_column_upper",
        "expected_result": [
          1
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "str_date",
    "pt_enable": true,
    "data": "resources/synthetic/str_date.jsonl",
    "structure": [
      {
        "name": "col_varchar",
        "type": "varchar"
      }
    ],
    "session_properties": {
      "enable_import_export": false,
      "enable_default_warming": true
    },
    "warm_query": "select count(col_varchar) from str_date where day_of_month(date(col_varchar)) = 4",
    "queries_data": [
      {
        "query": "select count(col_varchar) from str_date where day_of_month(date(col_varchar)) = 4",
        "query_id": "str_date_1",
        "expected_result": [
          16
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select col_varchar from str_date where day_of_year(date(col_varchar)) = 4",
        "query_id": "str_date_2",
        "expected_result": [
          "1992-01-04"
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_varchar) from str_date where date(col_varchar) = date('2008-04-26')",
        "query_id": "str_date_3",
        "expected_result": [
          21
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_varchar) from str_date where day(date(col_varchar)) > day(date('2008-04-26'))",
        "query_id": "str_date_4",
        "expected_result": [
          172
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_varchar) from str_date where day(date(col_varchar)) > 30  and  day_of_week(date(col_varchar)) > 4",
        "query_id": "str_date_5",
        "expected_result": [
          4
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select count(col_varchar) from str_date where year_of_week(cast(col_varchar as date)) < 1999",
        "query_id": "str_date_6",
        "expected_result": [
          521
        ],
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "extreme_mixed",
    "lines": 200000,
    "pt_enable": true,
    "skip_caching": true,
    "data": "resources/synthetic/extreme_mixed.jsonl",
    "structure": [
      {
        "name": "col_inta",
        "type": "integer"
      },
      {
        "name": "col_intb",
        "type": "integer"
      }
    ],
    "warmup_rules": [
      {
        "colNameId": "col_inta",
        "predicates": [],
        "warmUpTypes": [
          "WARM_UP_TYPE_BASIC"
        ]
      }
    ],
    "queries_data": [
      {
        "query": "select count(*) from extreme_mixed",
        "expected_result": [
          200000
        ],
        "query_id": "extreme_mixed_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select sum(col_intb) from extreme_mixed where col_inta<5",
        "expected_result": [
          5054717
        ],
        "query_id": "extreme_mixed_2",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 1
        }
      },
      {
        "query": "select sum(col_intb) from extreme_mixed where col_inta>5",
        "expected_result": [
          5056654
        ],
        "query_id": "extreme_mixed_3",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 0,
          "empty_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 1
        }
      },
      {
        "query": "select sum(col_inta) from extreme_mixed where col_intb>50",
        "expected_result": [
          525927
        ],
        "query_id": "extreme_mixed_4",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 0,
          "empty_collect_columns": 0,
          "external_match_columns": 1,
          "external_collect_columns": 2
        }
      }
    ]
  },
  {
    "name": "enable_dict_false",
    "pt_enable": true,
    "structure": [
      {"name": "month", "type": "date"},
      {"name": "account_id", "type": "varchar"},
      {"name": "faccount", "type": "varchar"},
      {"name": "apps_flyer_account_id", "type": "varchar"},
      {"name": "account_name", "type": "varchar"},
      {"name": "certainty_type", "type": "varchar"},
      {"name": "max_billing_end_date", "type": "timestamp"},
      {"name": "mrr", "type": "double"},
      {"name": "mrr_month", "type": "varchar"},
      {"name": "previous_month_mrr", "type": "double"},
      {"name": "previous_quarter_mrr", "type": "double"},
      {"name": "previous_year_december_mrr", "type": "double"},
      {"name": "last_eoq_mrr", "type": "double"},
      {"name": "qtd_type", "type": "varchar"},
      {"name": "mom_type", "type": "varchar"},
      {"name": "ytd_type", "type": "varchar"},
      {"name": "previous_year_mrr", "type": "double"},
      {"name": "yoy_type", "type": "varchar"},
      {"name": "mom_delta", "type": "double"},
      {"name": "qtd_delta", "type": "double"},
      {"name": "yoy_delta", "type": "double"},
      {"name": "ytd_delta", "type": "double"},
      {"name": "reason_for_churn", "type": "varchar"},
      {"name": "churned_lost_status", "type": "varchar"},
      {"name": "customer_success_manager_name", "type": "varchar"},
      {"name": "master_account", "type": "varchar"},
      {"name": "max_paid_asset_billing_end_date", "type": "date"},
      {"name": "is_retention_effort", "type": "boolean"},
      {"name": "is_future_churn", "type": "boolean"},
      {"name": "this_year_june_mrr", "type": "double"},
      {"name": "h2_type", "type": "varchar"},
      {"name": "h2_delta", "type": "double"},
      {"name": "h1_or_h2_mrr", "type": "double"},
      {"name": "h1_or_h2_type", "type": "varchar"},
      {"name": "h1_or_h2_delta", "type": "double"},
      {"name": "acc_region", "type": "varchar"},
      {"name": "acc_sub_region", "type": "varchar"},
      {"name": "acc_consolidated_biz_unit_region", "type": "varchar"},
      {"name": "acc_biz_unit_region", "type": "varchar"},
      {"name": "acc_shipping_country", "type": "varchar"},
      {"name": "acc_billing_country", "type": "varchar"},
      {"name": "acc_tier", "type": "varchar"},
      {"name": "acc_activation_date", "type": "timestamp"},
      {"name": "acc_industry", "type": "varchar"},
      {"name": "churn_competitor_chosen", "type": "varchar"},
      {"name": "churn_start_date", "type": "timestamp"},
      {"name": "reason_for_churn_from_account", "type": "varchar"},
      {"name": "account_segmentation", "type": "varchar"},
      {"name": "churn_notes", "type": "varchar"},
      {"name": "gm_notes", "type": "varchar"},
      {"name": "product_sub_domain", "type": "varchar"},
      {"name": "level_of_service", "type": "varchar"},
      {"name": "acc_csm_name", "type": "varchar"},
      {"name": "acc_team_leader_name", "type": "varchar"},
      {"name": "growth_manager_name", "type": "varchar"},
      {"name": "csm_email", "type": "varchar"},
      {"name": "user_csm_secondary_email", "type": "varchar"},
      {"name": "user_solution_architect_email", "type": "varchar"},
      {"name": "user_cem_email", "type": "varchar"},
      {"name": "account_sales_email", "type": "varchar"},
      {"name": "growth_manager_email", "type": "varchar"},
      {"name": "regional_csm_email", "type": "varchar"},
      {"name": "secondary_regional_csm_email", "type": "varchar"},
      {"name": "acc_csm_name_during_snapshot_month", "type": "varchar"},
      {"name": "acc_team_leader_name_during_snapshot_month", "type": "varchar"},
      {"name": "last_year_acc_tier", "type": "varchar"},
      {"name": "exclude_churn_reason", "type": "varchar"},
      {"name": "first_arr_month", "type": "date"},
      {"name": "last_csm_name", "type": "varchar"},
      {"name": "last_csm_email", "type": "varchar"},
      {"name": "last_team_leader_name", "type": "varchar"},
      {"name": "cumulative_yearly_mom_delta_mom_type_churn", "type": "double"},
      {"name": "cumulative_yearly_mom_delta_mom_type_and_ytd_type_churn", "type": "double"},
      {"name": "cumulative_yearly_mom_delta_mom_type_and_ytd_type_not_churn", "type": "double"},
      {"name": "cumulative_yearly_mom_delta_mom_type_and_ytd_type_not_downgrade", "type": "double"},
      {"name": "downgrade_month", "type": "date"},
      {"name": "churn_month", "type": "date"},
      {"name": "downgrade_month_for_h1_h2", "type": "date"},
      {"name": "churn_month_for_h1_h2", "type": "date"},
      {"name": "reason_for_downgrade", "type": "varchar"},
      {"name": "downgrade_opp_id", "type": "varchar"},
      {"name": "downgrade_opp_name", "type": "varchar"},
      {"name": "downgrade_opp_close_date", "type": "timestamp"},
      {"name": "arr_today", "type": "double"}
    ],
    "session_properties": {
      "enable_dictionary": false,
      "enable_default_warming": true
    },
    "warm_query": "select churn_competitor_chosen, count(*) from enable_dict_false where churn_competitor_chosen is null and month = cast('2023-01-01' as date) and acc_region<>'EMEA' group by 1 order by 1",
    "queries_data": [
      {
        "query": "select churn_competitor_chosen, count(*) from enable_dict_false where churn_competitor_chosen is not null group by 1 order by 1",
        "expected_result": [
          ["Adjust", 511],
          ["Airbridge", 13],
          ["Appmetrica", 24],
          ["AppsFlyer - PPU", 24],
          ["Appsflyer", 25],
          ["Branch", 194],
          ["Firebase", 49],
          ["Kochava", 49],
          ["Mytracker", 24],
          ["No Current Provider", 162],
          ["No Current Provider;Unknown", 24],
          ["Other",297],
          ["Reyun", 25],
          ["Singular", 49],
          ["Tenjin", 13],
          ["Unknown", 759]
        ],
        "query_id": "enable_dict_false_1",
        "expected_counters": {
          "varada_match_columns": 1,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      },
      {
        "query": "select churn_competitor_chosen, count(*) from enable_dict_false where month = cast('2023-01-01' as date) and acc_region<>'EMEA'  group by 1 order by 1",
        "expected_result": [
          ["Adjust", 8],
          ["Airbridge", 1],
          ["AppsFlyer - PPU", 1],
          ["Branch", 2],
          ["Kochava", 1],
          ["No Current Provider", 3],
          ["Other",4],
          ["Singular", 1],
          ["Unknown", 10],
          [null, 4295]
        ],
        "query_id": "enable_dict_false_2",
        "expected_counters": {
          "varada_match_columns": 2,
          "varada_collect_columns": 2,
          "prefilled_collect_columns": 1,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "iceberg_expected_counters": {
          "varada_match_columns": 8,
          "varada_collect_columns": 7,
          "prefilled_collect_columns": 5,
          "external_match_columns": 0,
          "external_collect_columns": 0
        },
        "dl_expected_counters": {
          "varada_match_columns": 8,
          "varada_collect_columns": 7,
          "prefilled_collect_columns": 5,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  },
  {
    "name": "int_array_with_nulls",
    "pt_enable": true,
    "structure": [
      {
        "name": "genre_id",
        "type": "array",
        "args": ["bigint"]
      }
    ],
    "comment_type_skip": "no table",
    "skip_type": [
      "varada_iceberg",
      "varada_delta_lake"
    ],
    "session_properties": {
      "enable_default_warming": true
    },
    "warm_query": "select * from int_array_with_nulls",
    "queries_data": [
      {
        "query": "select element_at(genre_id, 1) from int_array_with_nulls order by cardinality(genre_id)",
        "expected_result": [
          [null],
          [null],
          [null],
          [null]
        ],
        "query_id": "int_array_with_nulls_1",
        "expected_counters": {
          "varada_match_columns": 0,
          "varada_collect_columns": 1,
          "prefilled_collect_columns": 0,
          "external_match_columns": 0,
          "external_collect_columns": 0
        }
      }
    ]
  }
]

