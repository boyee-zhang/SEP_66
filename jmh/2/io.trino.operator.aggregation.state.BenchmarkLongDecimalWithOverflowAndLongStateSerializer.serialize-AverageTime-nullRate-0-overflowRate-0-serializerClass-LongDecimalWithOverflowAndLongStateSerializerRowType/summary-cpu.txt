--- Execution profile ---
Total samples       : 3475
not_walkable_Java   : 1 (0.03%)

--- 1750000000 ns (5.04%), 175 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 1570000000 ns (4.52%), 157 samples
  [ 0] io.trino.array.LongBigArray.get
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateFactory$GroupedLongDecimalWithOverflowAndLongState.getLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 1380000000 ns (3.97%), 138 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 1130000000 ns (3.25%), 113 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 1] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 4] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 6] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 1030000000 ns (2.96%), 103 samples
  [ 0] io.trino.array.BigArrays.offset
  [ 1] io.trino.array.BooleanBigArray.get
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.isNotNull
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 950000000 ns (2.73%), 95 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 850000000 ns (2.45%), 85 samples
  [ 0] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 1] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 3] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 4] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 5] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 830000000 ns (2.39%), 83 samples
  [ 0] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 1] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 3] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 4] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 5] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 800000000 ns (2.30%), 80 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 760000000 ns (2.19%), 76 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 740000000 ns (2.13%), 74 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.getOverflow
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 8] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 710000000 ns (2.04%), 71 samples
  [ 0] io.trino.array.BooleanBigArray.get
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.isNotNull
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 650000000 ns (1.87%), 65 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 640000000 ns (1.84%), 64 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 580000000 ns (1.67%), 58 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 540000000 ns (1.55%), 54 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 530000000 ns (1.53%), 53 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 520000000 ns (1.50%), 52 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 510000000 ns (1.47%), 51 samples
  [ 0] io.trino.array.LongBigArray.get
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateFactory$GroupedLongDecimalWithOverflowAndLongState.getLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 500000000 ns (1.44%), 50 samples
  [ 0] io.trino.array.LongBigArray.getSegment
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.getDecimalArray
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 500000000 ns (1.44%), 50 samples
  [ 0] io.trino.array.BooleanBigArray.get
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.isNotNull
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 480000000 ns (1.38%), 48 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 470000000 ns (1.35%), 47 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 440000000 ns (1.27%), 44 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 440000000 ns (1.27%), 44 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 410000000 ns (1.18%), 41 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 400000000 ns (1.15%), 40 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 390000000 ns (1.12%), 39 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.getSizeInBytes
  [ 1] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [11] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 370000000 ns (1.06%), 37 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 350000000 ns (1.01%), 35 samples
  [ 0] io.trino.array.BigArrays.offset
  [ 1] io.trino.array.LongBigArray.getOffset
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.getDecimalArrayOffset
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 350000000 ns (1.01%), 35 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 350000000 ns (1.01%), 35 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 330000000 ns (0.95%), 33 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 330000000 ns (0.95%), 33 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 320000000 ns (0.92%), 32 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 7] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 300000000 ns (0.86%), 30 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 1] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 4] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 6] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 300000000 ns (0.86%), 30 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.closeEntry
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 300000000 ns (0.86%), 30 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 290000000 ns (0.83%), 29 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 290000000 ns (0.83%), 29 samples
  [ 0] io.trino.array.BigArrays.segment
  [ 1] io.trino.array.LongBigArray.getSegment
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.getDecimalArray
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 290000000 ns (0.83%), 29 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 290000000 ns (0.83%), 29 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 290000000 ns (0.83%), 29 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 280000000 ns (0.81%), 28 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 270000000 ns (0.78%), 27 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 270000000 ns (0.78%), 27 samples
  [ 0] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 1] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 3] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 4] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 5] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 270000000 ns (0.78%), 27 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 270000000 ns (0.78%), 27 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateFactory$GroupedLongDecimalWithOverflowAndLongState.getLong
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 8] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 260000000 ns (0.75%), 26 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 260000000 ns (0.75%), 26 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 8] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 260000000 ns (0.75%), 26 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 250000000 ns (0.72%), 25 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.getDecimalArray
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 8] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 240000000 ns (0.69%), 24 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 230000000 ns (0.66%), 23 samples
  [ 0] io.trino.array.BigArrays.segment
  [ 1] io.trino.array.BooleanBigArray.get
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.isNotNull
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 230000000 ns (0.66%), 23 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 1] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 4] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 6] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 7] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 8] java.lang.reflect.Method.invoke
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 230000000 ns (0.66%), 23 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 230000000 ns (0.66%), 23 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.checkFieldIndexToWrite
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 230000000 ns (0.66%), 23 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.closeEntry
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 230000000 ns (0.66%), 23 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 220000000 ns (0.63%), 22 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.closeEntry
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 220000000 ns (0.63%), 22 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 7] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 210000000 ns (0.60%), 21 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 210000000 ns (0.60%), 21 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 210000000 ns (0.60%), 21 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 200000000 ns (0.58%), 20 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.closeEntry
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 200000000 ns (0.58%), 20 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.getPositionCount
  [ 1] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 2] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 190000000 ns (0.55%), 19 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 170000000 ns (0.49%), 17 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 160000000 ns (0.46%), 16 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.getOverflow
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 8] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 160000000 ns (0.46%), 16 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 150000000 ns (0.43%), 15 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 150000000 ns (0.43%), 15 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.checkFieldIndexToWrite
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 150000000 ns (0.43%), 15 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 130000000 ns (0.37%), 13 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 130000000 ns (0.37%), 13 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.closeEntry
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 120000000 ns (0.35%), 12 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.<init>
  [ 1] io.trino.spi.type.AbstractLongType.createBlockBuilder
  [ 2] io.trino.spi.type.AbstractLongType.createBlockBuilder
  [ 3] io.trino.spi.block.RowBlockBuilder.createFieldBlockBuilders
  [ 4] io.trino.spi.block.RowBlockBuilder.<init>
  [ 5] io.trino.spi.type.RowType.createBlockBuilder
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [11] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 120000000 ns (0.35%), 12 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 100000000 ns (0.29%), 10 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.<init>
  [ 1] io.trino.spi.type.RowType.createBlockBuilder
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 7] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 90000000 ns (0.26%), 9 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 90000000 ns (0.26%), 9 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 80000000 ns (0.23%), 8 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 80000000 ns (0.23%), 8 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] WatcherThread::sleep() const
  [ 5] WatcherThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 70000000 ns (0.20%), 7 samples
  [ 0] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 1] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 3] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 4] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 5] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 6] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 7] java.lang.reflect.Method.invoke
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 70000000 ns (0.20%), 7 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 60000000 ns (0.17%), 6 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 60000000 ns (0.17%), 6 samples
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1ParTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] __os_ch_md_redzone_cookie
  [ 7] internal_catch_exc_subsystem

--- 40000000 ns (0.12%), 4 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 40000000 ns (0.12%), 4 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 40000000 ns (0.12%), 4 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.closeEntry
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 40000000 ns (0.12%), 4 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 40000000 ns (0.12%), 4 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 40000000 ns (0.12%), 4 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] G1YoungRemSetSamplingThread::sleep_before_next_cycle()
  [ 5] G1YoungRemSetSamplingThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] __os_ch_md_redzone_cookie
  [10] internal_catch_exc_subsystem

--- 30000000 ns (0.09%), 3 samples
  [ 0] G1RemSetScanState::G1ResetScanTopClosure::do_heap_region(HeapRegion*)
  [ 1] HeapRegionManager::iterate(HeapRegionClosure*) const
  [ 2] G1RemSetScanState::reset()
  [ 3] G1CollectedHeap::pre_evacuate_collection_set()
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 5] VM_G1CollectForAllocation::doit()
  [ 6] VM_Operation::evaluate()
  [ 7] VMThread::evaluate_operation(VM_Operation*)
  [ 8] VMThread::loop()
  [ 9] VMThread::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] __os_ch_md_redzone_cookie
  [13] internal_catch_exc_subsystem

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.spi.block.SingleRowBlockWriter.checkFieldIndexToWrite
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 8] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 30000000 ns (0.09%), 3 samples
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 7] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 20000000 ns (0.06%), 2 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 20000000 ns (0.06%), 2 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 20000000 ns (0.06%), 2 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 20000000 ns (0.06%), 2 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 20000000 ns (0.06%), 2 samples
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1ParTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] __os_ch_md_redzone_cookie
  [ 7] internal_catch_exc_subsystem

--- 20000000 ns (0.06%), 2 samples
  [ 0] HeapRegionManager::iterate(HeapRegionClosure*) const
  [ 1] G1RemSetScanState::reset()
  [ 2] G1CollectedHeap::pre_evacuate_collection_set()
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 4] VM_G1CollectForAllocation::doit()
  [ 5] VM_Operation::evaluate()
  [ 6] VMThread::evaluate_operation(VM_Operation*)
  [ 7] VMThread::loop()
  [ 8] VMThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] __os_ch_md_redzone_cookie
  [12] internal_catch_exc_subsystem

--- 20000000 ns (0.06%), 2 samples
  [ 0] io.trino.spi.block.AbstractRowBlock.<init>
  [ 1] io.trino.spi.block.RowBlockBuilder.<init>
  [ 2] io.trino.spi.block.RowBlockBuilder.<init>
  [ 3] io.trino.spi.type.RowType.createBlockBuilder
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 20000000 ns (0.06%), 2 samples
  [ 0] G1RemSetScanState::reset()
  [ 1] G1CollectedHeap::pre_evacuate_collection_set()
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 3] VM_G1CollectForAllocation::doit()
  [ 4] VM_Operation::evaluate()
  [ 5] VMThread::evaluate_operation(VM_Operation*)
  [ 6] VMThread::loop()
  [ 7] VMThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] __os_ch_md_redzone_cookie
  [11] internal_catch_exc_subsystem

--- 20000000 ns (0.06%), 2 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 20000000 ns (0.06%), 2 samples
  [ 0] semaphore_wait_trap
  [ 1] SemaphoreGangTaskDispatcher::worker_wait_for_task()
  [ 2] GangWorker::loop()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] __os_ch_md_redzone_cookie
  [ 6] internal_catch_exc_subsystem

--- 20000000 ns (0.06%), 2 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 20000000 ns (0.06%), 2 samples
  [ 0] G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 2] G1YoungRemSetSamplingThread::sample_young_list_rs_lengths()
  [ 3] G1YoungRemSetSamplingThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 20000000 ns (0.06%), 2 samples
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 1] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 2] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 3] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 4] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [ 5] org.openjdk.jmh.runner.ForkedRunner.run
  [ 6] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] os::javaTimeNanos()
  [ 1] os::elapsed_counter()
  [ 2] CompositeElapsedCounterSource::now()
  [ 3] G1EvacPhaseWithTrimTimeTracker::G1EvacPhaseWithTrimTimeTracker(G1ParScanThreadState*, TimeInterval<CompositeCounterRepresentation, CompositeElapsedCounterSource>&, TimeInterval<CompositeCounterRepresentation, CompositeElapsedCounterSource>&)
  [ 4] G1ScanRSForRegionClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 6] G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int)
  [ 7] G1ParTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] __os_ch_md_redzone_cookie
  [12] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] SemaphoreGangTaskDispatcher::worker_wait_for_task()
  [ 2] GangWorker::loop()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] __os_ch_md_redzone_cookie
  [ 6] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 6] java.util.concurrent.LinkedBlockingQueue.take
  [ 7] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum)
  [ 1] stringStream::stringStream(unsigned long)
  [ 2] MethodHandles::lookup_basic_type_signature(Symbol*, bool, Thread*)
  [ 3] LinkResolver::lookup_polymorphic_method(LinkInfo const&, Handle*, Handle*, Thread*)
  [ 4] LinkResolver::resolve_method(LinkInfo const&, Bytecodes::Code, Thread*)
  [ 5] LinkResolver::linktime_resolve_static_method(LinkInfo const&, Thread*)
  [ 6] LinkResolver::resolve_static_call(CallInfo&, LinkInfo const&, bool, Thread*)
  [ 7] LinkResolver::resolve_invokestatic(CallInfo&, constantPoolHandle const&, int, Thread*)
  [ 8] SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&, Bytecodes::Code&, CallInfo&, Thread*)
  [ 9] SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&, CallInfo&, Thread*)
  [10] SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*)
  [11] SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*)
  [12] SharedRuntime::resolve_static_call_C(JavaThread*)
  [13] java.lang.invoke.VarHandleGuards.guard_LLL_Z
  [14] java.util.concurrent.locks.AbstractQueuedSynchronizer.initializeSyncQueue
  [15] java.util.concurrent.locks.AbstractQueuedSynchronizer.enq
  [16] java.util.concurrent.locks.AbstractQueuedSynchronizer.transferAfterCancelledWait
  [17] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [18] java.util.concurrent.LinkedBlockingQueue.poll
  [19] java.util.concurrent.ExecutorCompletionService.poll
  [20] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [21] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [22] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [23] org.openjdk.jmh.runner.BaseRunner.doSingle
  [24] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [25] org.openjdk.jmh.runner.ForkedRunner.run
  [26] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.03%), 1 sample
  [ 0] Monitor::TryFast()
  [ 1] Monitor::ILock(Thread*)
  [ 2] Monitor::lock_without_safepoint_check()
  [ 3] G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*)
  [ 4] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 5] G1YoungRemSetSamplingThread::sample_young_list_rs_lengths()
  [ 6] G1YoungRemSetSamplingThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] __os_ch_md_redzone_cookie
  [11] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool)
  [ 1] jdk.internal.misc.Unsafe.compareAndSetInt
  [ 2] jdk.internal.misc.Unsafe.weakCompareAndSetInt
  [ 3] jdk.internal.misc.Unsafe.getAndAddInt
  [ 4] java.util.concurrent.atomic.AtomicInteger.incrementAndGet
  [ 5] org.openjdk.jmh.runner.InfraControlL2.announceWarmupReady
  [ 6] org.openjdk.jmh.runner.InfraControl.announceWarmupReady
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 8] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.SingleRowBlockWriter.closeEntry
  [ 1] io.trino.spi.type.AbstractLongType.writeLong
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 2] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 3] io.trino.spi.type.AbstractLongType.writeLong
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [11] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1ParTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] __os_ch_md_redzone_cookie
  [ 7] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.ImmutableCollections$ListN.size
  [ 1] io.trino.spi.block.RowBlockBuilder.createFieldBlockBuilders
  [ 2] io.trino.spi.block.RowBlockBuilder.<init>
  [ 3] io.trino.spi.type.RowType.createBlockBuilder
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 1] org.openjdk.jmh.infra.Blackhole.consume
  [ 2] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 3] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 4] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 5] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 6] java.lang.reflect.Method.invoke
  [ 7] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 8] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.Executors$RunnableAdapter.call
  [11] java.util.concurrent.FutureTask.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1ParTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] __os_ch_md_redzone_cookie
  [ 7] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] os::elapsedTime()
  [ 1] G1CollectionSet::finalize_old_part(double)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 3] VM_G1CollectForAllocation::doit()
  [ 4] VM_Operation::evaluate()
  [ 5] VMThread::evaluate_operation(VM_Operation*)
  [ 6] VMThread::loop()
  [ 7] VMThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] __os_ch_md_redzone_cookie
  [11] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] semaphore_signal_trap
  [ 1] SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int)
  [ 2] WorkGang::run_task(AbstractGangTask*, unsigned int)
  [ 3] G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*)
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 5] VM_G1CollectForAllocation::doit()
  [ 6] VM_Operation::evaluate()
  [ 7] VMThread::evaluate_operation(VM_Operation*)
  [ 8] VMThread::loop()
  [ 9] VMThread::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] __os_ch_md_redzone_cookie
  [13] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] ObjArrayAllocator::initialize(HeapWord*) const
  [ 2] MemAllocator::allocate() const
  [ 3] CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*)
  [ 4] TypeArrayKlass::allocate_common(int, bool, Thread*)
  [ 5] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 6] io.trino.spi.block.RowBlockBuilder.<init>
  [ 7] io.trino.spi.type.RowType.createBlockBuilder
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [10] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [12] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [13] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] G1Allocator::old_attempt_allocation(unsigned long, unsigned long, unsigned long*)
  [ 1] G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*)
  [ 2] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 3] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*)
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] __os_ch_md_redzone_cookie
  [10] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 1] java.util.concurrent.CountDownLatch.await
  [ 2] org.openjdk.jmh.runner.InfraControlL2.awaitWarmupReady
  [ 3] org.openjdk.jmh.runner.InfraControl.awaitWarmupReady
  [ 4] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 5] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 6] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 7] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 8] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [ 9] org.openjdk.jmh.runner.ForkedRunner.run
  [10] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.03%), 1 sample
  [ 0] os::javaTimeNanos()
  [ 1] os::elapsed_counter()
  [ 2] CompositeElapsedCounterSource::now()
  [ 3] G1EvacPhaseWithTrimTimeTracker::G1EvacPhaseWithTrimTimeTracker(G1ParScanThreadState*, TimeInterval<CompositeCounterRepresentation, CompositeElapsedCounterSource>&, TimeInterval<CompositeCounterRepresentation, CompositeElapsedCounterSource>&)
  [ 4] G1ScanRSForRegionClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 6] G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int)
  [ 7] G1ParTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] __os_ch_md_redzone_cookie
  [12] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int)
  [ 2] WorkGang::run_task(AbstractGangTask*, unsigned int)
  [ 3] G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*)
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 5] VM_G1CollectForAllocation::doit()
  [ 6] VM_Operation::evaluate()
  [ 7] VMThread::evaluate_operation(VM_Operation*)
  [ 8] VMThread::loop()
  [ 9] VMThread::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] __os_ch_md_redzone_cookie
  [13] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] [unknown]
  [ 1] CollectedHeap::obj_allocate(Klass*, int, Thread*)
  [ 2] InstanceKlass::allocate_instance(Thread*)
  [ 3] java_lang_String::basic_create(int, bool, Thread*)
  [ 4] java_lang_String::create_from_unicode(unsigned short*, int, Thread*)
  [ 5] StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*)
  [ 6] StringTable::intern(Symbol*, Thread*)
  [ 7] ConstantPool::string_at_impl(constantPoolHandle const&, int, int, Thread*)
  [ 8] ConstantPool::string_at(int, int, Thread*)
  [ 9] ciEnv::get_constant_by_index_impl(constantPoolHandle const&, int, int, ciInstanceKlass*)
  [10] ciEnv::get_constant_by_index(constantPoolHandle const&, int, int, ciInstanceKlass*)
  [11] ciBytecodeStream::get_constant()
  [12] GraphBuilder::load_constant()
  [13] GraphBuilder::iterate_bytecodes_for_block(int)
  [14] GraphBuilder::iterate_all_blocks(bool)
  [15] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [16] IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)
  [17] IR::IR(Compilation*, ciMethod*, int)
  [18] Compilation::build_hir()
  [19] Compilation::compile_java_method()
  [20] Compilation::compile_method()
  [21] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*)
  [22] Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)
  [23] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [24] CompileBroker::compiler_thread_loop()
  [25] JavaThread::thread_main_inner()
  [26] JavaThread::run()
  [27] Thread::call_run()
  [28] thread_native_entry(Thread*)
  [29] __os_ch_md_redzone_cookie
  [30] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] GCId::current()
  [ 1] G1ScanRSForRegionClosure::do_heap_region(HeapRegion*)
  [ 2] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 3] G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int)
  [ 4] G1ParTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] SemaphoreGangTaskDispatcher::worker_wait_for_task()
  [ 2] GangWorker::loop()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] __os_ch_md_redzone_cookie
  [ 6] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.RowBlockBuilder.entryAdded
  [ 1] io.trino.spi.block.RowBlockBuilder.closeEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 7] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const
  [ 1] G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long)
  [ 2] G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*)
  [ 3] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 4] G1YoungRemSetSamplingThread::sample_young_list_rs_lengths()
  [ 5] G1YoungRemSetSamplingThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] __os_ch_md_redzone_cookie
  [10] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.updateDataSize
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 2] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 3] io.trino.spi.type.AbstractLongType.writeLong
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [11] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] G1CMRootRegions::wait_until_scan_finished()
  [ 1] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 2] VM_G1CollectForAllocation::doit()
  [ 3] VM_Operation::evaluate()
  [ 4] VMThread::evaluate_operation(VM_Operation*)
  [ 5] VMThread::loop()
  [ 6] VMThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] __os_ch_md_redzone_cookie
  [10] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] G1ScanRSForRegionClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 2] G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int)
  [ 3] G1ParTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park()
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] ServiceThread::service_thread_entry(JavaThread*, Thread*)
  [ 5] JavaThread::thread_main_inner()
  [ 6] JavaThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] __os_ch_md_redzone_cookie
  [10] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] I2C/C2I adapters
  [ 1] java.lang.invoke.VarHandleInts$FieldInstanceReadWrite.setRelease
  [ 2] java.lang.invoke.VarHandleGuards.guard_LI_V

--- 10000000 ns (0.03%), 1 sample
  [ 0] LIRGenerator::LIRGenerator(Compilation*, ciMethod*)
  [ 1] Compilation::emit_lir()
  [ 2] Compilation::compile_java_method()
  [ 3] Compilation::compile_method()
  [ 4] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*)
  [ 5] Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] JavaThread::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] __os_ch_md_redzone_cookie
  [13] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const
  [ 1] G1CollectionSet::add_young_region_common(HeapRegion*)
  [ 2] G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long)
  [ 3] G1AllocRegion::retire_internal(HeapRegion*, bool)
  [ 4] MutatorAllocRegion::retire(bool)
  [ 5] G1CollectedHeap::attempt_allocation_slow(unsigned long)
  [ 6] G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*)
  [ 7] G1CollectedHeap::mem_allocate(unsigned long, bool*)
  [ 8] MemAllocator::mem_allocate(MemAllocator::Allocation&) const
  [ 9] MemAllocator::allocate() const
  [10] CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*)
  [11] TypeArrayKlass::allocate_common(int, bool, Thread*)
  [12] OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*)
  [13] java.util.Arrays.copyOf
  [14] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [15] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [16] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [17] io.trino.spi.type.AbstractLongType.writeLong
  [18] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [19] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [20] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [21] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [22] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [23] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [24] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [25] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] os::javaTimeNanos()
  [ 1] os::elapsed_counter()
  [ 2] CompositeElapsedCounterSource::now()
  [ 3] G1EvacPhaseWithTrimTimeTracker::stop()
  [ 4] G1ScanRSForRegionClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 6] G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int)
  [ 7] G1ParTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] __os_ch_md_redzone_cookie
  [12] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] SemaphoreGangTaskDispatcher::worker_wait_for_task()
  [ 2] GangWorker::loop()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] __os_ch_md_redzone_cookie
  [ 6] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] ciObjectFactory::find_non_perm(oopDesc*)
  [ 1] ciEnv::ciEnv(CompileTask*, int)
  [ 2] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 3] CompileBroker::compiler_thread_loop()
  [ 4] JavaThread::thread_main_inner()
  [ 5] JavaThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*)
  [ 1] G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&, G1ParScanThreadStateSet*)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 3] VM_G1CollectForAllocation::doit()
  [ 4] VM_Operation::evaluate()
  [ 5] VMThread::evaluate_operation(VM_Operation*)
  [ 6] VMThread::loop()
  [ 7] VMThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] __os_ch_md_redzone_cookie
  [11] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, unsigned int, unsigned long)
  [ 2] G1ParScanThreadStateSet::state_for_worker(unsigned int)
  [ 3] G1ParTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] os::javaTimeNanos()
  [ 1] os::elapsed_counter()
  [ 2] CompositeElapsedCounterSource::now()
  [ 3] G1EvacPhaseWithTrimTimeTracker::stop()
  [ 4] G1ScanRSForRegionClosure::do_heap_region(HeapRegion*)
  [ 5] G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const
  [ 6] G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int)
  [ 7] G1ParTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] __os_ch_md_redzone_cookie
  [12] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] _platform_bzero$VARIANT$Haswell
  [ 1] G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*)
  [ 2] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 3] MemAllocator::mem_allocate(MemAllocator::Allocation&) const
  [ 4] MemAllocator::allocate() const
  [ 5] CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*)
  [ 6] TypeArrayKlass::allocate_common(int, bool, Thread*)
  [ 7] OptoRuntime::new_array_C(Klass*, int, JavaThread*)
  [ 8] io.trino.spi.block.RowBlockBuilder.<init>
  [ 9] io.trino.spi.type.RowType.createBlockBuilder
  [10] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [11] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [12] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [13] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [14] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] GenericTaskQueueSet<OverflowTaskQueue<StarTask, (MemoryType)5, 131072u>, (MemoryType)5>::steal_best_of_2(unsigned int, int*, StarTask&)
  [ 1] GenericTaskQueueSet<OverflowTaskQueue<StarTask, (MemoryType)5, 131072u>, (MemoryType)5>::steal(unsigned int, int*, StarTask&)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1ParTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 1] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 2] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 3] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 4] java.lang.reflect.Method.invoke
  [ 5] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 6] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 2] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 3] io.trino.spi.type.AbstractLongType.writeLong
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [11] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 2] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 3] io.trino.spi.type.AbstractLongType.writeLong
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [11] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.Arrays.copyOf
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 2] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 3] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 4] io.trino.spi.type.AbstractLongType.writeLong
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 9] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [11] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.isNotNull
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 8] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 9] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [10] java.lang.reflect.Method.invoke
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] mach_absolute_time
  [ 1] os::javaTimeNanos()
  [ 2] os::elapsedTime()
  [ 3] G1FreeCollectionSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int)
  [ 2] WorkGang::run_task(AbstractGangTask*, unsigned int)
  [ 3] G1CollectedHeap::redirty_logged_cards()
  [ 4] G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&, G1ParScanThreadStateSet*)
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 6] VM_G1CollectForAllocation::doit()
  [ 7] VM_Operation::evaluate()
  [ 8] VMThread::evaluate_operation(VM_Operation*)
  [ 9] VMThread::loop()
  [10] VMThread::run()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] __os_ch_md_redzone_cookie
  [14] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] semaphore_wait_trap
  [ 1] SemaphoreGangTaskDispatcher::worker_wait_for_task()
  [ 2] GangWorker::loop()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] __os_ch_md_redzone_cookie
  [ 6] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 2] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 3] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 5] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 6] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 7] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [ 1] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 2] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 3] io.trino.spi.type.AbstractLongType.writeLong
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [11] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] HeapRegion::report_region_type_change(G1HeapRegionTraceType::Type)
  [ 1] HeapRegion::set_eden()
  [ 2] G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool)
  [ 3] G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool)
  [ 4] G1CollectedHeap::attempt_allocation_slow(unsigned long)
  [ 5] G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*)
  [ 6] G1CollectedHeap::mem_allocate(unsigned long, bool*)
  [ 7] MemAllocator::mem_allocate(MemAllocator::Allocation&) const
  [ 8] MemAllocator::allocate() const
  [ 9] CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*)
  [10] TypeArrayKlass::allocate_common(int, bool, Thread*)
  [11] OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*)
  [12] java.util.Arrays.copyOf
  [13] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [14] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [15] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [16] io.trino.spi.type.AbstractLongType.writeLong
  [17] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [18] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [19] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [20] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [21] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [22] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [23] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [24] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] RegisterHumongousWithInCSetFastTestClosure::do_heap_region(HeapRegion*)
  [ 1] HeapRegionManager::iterate(HeapRegionClosure*) const
  [ 2] G1CollectedHeap::register_humongous_regions_with_cset()
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 4] VM_G1CollectForAllocation::doit()
  [ 5] VM_Operation::evaluate()
  [ 6] VMThread::evaluate_operation(VM_Operation*)
  [ 7] VMThread::loop()
  [ 8] VMThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] __os_ch_md_redzone_cookie
  [12] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] HSpaceCounters::update_used(unsigned long)
  [ 1] G1AllocRegion::retire_internal(HeapRegion*, bool)
  [ 2] MutatorAllocRegion::retire(bool)
  [ 3] G1CollectedHeap::attempt_allocation_slow(unsigned long)
  [ 4] G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*)
  [ 5] G1CollectedHeap::mem_allocate(unsigned long, bool*)
  [ 6] MemAllocator::mem_allocate(MemAllocator::Allocation&) const
  [ 7] MemAllocator::allocate() const
  [ 8] CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*)
  [ 9] TypeArrayKlass::allocate_common(int, bool, Thread*)
  [10] OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*)
  [11] java.util.Arrays.copyOf
  [12] io.trino.spi.block.LongArrayBlockBuilder.growCapacity
  [13] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [14] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [15] io.trino.spi.type.AbstractLongType.writeLong
  [16] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [17] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [18] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [19] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [20] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [21] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [22] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [23] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] methodHandle::~methodHandle()
  [ 1] frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool)
  [ 2] JavaThread::oops_do(OopClosure*, CodeBlobClosure*)
  [ 3] Threads::possibly_parallel_threads_do(bool, ThreadClosure*)
  [ 4] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 5] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 6] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1ParTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] __os_ch_md_redzone_cookie
  [12] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] G1RemSetScanState::G1ClearCardTableTask::work(unsigned int)
  [ 1] GangWorker::loop()
  [ 2] Thread::call_run()
  [ 3] thread_native_entry(Thread*)
  [ 4] __os_ch_md_redzone_cookie
  [ 5] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] SpinPause
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1ParTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] __os_ch_md_redzone_cookie
  [ 7] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.operator.aggregation.state.AbstractGroupedAccumulatorState.getGroupId
  [ 1] io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.isNotNull
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 2] java.util.concurrent.CountDownLatch.await
  [ 3] org.openjdk.jmh.runner.InfraControlL2.awaitWarmdownReady
  [ 4] org.openjdk.jmh.runner.InfraControl.awaitWarmdownReady
  [ 5] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 6] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 7] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 8] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 9] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [10] org.openjdk.jmh.runner.ForkedRunner.run
  [11] org.openjdk.jmh.runner.ForkedMain.main

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 1] VM_G1CollectForAllocation::doit()
  [ 2] VM_Operation::evaluate()
  [ 3] VMThread::evaluate_operation(VM_Operation*)
  [ 4] VMThread::loop()
  [ 5] VMThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] __os_ch_md_redzone_cookie
  [ 9] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] SubTasksDone::is_task_claimed(unsigned int)
  [ 1] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 2] G1ParTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] __os_ch_md_redzone_cookie
  [ 7] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 1] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 2] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 7] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
  [ 1] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 2] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1ParTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] __os_ch_md_redzone_cookie
  [ 8] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.writeLong
  [ 1] io.trino.spi.block.SingleRowBlockWriter.writeLong
  [ 2] io.trino.spi.type.AbstractLongType.writeLong
  [ 3] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 8] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool)
  [ 1] JavaThread::oops_do(OopClosure*, CodeBlobClosure*)
  [ 2] Threads::possibly_parallel_threads_do(bool, ThreadClosure*)
  [ 3] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 4] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 5] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 6] G1ParTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] __os_ch_md_redzone_cookie
  [11] internal_catch_exc_subsystem

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.trino.spi.block.LongArrayBlockBuilder.getSizeInBytes
  [ 1] io.trino.spi.block.SingleRowBlockWriter.<init>
  [ 2] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 3] io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  [ 4] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 5] io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  [ 6] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 7] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  [ 8] io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer.serialize
  [ 9] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
  [10] io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_AverageTime
  [11] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [12] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [13] java.lang.reflect.Method.invoke
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.Executors$RunnableAdapter.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] ImmutableOopMapSet::find_map_at_offset(int) const
  [ 1] OopMapSet::update_register_map(frame const*, RegisterMap*)
  [ 2] frame::sender_for_compiled_frame(RegisterMap*) const
  [ 3] frame::sender(RegisterMap*) const
  [ 4] OptoRuntime::is_deoptimized_caller_frame(JavaThread*)
  [ 5] OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*)
  [ 6] [not_walkable_Java]

          ns  percent  samples  top
  ----------  -------  -------  ---
  6740000000   19.40%      674  io.trino.spi.block.RowBlockBuilder.entryAdded
  6110000000   17.58%      611  io.trino.spi.block.LongArrayBlockBuilder.writeLong
  3110000000    8.95%      311  io.trino.spi.block.SingleRowBlockWriter.<init>
  2250000000    6.47%      225  io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateSerializerRowType.serialize
  2080000000    5.99%      208  io.trino.array.LongBigArray.get
  2030000000    5.84%      203  io.trino.operator.aggregation.state.BenchmarkLongDecimalWithOverflowAndLongStateSerializer$BenchmarkData.serialize
  1520000000    4.37%      152  java.util.Arrays.copyOf
  1380000000    3.97%      138  io.trino.array.BigArrays.offset
  1360000000    3.91%      136  io.trino.spi.block.RowBlockBuilder.beginBlockEntry
  1210000000    3.48%      121  io.trino.array.BooleanBigArray.get
  1130000000    3.25%      113  io.trino.spi.block.SingleRowBlockWriter.closeEntry
   960000000    2.76%       96  io.trino.spi.block.SingleRowBlockWriter.writeLong
   900000000    2.59%       90  io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.getOverflow
   520000000    1.50%       52  io.trino.array.BigArrays.segment
   500000000    1.44%       50  io.trino.array.LongBigArray.getSegment
   410000000    1.18%       41  io.trino.spi.block.SingleRowBlockWriter.checkFieldIndexToWrite
   400000000    1.15%       40  io.trino.spi.block.LongArrayBlockBuilder.getSizeInBytes
   290000000    0.83%       29  io.trino.spi.block.RowBlockBuilder.closeEntry
   270000000    0.78%       27  io.trino.operator.aggregation.state.LongDecimalWithOverflowAndLongStateFactory$GroupedLongDecimalWithOverflowAndLongState.getLong
   250000000    0.72%       25  io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.getDecimalArray
   200000000    0.58%       20  io.trino.spi.block.LongArrayBlockBuilder.getPositionCount
   130000000    0.37%       13  __psynch_cvwait
   120000000    0.35%       12  io.trino.spi.block.LongArrayBlockBuilder.<init>
   110000000    0.32%       11  SpinPause
   100000000    0.29%       10  io.trino.spi.block.RowBlockBuilder.<init>
    80000000    0.23%        8  semaphore_wait_trap
    50000000    0.14%        5  io.trino.spi.block.LongArrayBlockBuilder.growCapacity
    40000000    0.12%        4  os::javaTimeNanos()
    30000000    0.09%        3  _platform_bzero$VARIANT$Haswell
    30000000    0.09%        3  G1RemSetScanState::G1ResetScanTopClosure::do_heap_region(HeapRegion*)
    20000000    0.06%        2  G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const
    20000000    0.06%        2  G1RemSetScanState::reset()
    20000000    0.06%        2  G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*)
    20000000    0.06%        2  io.trino.spi.block.AbstractRowBlock.<init>
    20000000    0.06%        2  HeapRegionManager::iterate(HeapRegionClosure*) const
    10000000    0.03%        1  io.trino.operator.aggregation.state.AbstractGroupedAccumulatorState.getGroupId
    10000000    0.03%        1  InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool)
    10000000    0.03%        1  ImmutableOopMapSet::find_map_at_offset(int) const
    10000000    0.03%        1  I2C/C2I adapters
    10000000    0.03%        1  [unknown]
    10000000    0.03%        1  HeapRegion::report_region_type_change(G1HeapRegionTraceType::Type)
    10000000    0.03%        1  io.trino.operator.aggregation.state.LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState.isNotNull
    10000000    0.03%        1  io.trino.operator.aggregation.state.jmh_generated.BenchmarkLongDecimalWithOverflowAndLongStateSerializer_serialize_jmhTest.serialize_avgt_jmhStub
    10000000    0.03%        1  LIRGenerator::LIRGenerator(Compilation*, ciMethod*)
    10000000    0.03%        1  HSpaceCounters::update_used(unsigned long)
    10000000    0.03%        1  GenericTaskQueueSet<OverflowTaskQueue<StarTask, (MemoryType)5, 131072u>, (MemoryType)5>::steal_best_of_2(unsigned int, int*, StarTask&)
    10000000    0.03%        1  GCId::current()
    10000000    0.03%        1  WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*)
    10000000    0.03%        1  io.trino.spi.block.LongArrayBlockBuilder.updateDataSize
    10000000    0.03%        1  Monitor::TryFast()
    10000000    0.03%        1  G1ScanRSForRegionClosure::do_heap_region(HeapRegion*)
    10000000    0.03%        1  RegisterHumongousWithInCSetFastTestClosure::do_heap_region(HeapRegion*)
    10000000    0.03%        1  SubTasksDone::is_task_claimed(unsigned int)
    10000000    0.03%        1  G1RemSetScanState::G1ClearCardTableTask::work(unsigned int)
    10000000    0.03%        1  frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool)
    10000000    0.03%        1  G1CollectedHeap::do_collection_pause_at_safepoint(double)
    10000000    0.03%        1  G1CMRootRegions::wait_until_scan_finished()
    10000000    0.03%        1  G1Allocator::old_attempt_allocation(unsigned long, unsigned long, unsigned long*)
    10000000    0.03%        1  ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
    10000000    0.03%        1  java.util.ImmutableCollections$ListN.size
    10000000    0.03%        1  java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
    10000000    0.03%        1  java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly
    10000000    0.03%        1  mach_absolute_time
    10000000    0.03%        1  methodHandle::~methodHandle()
    10000000    0.03%        1  org.openjdk.jmh.runner.BenchmarkHandler.runIteration
    10000000    0.03%        1  os::elapsedTime()
    10000000    0.03%        1  ciObjectFactory::find_non_perm(oopDesc*)
    10000000    0.03%        1  semaphore_signal_trap
    10000000    0.03%        1  AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum)
