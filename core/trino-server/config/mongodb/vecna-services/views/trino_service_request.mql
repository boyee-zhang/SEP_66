//  Create a view of all service requests.
//  One row per service request.
//
// Initial version to support admin views.
// - Includes current status and special-coded timestamps.

db.trino_service_request.drop();

db.createView(
  "trino_service_request",
  "ServiceRequest",
  [
    {
      $lookup: {
        from: "ServiceRequestStatus",
        localField: "serviceRequestStatusUUID",
        foreignField: "serviceRequestStatusUUID",
        as: "serviceRequestStatus",
      },
    },
    {
      $lookup: {
        from: "ServiceRequestTimer",
        localField: "serviceRequestTimerUUID",
        foreignField: "serviceRequestTimerUUID",
        as: "serviceRequestTimer",
      },
    },
    {
      $addFields: {
        serviceRequestStatus: {
          $first: "$serviceRequestStatus",
        },
        serviceRequestTimer: {
          $first: "$serviceRequestTimer",
        },
      },
    },
    {
      $project: {
        _id: 0,
        id: "$_id",
        tenant_uuid: "$tenantInfoUUID",
        org_uuid: "$belongOrgUUID",
        org_type_code: "$belongOrgType",
        service_request_uuid: "$serviceRequestUUID",
        patient_uuid: "$patientUUID",
        service_uuid: "$belongServConfUUID",
        appointment_uuid: "$belongApptExternalUUID",
        patient_interaction_uuid: "$belongPatientInteractionUUID",
        alert_uuid: "$alertUUID",
        location_code: null,
        status_code: "$serviceRequestStatus.statusCode",
        status_category_code: "$serviceRequestStatus.statusCategoryCode",
        started_tstz: {
          $add: [ new Date(0), "$serviceRequestTimer.startServiceRequestTimePoint"]
        },
        waiting_tstz: {
          $add: [ new Date(0), "$serviceRequestTimer.startWaitingTimePoint"]
        },
        processing_tstz: {
          $add: [ new Date(0), "$serviceRequestTimer.startProcessingTimePoint"]
        },
        not_seen_tstz: {
          $add: [ new Date(0), "$serviceRequestTimer.notSeenServiceRequestTimePoint"]
        },
        completed_tstz: {
          $add: [ new Date(0), "$serviceRequestTimer.completeServiceRequestTimePoint"]
        },
        create_tstz: "$createDate",
        update_tstz: "$updateDate",
      },
    },
  ]
);
