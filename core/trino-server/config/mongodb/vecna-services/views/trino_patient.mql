//  Create a view of all patients.
//  One row per patient.
//
//  Initial version for supporting admin views.
//  - Includes dynamic field data:
//    - first_name
//    - last_name
//    - dob         (varchar: 'yyyy-MM-dd')
//    - birth_date  (UTC_DATE)
//  - Coalesces "dfnVA" and "mrn" fields as "mrn".
//  - Coalescea "mrnSouce" and 'VA_DFN' as "mrn_source".

db.trino_patient.drop();

db.createView(
  "trino_patient",
  "Patient",
  [
    {
      $project: {
        _id: 0,
        id: "$_id",
        patient_uuid: "$patientUUID",
        tenant_uuid: "$tenantInfoUUID",
        mrn: {
          $ifNull: ["$dfnVA", "$mrn"],
        },
        mrn_source: {
          $ifNull: ["$mrnSource", "VA_DFN"],
        },
        alive_consumer_uuid:
          "$aliveConsumerPatientUUID",
        empi: "$empi",
        last_name: {
          $arrayElemAt: [
            "$patientClearanceFieldValueList.clearanceFieldValue",
            {
              $indexOfArray: [
                "$patientClearanceFieldValueList.clearanceFieldCode",
                "LAST_NAME",
              ],
            },
          ],
        },
        first_name: {
          $arrayElemAt: [
            "$patientClearanceFieldValueList.clearanceFieldValue",
            {
              $indexOfArray: [
                "$patientClearanceFieldValueList.clearanceFieldCode",
                "FIRST_NAME",
              ],
            },
          ],
        },
        birth_date_string: {
          $arrayElemAt: [
            "$apptClearanceFieldValueList.clearanceFieldValue",
            {
              $indexOfArray: [
                "$apptClearanceFieldValueList.clearanceFieldCode",
                "DOB",
              ],
            },
          ],
        },
        create_tstz: "$createDate",
        update_tstz: "$updateDate",
      },
    },
    {
      $addFields: {
        birth_date: {
          $switch: {
            branches: [
              {
                case: {
                  $regexMatch: {
                    input:
                      "$birth_date_string",
                    regex:
                      /^\d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])/,
                  },
                },
                then: {
                  $dateFromString: {
                    dateString: {
                      $substr: [
                        "$patient_birth_date_string",
                        0,
                        10,
                      ],
                    },
                  },
                },
              },
            ],
            default: null,
          },
        },
      },
    },
  ]
);
