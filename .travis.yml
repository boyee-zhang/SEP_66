language: java

env:
  global:
    - MAVEN_OPTS="-Xmx512M -XX:+ExitOnOutOfMemoryError"
    - MAVEN_SKIP_CHECKS_AND_DOCS="-Dair.check.skip-all=true -Dmaven.javadoc.skip=true"
    - MAVEN_FAST_INSTALL="-DskipTests $MAVEN_SKIP_CHECKS_AND_DOCS -B -q -T C1"
    - ARTIFACTS_UPLOAD_PATH_BRANCH=travis_build_artifacts/${TRAVIS_REPO_SLUG}/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}
    - ARTIFACTS_UPLOAD_PATH_PR=travis_build_artifacts_pr/${TRAVIS_REPO_SLUG}/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}
    - TEST_FLAGS=""
  matrix:
    - MAVEN_CHECKS=true
    - WEBUI_CHECKS=true
    - TEST_SPECIFIC_MODULES=presto-tests
    - TEST_SPECIFIC_MODULES=presto-tests TEST_FLAGS="-P ci-only"
    - TEST_SPECIFIC_MODULES=presto-raptor-legacy
    - TEST_SPECIFIC_MODULES=presto-accumulo
    - TEST_SPECIFIC_MODULES=presto-cassandra
    - TEST_SPECIFIC_MODULES=presto-hive
    - TEST_SPECIFIC_MODULES=presto-main
    - TEST_SPECIFIC_MODULES=presto-orc,presto-parquet
    - TEST_SPECIFIC_MODULES=presto-mongodb
    - TEST_SPECIFIC_MODULES=presto-redis
    - TEST_SPECIFIC_MODULES=presto-sqlserver,presto-postgresql,presto-mysql
    - TEST_SPECIFIC_MODULES=presto-kudu MODULES_WITH_EXTRA_TESTS=presto-kudu
    - TEST_OTHER_MODULES=!presto-tests,!presto-raptor-legacy,!presto-accumulo,!presto-cassandra,!presto-hive,!presto-kudu,!presto-docs,!presto-server,!presto-server-rpm,!presto-main,!presto-orc,!presto-parquet,!presto-mongodb,!presto-redis,!presto-sqlserver,!presto-postgresql,!presto-mysql
    - PRODUCT_TESTS_BASIC_ENVIRONMENT=true
    - PRODUCT_TESTS_SPECIFIC_ENVIRONMENT=true
    - PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2=true
    - HIVE_TESTS=true

dist: xenial
jdk: openjdk8

cache:
  yarn: true
  directories:
    - $HOME/.m2/repository

git:
  quiet: true

install:
  - travis_retry ./mvnw -v
  - |
    if [[ -v TEST_OTHER_MODULES ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl '!presto-docs,!presto-server,!presto-server-rpm'
    fi
  - |
    if [[ -v TEST_SPECIFIC_MODULES || -v PRODUCT_TESTS_BASIC_ENVIRONMENT || -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT || -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2 ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl '!presto-docs,!presto-server-rpm'
    fi
  - |
    if [[ -v HIVE_TESTS ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl presto-hive-hadoop2 -am
    fi

before_script:
  - |
    export ARTIFACTS_UPLOAD_PATH=${ARTIFACTS_UPLOAD_PATH_BRANCH}
    if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
      export ARTIFACTS_UPLOAD_PATH="${ARTIFACTS_UPLOAD_PATH_PR}"
    fi

# *** WARNING ***
#
# A single script block must include exactly ONE command.
# Travis runs a script block without the `-e` flag. Any failures in the middle are simply ignored.
#
# Specifying the `-e` flag manually is not recommended.
# It will stop the execution after the very first failure.
# Travis runs the remaining blocks even if one of the scripts returns a non zero status.
# Non zero status is propagated at the end of the build.
script:
  - |
    if [[ -v MAVEN_CHECKS ]]; then
      ./mvnw install -DskipTests -B -T C1 -P ci
    fi
  - |
    if [[ -v WEBUI_CHECKS ]]; then
      presto-main/bin/check_webui.sh
    fi
  - |
    if [[ -v TEST_SPECIFIC_MODULES ]]; then
      ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS -B -pl "${TEST_SPECIFIC_MODULES}" $TEST_FLAGS
    fi
  - |
    if [[ -v TEST_OTHER_MODULES ]]; then
      ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS -B -pl "${TEST_OTHER_MODULES}"
    fi
  - |
    if [[ -v PRODUCT_TESTS_BASIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        multinode -x quarantine,big_query,storage_formats,profile_specific_tests,tpcds,cassandra,mysql_connector,postgresql_connector,mysql,kafka,avro
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode -g hdfs_no_impersonation,avro
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-kerberos-hdfs-no-impersonation -g hdfs_no_impersonation
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-hdfs-impersonation -g storage_formats,cli,hdfs_impersonation
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-kerberos-hdfs-impersonation -g storage_formats,cli,hdfs_impersonation,authorization,hive_file_header
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-kerberos-hdfs-impersonation-cross-realm -g storage_formats,cli,hdfs_impersonation
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2 ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-ldap -g ldap -x simba_jdbc
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-sqlserver -g sqlserver
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2 ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        multinode-tls -g smoke,cli,group-by,join,tls
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2 ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-mysql -g mysql_connector,mysql
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2 ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-postgresql -g postgresql_connector
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2 ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-cassandra -g cassandra
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        multinode-tls-kerberos -g cli,group-by,join,tls
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2 ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-kerberos-hdfs-impersonation-with-wire-encryption -g storage_formats,cli,hdfs_impersonation,authorization
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT_2 ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-kafka -g kafka
    fi
  - |
    if [[ -v HIVE_TESTS ]]; then
      presto-hive-hadoop2/bin/run_hive_tests.sh
    fi
  - |
    if [[ -v HIVE_TESTS && -v HIVE_TESTS_AWS_ACCESS_KEY_ID ]]; then
      env AWS_ACCESS_KEY_ID="${HIVE_TESTS_AWS_ACCESS_KEY_ID}" \
        AWS_SECRET_ACCESS_KEY="${HIVE_TESTS_AWS_SECRET_ACCESS_KEY}" \
        S3_BUCKET_ENDPOINT="${S3_TESTS_BUCKET_ENDPOINT}" \
        S3_BUCKET="${S3_TESTS_BUCKET}" \
        presto-hive-hadoop2/bin/run_hive_s3_tests.sh
    fi
  - |
    if [[ -v HIVE_TESTS && -v HIVE_TESTS_AWS_ACCESS_KEY_ID ]]; then
      env AWS_ACCESS_KEY_ID="${HIVE_TESTS_AWS_ACCESS_KEY_ID}" \
        AWS_SECRET_ACCESS_KEY="${HIVE_TESTS_AWS_SECRET_ACCESS_KEY}" \
        ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS -B -pl presto-hive -P test-hive-glue
    fi
  - |
    if [[ -v MODULES_WITH_EXTRA_TESTS ]]; then
        ./bin/run_tests_for_modules.sh "${MODULES_WITH_EXTRA_TESTS}"
    fi

before_cache:
  # Make the cache stable between builds by removing build output
  - rm -rf $HOME/.m2/repository/io/prestosql

notifications:
  slack:
    secure: NPHH9nIuInY3v4Jvl1ywC5BlygY9YiVni6LLcR52nwdx/FocO9j80aNKx/kuso+nGRM3dmWKPWdk8ShOOS2ZRvYXQUe2Gy6wSnlwqjKGaHEReZA5hOFuYfTQw0Gh7WGzwiuYpvAzhXzn31GvL92M24Oq0kqP64sA9nndBAT3uMv5PdQV40JtL8kQdh66wHuwtJ/LrljWKTwrTJH8NcGc7I6MLljxe+3n1zy49J7MqVyGdBdFA6CMc6Abgc3XKfsadJH3QFC05LfyOQqMjCutSd+HWkl7yMFLWpddLj0C9DdpG1z7324gcQjlLbDGI3Mc3vd/bTLnanIgQ4ZIWSK8/0j8u/dJw0DPUkO82sZ+1nvtwNvE+C67M2vxlunRuxEwEIw7a6cUuguKh/EhZYDccF6523kFPyCLs8zSKdScCjjz4pj+jj3niug/tBiSRebwhcfLnWlQp7trY54ETtvwjAidGfXwuqO07FsNJL2gweg+axFhcSqFos7VwWeJVB1bVGg1PYM3wFarr25aQstIvE+Ap9Mym1MXXhswwe09BYQiOzoiK/CYAKrQT3IjLBGOM8P+uh2rv4w+wUNlgfUnG9A9aiRAlw+9uXDgFIR59y3SylKtWabDtX5khO/5TTlzc4Cq3tGSoNPPJ+WAtUISGrgCjQAVVnhdZ7chi4aLt5s=
